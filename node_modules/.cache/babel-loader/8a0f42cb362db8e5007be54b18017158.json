{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\copiaswaps-client\\\\swaps-client\\\\src\\\\views\\\\Referrals\\\\Referrals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { ETH_DECIMALS, expandDecimals, fetcher, getPageTitle, useChainId, useENS, isHashZero, useLocalStorageSerializeKey, bigNumberify, formatTimeTill, getTokenInfo } from \"../../Helpers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport * as Styles from \"./Referrals.styles\";\nimport CreateCodeModal from \"./CreateCodeModal\";\nimport EnterCodeModal from \"./EnterCodeModal\";\nimport SEO from \"../../components/Common/SEO\";\nimport ViewSwitchTriple from \"../../components/ViewSwitchTriple/ViewSwitchTriple\";\nimport TraderRebateStats from \"./TraderRebateStats\";\nimport ReferralRewards from \"./ReferralRewards\";\nimport AccountBanner from \"./AccountBanner\";\nimport ReferralCodesTable from \"./ReferralCodesTable\";\nimport { useLocalStorage } from \"react-use\";\nimport { decodeReferralCode, useReferralsData, useReferrerTier, useUserReferralCode, useCodeOwner } from \"../../Api/referrals\";\nimport useSWR from \"swr\";\nimport { ethers } from \"ethers\";\nimport { useLocation } from \"react-router-dom\";\nimport FeeDistributorReader from \"../../abis/FeeDistributorReader.json\";\nimport { getContract } from \"../../Addresses\";\nimport { REFERRALS_SELECTED_TAB_KEY, REFERRAL_CODE_KEY } from \"../../config/localstorage\";\nimport ReferralLeaderboard from \"./ReferralLeaderboard\";\nimport { getServerUrl } from \"src/lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst REFERRAL_DATA_MAX_TIME = 60000 * 5; // 5 minutes\n\nexport function isRecentReferralCodeNotExpired(referralCodeInfo) {\n  if (referralCodeInfo.time) {\n    return referralCodeInfo.time + REFERRAL_DATA_MAX_TIME > Date.now();\n  }\n}\n\nconst RebatesHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"Page-title-section mt-0\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page-title\",\n    children: \"Referral Program || Coming Soon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page-description\",\n    children: \"You will be able to read our referral program on our gitbook\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 3\n}, this);\n\n_c = RebatesHeader;\n\nconst CommissionsHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"Page-title-section mt-0\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page-title\",\n    children: \"Referral Commissions\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page-description\",\n    children: \"Claim referral commissions here.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this);\n\n_c2 = CommissionsHeader;\n\nconst LeaderboardHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"Page-title-section mt-0\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page-title\",\n    children: \"Commissions Leaderboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page-description\",\n    children: \"Distribute a referral code and earn commissions on referred volume.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 3\n}, this);\n\n_c3 = LeaderboardHeader;\nexport const COMMISSIONS = \"Commissions\";\nexport const REBATES = \"Rebates\";\nexport const LEADERBOARD = \"Commissions Leaderboard\";\nexport const COMMISSIONS_HASH = \"#commissions\";\nexport const REBATES_HASH = \"#rebates\";\nexport const LEADERBOARD_HASH = \"#leaderboard\";\nconst HASH_BY_VIEW = {\n  [COMMISSIONS]: COMMISSIONS_HASH,\n  [REBATES]: REBATES_HASH,\n  [LEADERBOARD]: LEADERBOARD_HASH\n};\nexport default function Referral(props) {\n  _s();\n\n  var _allRoundsRewardsData, _referrerTierInfo, _cumulativeStats, _referralTotalStats, _referralTotalStats2, _referralsData$codes;\n\n  const location = useLocation();\n  const {\n    connectWallet,\n    trackAction,\n    infoTokens\n  } = props;\n  const {\n    active,\n    account,\n    library,\n    chainId: chainIdWithoutLocalStorage,\n    pendingTxns,\n    setPendingTxns\n  } = useWeb3React();\n  const {\n    chainId\n  } = useChainId();\n  const {\n    ensName\n  } = useENS(account);\n  const {\n    data: referralsData\n  } = useReferralsData(chainIdWithoutLocalStorage, account);\n  const [recentlyAddedCodes, setRecentlyAddedCodes] = useLocalStorageSerializeKey([chainId, \"REFERRAL\", account], []);\n  const {\n    userReferralCode\n  } = useUserReferralCode(library, chainId, account);\n  const {\n    codeOwner\n  } = useCodeOwner(library, chainId, account, userReferralCode);\n  const {\n    referrerTier: tradersTier\n  } = useReferrerTier(library, chainId, codeOwner);\n  const userReferralCodeInLocalStorage = window.localStorage.getItem(REFERRAL_CODE_KEY);\n  const [currentView, setCurrentView] = useLocalStorage(REFERRALS_SELECTED_TAB_KEY, REBATES);\n  const [isEnterCodeModalVisible, setIsEnterCodeModalVisible] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [isCreateCodeModalVisible, setIsCreateCodeModalVisible] = useState(false);\n  const [selectedRound, setSelectedRound] = useState(\"latest\");\n  const [nextRewards, setNextRewards] = useState();\n  const eth = getTokenInfo(infoTokens, ethers.constants.AddressZero);\n  const ethPrice = eth === null || eth === void 0 ? void 0 : eth.maxPrimaryPrice;\n\n  const switchView = view => {\n    setCurrentView(view);\n    const hash = HASH_BY_VIEW[view]; // Update hash\n\n    if (window.history.pushState) {\n      window.history.pushState(null, null, hash);\n    } else {\n      location.hash = hash;\n    }\n\n    trackAction && trackAction(\"Button clicked\", {\n      buttonName: \"Referral panel\",\n      view: view\n    });\n  };\n\n  function handleClaim() {// TODO handle claim\n  }\n\n  const feeDistributor = getContract(chainId, \"FeeDistributor\");\n  const feeDistributorReader = getContract(chainId, \"FeeDistributorReader\"); // Fetch all week data from server\n\n  const {\n    data: allRoundsRewardsData_,\n    error: failedFetchingRewards\n  } = useSWR([getServerUrl(chainId, \"/referralRewards\")], {\n    fetcher: function () {\n      return fetch(...arguments).then(res => res.json());\n    }\n  });\n  const allRoundsRewardsData = Array.isArray(allRoundsRewardsData_) ? allRoundsRewardsData_ : undefined; // Fetch only the latest week's data from server\n\n  const {\n    data: currentRewardRound,\n    error: failedFetchingRoundRewards\n  } = useSWR([getServerUrl(chainId, \"/referralRewards\"), selectedRound], {\n    fetcher: (url, week) => fetch(`${url}&round=${week}`).then(res => res.json())\n  });\n  const allUsersRoundData = useMemo(() => {\n    var _currentRewardRound$r;\n\n    if (!allRoundsRewardsData || !ethPrice) {\n      return undefined;\n    }\n\n    return currentRewardRound === null || currentRewardRound === void 0 ? void 0 : (_currentRewardRound$r = currentRewardRound.rewards) === null || _currentRewardRound$r === void 0 ? void 0 : _currentRewardRound$r.sort((a, b) => b.commissions_volume.toString() - a.commissions_volume.toString()).map((trader, index) => {\n      const commissions = bigNumberify(trader.commissions);\n      const rebates = bigNumberify(trader.rebates);\n      return {\n        position: index + 1,\n        address: trader.user_address,\n        volume: bigNumberify(trader.commissions_volume),\n        totalReward: commissions,\n        totalRewardUsd: commissions.mul(ethPrice).div(expandDecimals(1, ETH_DECIMALS)),\n        referralCode: trader.referral_code,\n        numberOfTrades: trader.number_of_trades,\n        tradersReferred: trader.total_traders_referred,\n        tier: trader.tier,\n        commissions,\n        rebates\n      };\n    });\n  }, [ethPrice, allRoundsRewardsData, currentRewardRound === null || currentRewardRound === void 0 ? void 0 : currentRewardRound.rewards]);\n  const {\n    data: hasClaimed\n  } = useSWR([`Rewards:claimed:${active}`, chainId, feeDistributorReader, \"getUserClaimed\", feeDistributor, account !== null && account !== void 0 ? account : ethers.constants.AddressZero, (_allRoundsRewardsData = allRoundsRewardsData === null || allRoundsRewardsData === void 0 ? void 0 : allRoundsRewardsData.length) !== null && _allRoundsRewardsData !== void 0 ? _allRoundsRewardsData : 1], {\n    fetcher: fetcher(library, FeeDistributorReader)\n  });\n  useEffect(() => {\n    if (!!allRoundsRewardsData) {\n      const ends = allRoundsRewardsData.map(week => Number(week.end));\n      const max = Math.max(...ends);\n\n      if (!Number.isNaN(max)) {\n        setNextRewards(max);\n      }\n    }\n  }, [allRoundsRewardsData]); // Get volume, position and reward from user week data\n\n  const userRoundData = useMemo(() => {\n    var _currentRewardRound$r2;\n\n    if (!currentRewardRound || !allUsersRoundData) {\n      return undefined;\n    }\n\n    allUsersRoundData.findIndex(trader => trader.address === account);\n    const leaderBoardIndex = (_currentRewardRound$r2 = currentRewardRound.rewards) === null || _currentRewardRound$r2 === void 0 ? void 0 : _currentRewardRound$r2.findIndex(trader => trader.user_address.toLowerCase() === (account === null || account === void 0 ? void 0 : account.toLowerCase()));\n    let traderData;\n\n    if (leaderBoardIndex !== undefined && leaderBoardIndex >= 0) {\n      traderData = currentRewardRound.rewards[leaderBoardIndex];\n    } // trader's data found\n\n\n    if (traderData) {\n      const commissions = bigNumberify(traderData.commissions);\n      const rebates = bigNumberify(traderData.rebates);\n      return {\n        position: leaderBoardIndex + 1,\n        address: traderData.user_address,\n        volume: bigNumberify(traderData.commissions_volume),\n        totalReward: commissions.add(rebates),\n        totalRewardUsd: commissions.add(rebates).mul(ethPrice).div(expandDecimals(1, ETH_DECIMALS)),\n        referralCode: traderData.referral_code,\n        numberOfTrades: parseInt(traderData.number_of_trades),\n        tradersReferred: traderData.traders_referred,\n        tier: traderData.tier,\n        commissions,\n        rebates\n      };\n    } else {\n      return {\n        volume: bigNumberify(0),\n        totalReward: bigNumberify(0),\n        commissions: bigNumberify(0),\n        rebates: bigNumberify(0)\n      };\n    }\n  }, [account, currentRewardRound, allUsersRoundData, ethPrice]);\n\n  if (ethPrice && userRoundData !== null && userRoundData !== void 0 && userRoundData.totalReward) {\n    var _userRoundData$totalR;\n\n    userRoundData.totalRewardUsd = (_userRoundData$totalR = userRoundData.totalReward) === null || _userRoundData$totalR === void 0 ? void 0 : _userRoundData$totalR.mul(ethPrice).div(expandDecimals(1, ETH_DECIMALS));\n  }\n\n  let referralCodeInString;\n\n  if (userReferralCode && !isHashZero(userReferralCode)) {\n    referralCodeInString = decodeReferralCode(userReferralCode);\n  }\n\n  if (!referralCodeInString && userReferralCodeInLocalStorage && !isHashZero(userReferralCodeInLocalStorage)) {\n    referralCodeInString = decodeReferralCode(userReferralCodeInLocalStorage);\n  }\n\n  let cumulativeStats, referrerTotalStats, referrerTierInfo, referralTotalStats\n  /*, rebateDistributions */\n  ;\n\n  if (referralsData) {\n    ({\n      cumulativeStats,\n      referrerTotalStats,\n      referrerTierInfo,\n      referralTotalStats\n      /*, rebateDistributions */\n\n    } = referralsData);\n  }\n\n  const finalReferrerTotalStats = recentlyAddedCodes.filter(isRecentReferralCodeNotExpired).reduce((acc, cv) => {\n    var _referrerTotalStats;\n\n    const addedCodes = (_referrerTotalStats = referrerTotalStats) === null || _referrerTotalStats === void 0 ? void 0 : _referrerTotalStats.map(c => c.referralCode.trim());\n\n    if (addedCodes && !addedCodes.includes(cv.referralCode)) {\n      // BigNumbers get converted in local storage, need to convert them back\n      cv.totalRebateUsd = bigNumberify(cv.totalRebateUsd);\n      cv.volume = bigNumberify(cv.volume);\n      cv.discountUsd = bigNumberify(cv.discountUsd);\n      acc = acc.concat(cv);\n    }\n\n    return acc;\n  }, referrerTotalStats);\n  const referrerTier = (_referrerTierInfo = referrerTierInfo) === null || _referrerTierInfo === void 0 ? void 0 : _referrerTierInfo.tierId;\n  let referrerRebates = bigNumberify(0);\n\n  if (cumulativeStats && cumulativeStats.totalRebateUsd && cumulativeStats.discountUsd) {\n    referrerRebates = cumulativeStats.totalRebateUsd.sub(cumulativeStats.discountUsd);\n  }\n\n  let referrerVolume = (_cumulativeStats = cumulativeStats) === null || _cumulativeStats === void 0 ? void 0 : _cumulativeStats.volume;\n  let tradersVolume = (_referralTotalStats = referralTotalStats) === null || _referralTotalStats === void 0 ? void 0 : _referralTotalStats.volume;\n  let tradersRebates = (_referralTotalStats2 = referralTotalStats) === null || _referralTotalStats2 === void 0 ? void 0 : _referralTotalStats2.discountUsd;\n  let hasCreatedCode = referralsData && (referralsData === null || referralsData === void 0 ? void 0 : (_referralsData$codes = referralsData.codes) === null || _referralsData$codes === void 0 ? void 0 : _referralsData$codes.length) > 0; // // Segment Analytics Page tracking\n  // useEffect(() => {\n  //   if (!pageTracked && currentReferralRound && analytics) {\n  //     const traits = {\n  //       week: currentReferralRound.key,\n  //     };\n  //     trackPageWithTraits(traits);\n  //     setPageTracked(true); // Prevent Page function being called twice\n  //   }\n  // }, [currentReferralRound, pageTracked, trackPageWithTraits, analytics]);\n\n  let rewardsMessage = \"\";\n\n  if (!currentRewardRound) {\n    rewardsMessage = \"Fetching rewards\";\n  } else if (!!failedFetchingRoundRewards) {\n    rewardsMessage = \"Failed fetching current week rewards\";\n  } else if (!!failedFetchingRewards) {\n    rewardsMessage = \"Failed fetching rewards\";\n  } else {\n    if ((currentRewardRound === null || currentRewardRound === void 0 ? void 0 : currentRewardRound.length) === 0) {\n      rewardsMessage = \"No rewards\";\n    } else if (selectedRound === \"latest\") {\n      rewardsMessage = `Round ${Number.parseInt(currentRewardRound.round) + 1}`;\n    } else {\n      rewardsMessage = `Round ${selectedRound + 1}`;\n    }\n  }\n\n  let timeTillRewards;\n\n  if (nextRewards) {\n    timeTillRewards = formatTimeTill(nextRewards / 1000);\n  }\n\n  const isLatestRound = selectedRound === \"latest\";\n  let hasClaimedRound;\n\n  if (selectedRound !== \"latest\" && hasClaimed) {\n    hasClaimedRound = hasClaimed[selectedRound];\n  }\n\n  const handleSetIsEnterCodeModalVisible = isEdit => {\n    setIsEdit(isEdit);\n    setIsEnterCodeModalVisible(true);\n  }; // Change view based on window hash\n\n\n  useEffect(() => {\n    const hash = window.location.hash;\n\n    if (hash === REBATES_HASH) {\n      setCurrentView(REBATES);\n    } else if (hash === COMMISSIONS_HASH) {\n      setCurrentView(COMMISSIONS);\n    } else if (hash === LEADERBOARD_HASH) {\n      setCurrentView(LEADERBOARD);\n    } else {\n      setCurrentView(REBATES);\n    }\n  }, [setCurrentView, location.hash]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SEO, {\n      title: getPageTitle(\"Referral\"),\n      description: \"Use a referral code on Mycelium Perpetual Swaps to earn rebates on trading fees.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EnterCodeModal, {\n      active: active,\n      chainId: chainId,\n      library: library,\n      connectWallet: connectWallet,\n      isEnterCodeModalVisible: isEnterCodeModalVisible,\n      setIsEnterCodeModalVisible: setIsEnterCodeModalVisible,\n      isEdit: isEdit,\n      referralCodeInString: referralCodeInString,\n      pendingTxns: pendingTxns,\n      setPendingTxns: setPendingTxns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateCodeModal, {\n      active: active,\n      chainId: chainId,\n      library: library,\n      connectWallet: connectWallet,\n      isCreateCodeModalVisible: isCreateCodeModalVisible,\n      setIsCreateCodeModalVisible: setIsCreateCodeModalVisible,\n      recentlyAddedCodes: recentlyAddedCodes,\n      setRecentlyAddedCodes: setRecentlyAddedCodes,\n      pendingTxns: pendingTxns,\n      setPendingTxns: setPendingTxns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styles.StyledReferralPage, {\n      className: \"default-container page-layout\",\n      children: {\n        [REBATES]: /*#__PURE__*/_jsxDEV(RebatesHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 24\n        }, this),\n        [COMMISSIONS]: /*#__PURE__*/_jsxDEV(CommissionsHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 28\n        }, this),\n        [LEADERBOARD]: /*#__PURE__*/_jsxDEV(LeaderboardHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 28\n        }, this)\n      }[currentView]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Referral, \"00vA7vce60ip56iP7mRpN8RvAt4=\", false, function () {\n  return [useLocation, useWeb3React, useChainId, useENS, useReferralsData, useLocalStorageSerializeKey, useUserReferralCode, useCodeOwner, useReferrerTier, useLocalStorage, useSWR, useSWR, useSWR];\n});\n\n_c4 = Referral;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"RebatesHeader\");\n$RefreshReg$(_c2, \"CommissionsHeader\");\n$RefreshReg$(_c3, \"LeaderboardHeader\");\n$RefreshReg$(_c4, \"Referral\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","ETH_DECIMALS","expandDecimals","fetcher","getPageTitle","useChainId","useENS","isHashZero","useLocalStorageSerializeKey","bigNumberify","formatTimeTill","getTokenInfo","useWeb3React","Styles","CreateCodeModal","EnterCodeModal","SEO","ViewSwitchTriple","TraderRebateStats","ReferralRewards","AccountBanner","ReferralCodesTable","useLocalStorage","decodeReferralCode","useReferralsData","useReferrerTier","useUserReferralCode","useCodeOwner","useSWR","ethers","useLocation","FeeDistributorReader","getContract","REFERRALS_SELECTED_TAB_KEY","REFERRAL_CODE_KEY","ReferralLeaderboard","getServerUrl","REFERRAL_DATA_MAX_TIME","isRecentReferralCodeNotExpired","referralCodeInfo","time","Date","now","RebatesHeader","CommissionsHeader","LeaderboardHeader","COMMISSIONS","REBATES","LEADERBOARD","COMMISSIONS_HASH","REBATES_HASH","LEADERBOARD_HASH","HASH_BY_VIEW","Referral","props","location","connectWallet","trackAction","infoTokens","active","account","library","chainId","chainIdWithoutLocalStorage","pendingTxns","setPendingTxns","ensName","data","referralsData","recentlyAddedCodes","setRecentlyAddedCodes","userReferralCode","codeOwner","referrerTier","tradersTier","userReferralCodeInLocalStorage","window","localStorage","getItem","currentView","setCurrentView","isEnterCodeModalVisible","setIsEnterCodeModalVisible","isEdit","setIsEdit","isCreateCodeModalVisible","setIsCreateCodeModalVisible","selectedRound","setSelectedRound","nextRewards","setNextRewards","eth","constants","AddressZero","ethPrice","maxPrimaryPrice","switchView","view","hash","history","pushState","buttonName","handleClaim","feeDistributor","feeDistributorReader","allRoundsRewardsData_","error","failedFetchingRewards","fetch","then","res","json","allRoundsRewardsData","Array","isArray","undefined","currentRewardRound","failedFetchingRoundRewards","url","week","allUsersRoundData","rewards","sort","a","b","commissions_volume","toString","map","trader","index","commissions","rebates","position","address","user_address","volume","totalReward","totalRewardUsd","mul","div","referralCode","referral_code","numberOfTrades","number_of_trades","tradersReferred","total_traders_referred","tier","hasClaimed","length","ends","Number","end","max","Math","isNaN","userRoundData","findIndex","leaderBoardIndex","toLowerCase","traderData","add","parseInt","traders_referred","referralCodeInString","cumulativeStats","referrerTotalStats","referrerTierInfo","referralTotalStats","finalReferrerTotalStats","filter","reduce","acc","cv","addedCodes","c","trim","includes","totalRebateUsd","discountUsd","concat","tierId","referrerRebates","sub","referrerVolume","tradersVolume","tradersRebates","hasCreatedCode","codes","rewardsMessage","round","timeTillRewards","isLatestRound","hasClaimedRound","handleSetIsEnterCodeModalVisible"],"sources":["C:/Users/rober/Documents/copiaswaps-client/swaps-client/src/views/Referrals/Referrals.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\n\nimport {\n  ETH_DECIMALS,\n  expandDecimals,\n  fetcher,\n  getPageTitle,\n  useChainId,\n  useENS,\n  isHashZero,\n  useLocalStorageSerializeKey,\n  bigNumberify,\n  formatTimeTill,\n  getTokenInfo,\n} from \"../../Helpers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport * as Styles from \"./Referrals.styles\";\nimport CreateCodeModal from \"./CreateCodeModal\";\nimport EnterCodeModal from \"./EnterCodeModal\";\n\nimport SEO from \"../../components/Common/SEO\";\nimport ViewSwitchTriple from \"../../components/ViewSwitchTriple/ViewSwitchTriple\";\nimport TraderRebateStats from \"./TraderRebateStats\";\nimport ReferralRewards from \"./ReferralRewards\";\nimport AccountBanner from \"./AccountBanner\";\nimport ReferralCodesTable from \"./ReferralCodesTable\";\nimport { useLocalStorage } from \"react-use\";\nimport {\n  decodeReferralCode,\n  useReferralsData,\n  useReferrerTier,\n  useUserReferralCode,\n  useCodeOwner,\n} from \"../../Api/referrals\";\nimport useSWR from \"swr\";\nimport { ethers } from \"ethers\";\nimport { useLocation } from \"react-router-dom\";\n\nimport FeeDistributorReader from \"../../abis/FeeDistributorReader.json\";\nimport { getContract } from \"../../Addresses\";\nimport { REFERRALS_SELECTED_TAB_KEY, REFERRAL_CODE_KEY } from \"../../config/localstorage\";\nimport ReferralLeaderboard from \"./ReferralLeaderboard\";\nimport { getServerUrl } from \"src/lib\";\n\nconst REFERRAL_DATA_MAX_TIME = 60000 * 5; // 5 minutes\nexport function isRecentReferralCodeNotExpired(referralCodeInfo) {\n  if (referralCodeInfo.time) {\n    return referralCodeInfo.time + REFERRAL_DATA_MAX_TIME > Date.now();\n  }\n}\n\nconst RebatesHeader = () => (\n  <div className=\"Page-title-section mt-0\">\n    <div className=\"Page-title\">Referral Program || Coming Soon</div>\n    <div className=\"Page-description\">You will be able to read our referral program on our gitbook</div>\n  </div>\n);\n\nconst CommissionsHeader = () => (\n  <div className=\"Page-title-section mt-0\">\n    <div className=\"Page-title\">Referral Commissions</div>\n    <div className=\"Page-description\">Claim referral commissions here.</div>\n  </div>\n);\n\nconst LeaderboardHeader = () => (\n  <div className=\"Page-title-section mt-0\">\n    <div className=\"Page-title\">Commissions Leaderboard</div>\n    <div className=\"Page-description\">Distribute a referral code and earn commissions on referred volume.</div>\n  </div>\n);\n\nexport const COMMISSIONS = \"Commissions\";\nexport const REBATES = \"Rebates\";\nexport const LEADERBOARD = \"Commissions Leaderboard\";\n\nexport const COMMISSIONS_HASH = \"#commissions\";\nexport const REBATES_HASH = \"#rebates\";\nexport const LEADERBOARD_HASH = \"#leaderboard\";\n\nconst HASH_BY_VIEW = {\n  [COMMISSIONS]: COMMISSIONS_HASH,\n  [REBATES]: REBATES_HASH,\n  [LEADERBOARD]: LEADERBOARD_HASH,\n};\n\nexport default function Referral(props) {\n  const location = useLocation();\n  const { connectWallet, trackAction, infoTokens } = props;\n  const { active, account, library, chainId: chainIdWithoutLocalStorage, pendingTxns, setPendingTxns } = useWeb3React();\n  const { chainId } = useChainId();\n  const { ensName } = useENS(account);\n  const { data: referralsData } = useReferralsData(chainIdWithoutLocalStorage, account);\n  const [recentlyAddedCodes, setRecentlyAddedCodes] = useLocalStorageSerializeKey([chainId, \"REFERRAL\", account], []);\n  const { userReferralCode } = useUserReferralCode(library, chainId, account);\n  const { codeOwner } = useCodeOwner(library, chainId, account, userReferralCode);\n  const { referrerTier: tradersTier } = useReferrerTier(library, chainId, codeOwner);\n  const userReferralCodeInLocalStorage = window.localStorage.getItem(REFERRAL_CODE_KEY);\n\n  const [currentView, setCurrentView] = useLocalStorage(REFERRALS_SELECTED_TAB_KEY, REBATES);\n  const [isEnterCodeModalVisible, setIsEnterCodeModalVisible] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [isCreateCodeModalVisible, setIsCreateCodeModalVisible] = useState(false);\n  const [selectedRound, setSelectedRound] = useState(\"latest\");\n  const [nextRewards, setNextRewards] = useState();\n\n  const eth = getTokenInfo(infoTokens, ethers.constants.AddressZero);\n  const ethPrice = eth?.maxPrimaryPrice;\n\n  const switchView = (view) => {\n    setCurrentView(view);\n    const hash = HASH_BY_VIEW[view];\n\n    // Update hash\n    if (window.history.pushState) {\n      window.history.pushState(null, null, hash);\n    } else {\n      location.hash = hash;\n    }\n    trackAction &&\n      trackAction(\"Button clicked\", {\n        buttonName: \"Referral panel\",\n        view: view,\n      });\n  };\n\n  function handleClaim() {\n    // TODO handle claim\n  }\n\n  const feeDistributor = getContract(chainId, \"FeeDistributor\");\n  const feeDistributorReader = getContract(chainId, \"FeeDistributorReader\");\n\n  // Fetch all week data from server\n  const { data: allRoundsRewardsData_, error: failedFetchingRewards } = useSWR(\n    [getServerUrl(chainId, \"/referralRewards\")],\n    {\n      fetcher: (...args) => fetch(...args).then((res) => res.json()),\n    }\n  );\n\n  const allRoundsRewardsData = Array.isArray(allRoundsRewardsData_) ? allRoundsRewardsData_ : undefined;\n\n  // Fetch only the latest week's data from server\n  const { data: currentRewardRound, error: failedFetchingRoundRewards } = useSWR(\n    [getServerUrl(chainId, \"/referralRewards\"), selectedRound],\n    {\n      fetcher: (url, week) => fetch(`${url}&round=${week}`).then((res) => res.json()),\n    }\n  );\n\n  const allUsersRoundData = useMemo(() => {\n    if (!allRoundsRewardsData || !ethPrice) {\n      return undefined;\n    }\n    return currentRewardRound?.rewards\n      ?.sort((a, b) => b.commissions_volume.toString() - a.commissions_volume.toString())\n      .map((trader, index) => {\n        const commissions = bigNumberify(trader.commissions);\n        const rebates = bigNumberify(trader.rebates);\n        return {\n          position: index + 1,\n          address: trader.user_address,\n          volume: bigNumberify(trader.commissions_volume),\n          totalReward: commissions,\n          totalRewardUsd: commissions.mul(ethPrice).div(expandDecimals(1, ETH_DECIMALS)),\n          referralCode: trader.referral_code,\n          numberOfTrades: trader.number_of_trades,\n          tradersReferred: trader.total_traders_referred,\n          tier: trader.tier,\n          commissions,\n          rebates,\n        };\n      });\n  }, [ethPrice, allRoundsRewardsData, currentRewardRound?.rewards]);\n\n  const { data: hasClaimed } = useSWR(\n    [\n      `Rewards:claimed:${active}`,\n      chainId,\n      feeDistributorReader,\n      \"getUserClaimed\",\n      feeDistributor,\n      account ?? ethers.constants.AddressZero,\n      allRoundsRewardsData?.length ?? 1,\n    ],\n    {\n      fetcher: fetcher(library, FeeDistributorReader),\n    }\n  );\n\n  useEffect(() => {\n    if (!!allRoundsRewardsData) {\n      const ends = allRoundsRewardsData.map((week) => Number(week.end));\n      const max = Math.max(...ends);\n      if (!Number.isNaN(max)) {\n        setNextRewards(max);\n      }\n    }\n  }, [allRoundsRewardsData]);\n\n  // Get volume, position and reward from user week data\n  const userRoundData = useMemo(() => {\n    if (!currentRewardRound || !allUsersRoundData) {\n      return undefined;\n    }\n    allUsersRoundData.findIndex((trader) => trader.address === account);\n    const leaderBoardIndex = currentRewardRound.rewards?.findIndex(\n      (trader) => trader.user_address.toLowerCase() === account?.toLowerCase()\n    );\n    let traderData;\n    if (leaderBoardIndex !== undefined && leaderBoardIndex >= 0) {\n      traderData = currentRewardRound.rewards[leaderBoardIndex];\n    }\n\n    // trader's data found\n    if (traderData) {\n      const commissions = bigNumberify(traderData.commissions);\n      const rebates = bigNumberify(traderData.rebates);\n      return {\n        position: leaderBoardIndex + 1,\n        address: traderData.user_address,\n        volume: bigNumberify(traderData.commissions_volume),\n        totalReward: commissions.add(rebates),\n        totalRewardUsd: commissions.add(rebates).mul(ethPrice).div(expandDecimals(1, ETH_DECIMALS)),\n        referralCode: traderData.referral_code,\n        numberOfTrades: parseInt(traderData.number_of_trades),\n        tradersReferred: traderData.traders_referred,\n        tier: traderData.tier,\n        commissions,\n        rebates,\n      };\n    } else {\n      return {\n        volume: bigNumberify(0),\n        totalReward: bigNumberify(0),\n        commissions: bigNumberify(0),\n        rebates: bigNumberify(0),\n      };\n    }\n  }, [account, currentRewardRound, allUsersRoundData, ethPrice]);\n\n  if (ethPrice && userRoundData?.totalReward) {\n    userRoundData.totalRewardUsd = userRoundData.totalReward?.mul(ethPrice).div(expandDecimals(1, ETH_DECIMALS));\n  }\n\n  let referralCodeInString;\n  if (userReferralCode && !isHashZero(userReferralCode)) {\n    referralCodeInString = decodeReferralCode(userReferralCode);\n  }\n\n  if (!referralCodeInString && userReferralCodeInLocalStorage && !isHashZero(userReferralCodeInLocalStorage)) {\n    referralCodeInString = decodeReferralCode(userReferralCodeInLocalStorage);\n  }\n\n  let cumulativeStats, referrerTotalStats, referrerTierInfo, referralTotalStats /*, rebateDistributions */;\n  if (referralsData) {\n    ({ cumulativeStats, referrerTotalStats, referrerTierInfo, referralTotalStats /*, rebateDistributions */ } =\n      referralsData);\n  }\n\n  const finalReferrerTotalStats = recentlyAddedCodes.filter(isRecentReferralCodeNotExpired).reduce((acc, cv) => {\n    const addedCodes = referrerTotalStats?.map((c) => c.referralCode.trim());\n    if (addedCodes && !addedCodes.includes(cv.referralCode)) {\n      // BigNumbers get converted in local storage, need to convert them back\n      cv.totalRebateUsd = bigNumberify(cv.totalRebateUsd);\n      cv.volume = bigNumberify(cv.volume);\n      cv.discountUsd = bigNumberify(cv.discountUsd);\n      acc = acc.concat(cv);\n    }\n    return acc;\n  }, referrerTotalStats);\n\n  const referrerTier = referrerTierInfo?.tierId;\n  let referrerRebates = bigNumberify(0);\n  if (cumulativeStats && cumulativeStats.totalRebateUsd && cumulativeStats.discountUsd) {\n    referrerRebates = cumulativeStats.totalRebateUsd.sub(cumulativeStats.discountUsd);\n  }\n  let referrerVolume = cumulativeStats?.volume;\n\n  let tradersVolume = referralTotalStats?.volume;\n  let tradersRebates = referralTotalStats?.discountUsd;\n\n  let hasCreatedCode = referralsData && referralsData?.codes?.length > 0;\n\n  // // Segment Analytics Page tracking\n  // useEffect(() => {\n  //   if (!pageTracked && currentReferralRound && analytics) {\n  //     const traits = {\n  //       week: currentReferralRound.key,\n  //     };\n  //     trackPageWithTraits(traits);\n  //     setPageTracked(true); // Prevent Page function being called twice\n  //   }\n  // }, [currentReferralRound, pageTracked, trackPageWithTraits, analytics]);\n\n  let rewardsMessage = \"\";\n  if (!currentRewardRound) {\n    rewardsMessage = \"Fetching rewards\";\n  } else if (!!failedFetchingRoundRewards) {\n    rewardsMessage = \"Failed fetching current week rewards\";\n  } else if (!!failedFetchingRewards) {\n    rewardsMessage = \"Failed fetching rewards\";\n  } else {\n    if (currentRewardRound?.length === 0) {\n      rewardsMessage = \"No rewards\";\n    } else if (selectedRound === \"latest\") {\n      rewardsMessage = `Round ${Number.parseInt(currentRewardRound.round) + 1}`;\n    } else {\n      rewardsMessage = `Round ${selectedRound + 1}`;\n    }\n  }\n\n  let timeTillRewards;\n  if (nextRewards) {\n    timeTillRewards = formatTimeTill(nextRewards / 1000);\n  }\n\n  const isLatestRound = selectedRound === \"latest\";\n  let hasClaimedRound;\n  if (selectedRound !== \"latest\" && hasClaimed) {\n    hasClaimedRound = hasClaimed[selectedRound];\n  }\n\n  const handleSetIsEnterCodeModalVisible = (isEdit) => {\n    setIsEdit(isEdit);\n    setIsEnterCodeModalVisible(true);\n  };\n\n  // Change view based on window hash\n  useEffect(() => {\n    const hash = window.location.hash;\n    if (hash === REBATES_HASH) {\n      setCurrentView(REBATES);\n    } else if (hash === COMMISSIONS_HASH) {\n      setCurrentView(COMMISSIONS);\n    } else if (hash === LEADERBOARD_HASH) {\n      setCurrentView(LEADERBOARD);\n    } else {\n      setCurrentView(REBATES);\n    }\n  }, [setCurrentView, location.hash]);\n\n  return (\n    <>\n      <SEO\n        title={getPageTitle(\"Referral\")}\n        description=\"Use a referral code on Mycelium Perpetual Swaps to earn rebates on trading fees.\"\n      />\n      <EnterCodeModal\n        active={active}\n        chainId={chainId}\n        library={library}\n        connectWallet={connectWallet}\n        isEnterCodeModalVisible={isEnterCodeModalVisible}\n        setIsEnterCodeModalVisible={setIsEnterCodeModalVisible}\n        isEdit={isEdit}\n        referralCodeInString={referralCodeInString}\n        pendingTxns={pendingTxns}\n        setPendingTxns={setPendingTxns}\n      />\n      <CreateCodeModal\n        active={active}\n        chainId={chainId}\n        library={library}\n        connectWallet={connectWallet}\n        isCreateCodeModalVisible={isCreateCodeModalVisible}\n        setIsCreateCodeModalVisible={setIsCreateCodeModalVisible}\n        recentlyAddedCodes={recentlyAddedCodes}\n        setRecentlyAddedCodes={setRecentlyAddedCodes}\n        pendingTxns={pendingTxns}\n        setPendingTxns={setPendingTxns}\n      />\n      <Styles.StyledReferralPage className=\"default-container page-layout\">\n        {\n          {\n            [REBATES]: <RebatesHeader />,\n            [COMMISSIONS]: <CommissionsHeader />,\n            [LEADERBOARD]: <LeaderboardHeader />,\n          }[currentView]\n        }\n        \n        \n      </Styles.StyledReferralPage>\n    </> \n  ); \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}