{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\swaps-client\\\\src\\\\views\\\\Referrals\\\\EnterCodeModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { setTraderReferralCodeByUser, encodeReferralCode, validateReferralCodeExists } from \"../../Api/referrals\";\nimport { REFERRAL_CODE_REGEX } from \"../../config/referrals\";\nimport { getCodeError } from \"../../utils/referrals\";\nimport useDebounce from \"../../hooks/useDebounce\";\nimport * as Styles from \"./Referrals.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EnterCodeModal(props) {\n  _s();\n\n  const {\n    account,\n    chainId,\n    library,\n    isEnterCodeModalVisible,\n    setIsEnterCodeModalVisible,\n    referralCodeInString,\n    pendingTxns,\n    setPendingTxns,\n    isEdit\n  } = props;\n  const [referralCodeExists, setReferralCodeExists] = useState(true);\n  const [isValidating, setIsValidating] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [referralCode, setEditReferralCode] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const editModalRef = useRef(null);\n  const debouncedEditReferralCode = useDebounce(referralCode, 300);\n  const messages = isEdit ? {\n    modalTitle: 'Edit Referral Code',\n    successMsg: 'Referral code updated!',\n    failMsg: 'Referral code update failed.',\n    buttonSubmitting: 'Updating...',\n    button: 'Update'\n  } : {\n    modalTitle: 'Enter Referral Code',\n    successMsg: 'Referral code added!',\n    failMsg: 'Adding referral code failed.',\n    buttonSubmitting: 'Submitting...',\n    button: 'Submit'\n  };\n\n  const close = () => {\n    if (!isSubmitting) {\n      setEditReferralCode(\"\");\n      setError(\"\");\n      setIsEnterCodeModalVisible(false);\n    }\n  };\n\n  const handleClickPrimary = async event => {\n    event.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      const referralCodeHex = encodeReferralCode(referralCode);\n      const txn = await setTraderReferralCodeByUser(chainId, referralCodeHex, {\n        library,\n        account,\n        successMsg: messages.successMsg,\n        failMsg: messages.failMsg,\n        pendingTxns,\n        setPendingTxns\n      });\n      await txn.wait();\n      setIsSubmitting(false);\n      close();\n    } catch (err) {\n      console.error(err);\n      setIsSubmitting(false);\n    }\n  };\n\n  const getPrimaryText = () => {\n    if (referralCode === referralCodeInString && !isSubmitting) {\n      return \"Referral Code is same\";\n    }\n\n    if (isSubmitting) {\n      return messages.buttonSubmitting;\n    }\n\n    if (debouncedEditReferralCode === \"\") {\n      return \"Enter Referral Code\";\n    }\n\n    if (isValidating) {\n      return `Checking code...`;\n    }\n\n    if (!referralCodeExists) {\n      return `Referral Code does not exist`;\n    }\n\n    return messages.button;\n  };\n\n  const isPrimaryEnabled = () => {\n    if (debouncedEditReferralCode === \"\" || isSubmitting || isValidating || !referralCodeExists || error || referralCode === referralCodeInString) {\n      return false;\n    }\n\n    return true;\n  };\n\n  useEffect(() => {\n    let cancelled = false;\n\n    async function checkReferralCode() {\n      if (debouncedEditReferralCode === \"\" || !REFERRAL_CODE_REGEX.test(debouncedEditReferralCode)) {\n        setIsValidating(false);\n        setReferralCodeExists(false);\n        return;\n      }\n\n      setIsValidating(true);\n      const codeExists = await validateReferralCodeExists(debouncedEditReferralCode, chainId);\n\n      if (!cancelled) {\n        setReferralCodeExists(codeExists);\n        setIsValidating(false);\n      }\n    }\n\n    checkReferralCode();\n    return () => {\n      cancelled = true;\n    };\n  }, [debouncedEditReferralCode, chainId]);\n  return /*#__PURE__*/_jsxDEV(Styles.CodeModal, {\n    isVisible: isEnterCodeModalVisible,\n    setIsVisible: close,\n    label: messages.modalTitle,\n    children: [/*#__PURE__*/_jsxDEV(Styles.CodeInput, {\n      ref: editModalRef,\n      disabled: isSubmitting,\n      type: \"text\",\n      placeholder: \"Enter referral code\",\n      className: `text-input ${!error && \"mb-sm\"}`,\n      value: referralCode,\n      onChange: _ref => {\n        let {\n          target\n        } = _ref;\n        const {\n          value\n        } = target;\n        setEditReferralCode(value);\n        setError(getCodeError(value));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Styles.ErrorText, {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Styles.CodeButton, {\n      className: \"default-btn\",\n      onClick: handleClickPrimary,\n      disabled: !isPrimaryEnabled(),\n      children: getPrimaryText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EnterCodeModal, \"X1fSNDgUEm8RfI26fvp+sTOO0sE=\", false, function () {\n  return [useDebounce];\n});\n\n_c = EnterCodeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnterCodeModal\");","map":{"version":3,"names":["React","useEffect","useRef","useState","setTraderReferralCodeByUser","encodeReferralCode","validateReferralCodeExists","REFERRAL_CODE_REGEX","getCodeError","useDebounce","Styles","EnterCodeModal","props","account","chainId","library","isEnterCodeModalVisible","setIsEnterCodeModalVisible","referralCodeInString","pendingTxns","setPendingTxns","isEdit","referralCodeExists","setReferralCodeExists","isValidating","setIsValidating","isSubmitting","setIsSubmitting","referralCode","setEditReferralCode","error","setError","editModalRef","debouncedEditReferralCode","messages","modalTitle","successMsg","failMsg","buttonSubmitting","button","close","handleClickPrimary","event","preventDefault","referralCodeHex","txn","wait","err","console","getPrimaryText","isPrimaryEnabled","cancelled","checkReferralCode","test","codeExists","target","value"],"sources":["C:/Users/rober/Documents/swaps-client/src/views/Referrals/EnterCodeModal.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { setTraderReferralCodeByUser, encodeReferralCode, validateReferralCodeExists } from \"../../Api/referrals\";\nimport { REFERRAL_CODE_REGEX } from \"../../config/referrals\";\nimport { getCodeError } from \"../../utils/referrals\";\nimport useDebounce from \"../../hooks/useDebounce\";\nimport * as Styles from \"./Referrals.styles\";\n\nexport default function EnterCodeModal(props) {\n  const {\n    account,\n    chainId,\n    library,\n    isEnterCodeModalVisible,\n    setIsEnterCodeModalVisible,\n    referralCodeInString,\n    pendingTxns,\n    setPendingTxns,\n    isEdit\n  } = props;\n\n  const [referralCodeExists, setReferralCodeExists] = useState(true);\n  const [isValidating, setIsValidating] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [referralCode, setEditReferralCode] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const editModalRef = useRef(null);\n  const debouncedEditReferralCode = useDebounce(referralCode, 300);\n\n  const messages = isEdit ? {\n    modalTitle: 'Edit Referral Code',\n    successMsg: 'Referral code updated!',\n    failMsg: 'Referral code update failed.',\n    buttonSubmitting: 'Updating...',\n    button: 'Update'\n  } : {\n    modalTitle: 'Enter Referral Code',\n    successMsg: 'Referral code added!',\n    failMsg: 'Adding referral code failed.',\n    buttonSubmitting: 'Submitting...',\n    button: 'Submit'\n  }\n\n  const close = () => {\n    if (!isSubmitting) {\n      setEditReferralCode(\"\");\n      setError(\"\");\n      setIsEnterCodeModalVisible(false);\n    }\n  };\n\n  const handleClickPrimary = async (event) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    try {\n      const referralCodeHex = encodeReferralCode(referralCode);\n      const txn = await setTraderReferralCodeByUser(chainId, referralCodeHex, {\n        library,\n        account,\n        successMsg: messages.successMsg,\n        failMsg: messages.failMsg,\n        pendingTxns,\n        setPendingTxns,\n      })\n      await txn.wait();\n      setIsSubmitting(false);\n      close();\n    } catch (err) {\n      console.error(err);\n      setIsSubmitting(false);\n    }\n  }\n  const getPrimaryText = () => {\n    if (referralCode === referralCodeInString && !isSubmitting) {\n      return \"Referral Code is same\";\n    }\n    if (isSubmitting) {\n      return messages.buttonSubmitting;\n    }\n    if (debouncedEditReferralCode === \"\") {\n      return \"Enter Referral Code\";\n    }\n    if (isValidating) {\n      return `Checking code...`;\n    }\n    if (!referralCodeExists) {\n      return `Referral Code does not exist`;\n    }\n\n    return messages.button\n  }\n  const isPrimaryEnabled = () => {\n    if (\n      debouncedEditReferralCode === \"\" ||\n      isSubmitting ||\n      isValidating ||\n      !referralCodeExists ||\n      error ||\n      referralCode === referralCodeInString\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  useEffect(() => {\n    let cancelled = false;\n    async function checkReferralCode() {\n      if (debouncedEditReferralCode === \"\" || !REFERRAL_CODE_REGEX.test(debouncedEditReferralCode)) {\n        setIsValidating(false);\n        setReferralCodeExists(false);\n        return;\n      }\n\n      setIsValidating(true);\n      const codeExists = await validateReferralCodeExists(debouncedEditReferralCode, chainId);\n      if (!cancelled) {\n        setReferralCodeExists(codeExists);\n        setIsValidating(false);\n      }\n    }\n    checkReferralCode();\n    return () => {\n      cancelled = true;\n    };\n  }, [debouncedEditReferralCode, chainId]);\n\n  return (\n    <Styles.CodeModal\n      isVisible={isEnterCodeModalVisible}\n      setIsVisible={close}\n      label={messages.modalTitle}\n    >\n      <Styles.CodeInput\n        ref={editModalRef}\n        disabled={isSubmitting}\n        type=\"text\"\n        placeholder=\"Enter referral code\"\n        className={`text-input ${!error && \"mb-sm\"}`}\n        value={referralCode}\n        onChange={({ target }) => {\n          const { value } = target;\n          setEditReferralCode(value);\n          setError(getCodeError(value));\n        }}\n      />\n      {error && <Styles.ErrorText className=\"error\">{error}</Styles.ErrorText>}\n      <Styles.CodeButton\n        className=\"default-btn\"\n        onClick={handleClickPrimary}\n        disabled={!isPrimaryEnabled()}\n      >\n        {getPrimaryText()}\n      </Styles.CodeButton>\n    </Styles.CodeModal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}