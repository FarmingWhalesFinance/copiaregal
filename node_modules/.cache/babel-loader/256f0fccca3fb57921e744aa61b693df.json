{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { useCallback, useContext, useEffect, useLayoutEffect, useState, useRef, useMemo, useDebugValue } from 'react';\nimport defaultConfig, { cache } from './config';\nimport SWRConfigContext from './swr-config-context';\nvar IS_SERVER = typeof window === 'undefined' || // @ts-ignore\n!!(typeof Deno !== 'undefined' && Deno && Deno.version && Deno.version.deno); // polyfill for requestAnimationFrame\n\nvar rAF = IS_SERVER ? null : window['requestAnimationFrame'] || function (f) {\n  return setTimeout(f, 1);\n}; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n\nvar useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect; // global state managers\n\nvar CONCURRENT_PROMISES = {};\nvar CONCURRENT_PROMISES_TS = {};\nvar FOCUS_REVALIDATORS = {};\nvar RECONNECT_REVALIDATORS = {};\nvar CACHE_REVALIDATORS = {};\nvar MUTATION_TS = {};\nvar MUTATION_END_TS = {}; // generate strictly increasing timestamps\n\nvar now = function () {\n  var ts = 0;\n  return function () {\n    return ++ts;\n  };\n}(); // setup DOM events listeners for `focus` and `reconnect` actions\n\n\nif (!IS_SERVER && window.addEventListener && typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n  var revalidate_1 = function (revalidators) {\n    if (!defaultConfig.isDocumentVisible() || !defaultConfig.isOnline()) return;\n\n    for (var key in revalidators) {\n      if (revalidators[key][0]) revalidators[key][0]();\n    }\n  }; // focus revalidate\n\n\n  document.addEventListener('visibilitychange', function () {\n    return revalidate_1(FOCUS_REVALIDATORS);\n  }, false);\n  window.addEventListener('focus', function () {\n    return revalidate_1(FOCUS_REVALIDATORS);\n  }, false); // reconnect revalidate\n\n  window.addEventListener('online', function () {\n    return revalidate_1(RECONNECT_REVALIDATORS);\n  }, false);\n}\n\nvar trigger = function (_key, shouldRevalidate) {\n  if (shouldRevalidate === void 0) {\n    shouldRevalidate = true;\n  } // we are ignoring the second argument which correspond to the arguments\n  // the fetcher will receive when key is an array\n\n\n  var _a = cache.serializeKey(_key),\n      key = _a[0],\n      keyErr = _a[2],\n      keyValidating = _a[3];\n\n  if (!key) return Promise.resolve();\n  var updaters = CACHE_REVALIDATORS[key];\n\n  if (key && updaters) {\n    var currentData = cache.get(key);\n    var currentError = cache.get(keyErr);\n    var currentIsValidating = cache.get(keyValidating);\n    var promises = [];\n\n    for (var i = 0; i < updaters.length; ++i) {\n      promises.push(updaters[i](shouldRevalidate, currentData, currentError, currentIsValidating, i > 0));\n    } // return new updated value\n\n\n    return Promise.all(promises).then(function () {\n      return cache.get(key);\n    });\n  }\n\n  return Promise.resolve(cache.get(key));\n};\n\nvar broadcastState = function (key, data, error, isValidating) {\n  var updaters = CACHE_REVALIDATORS[key];\n\n  if (key && updaters) {\n    for (var i = 0; i < updaters.length; ++i) {\n      updaters[i](false, data, error, isValidating);\n    }\n  }\n};\n\nvar mutate = function (_key, _data, shouldRevalidate) {\n  if (shouldRevalidate === void 0) {\n    shouldRevalidate = true;\n  }\n\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, key, keyErr, beforeMutationTs, beforeConcurrentPromisesTs, data, error, isAsyncMutation, err_1, shouldAbort, updaters, promises, i;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2];\n          if (!key) return [2\n          /*return*/\n          ]; // if there is no new data to update, let's just revalidate the key\n\n          if (typeof _data === 'undefined') return [2\n          /*return*/\n          , trigger(_key, shouldRevalidate) // update global timestamps\n          ]; // update global timestamps\n\n          MUTATION_TS[key] = now() - 1;\n          MUTATION_END_TS[key] = 0;\n          beforeMutationTs = MUTATION_TS[key];\n          beforeConcurrentPromisesTs = CONCURRENT_PROMISES_TS[key];\n          isAsyncMutation = false;\n\n          if (_data && typeof _data === 'function') {\n            // `_data` is a function, call it passing current cache value\n            try {\n              _data = _data(cache.get(key));\n            } catch (err) {\n              error = err;\n            }\n          }\n\n          if (!(_data && typeof _data.then === 'function')) return [3\n          /*break*/\n          , 5]; // `_data` is a promise\n\n          isAsyncMutation = true;\n          _b.label = 1;\n\n        case 1:\n          _b.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , _data];\n\n        case 2:\n          data = _b.sent();\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          err_1 = _b.sent();\n          error = err_1;\n          return [3\n          /*break*/\n          , 4];\n\n        case 4:\n          return [3\n          /*break*/\n          , 6];\n\n        case 5:\n          data = _data;\n          _b.label = 6;\n\n        case 6:\n          shouldAbort = function () {\n            // check if other mutations have occurred since we've started this mutation\n            if (beforeMutationTs !== MUTATION_TS[key] || beforeConcurrentPromisesTs !== CONCURRENT_PROMISES_TS[key]) {\n              if (error) throw error;\n              return true;\n            }\n          }; // if there's a race we don't update cache or broadcast change, just return the data\n\n\n          if (shouldAbort()) return [2\n          /*return*/\n          , data];\n\n          if (typeof data !== 'undefined') {\n            // update cached data\n            cache.set(key, data);\n          } // always update or reset the error\n\n\n          cache.set(keyErr, error); // reset the timestamp to mark the mutation has ended\n\n          MUTATION_END_TS[key] = now() - 1;\n          if (!!isAsyncMutation) return [3\n          /*break*/\n          , 8]; // let's always broadcast in the next tick\n          // to dedupe synchronous mutation calls\n          // check out https://github.com/vercel/swr/pull/735 for more details\n\n          return [4\n          /*yield*/\n          , 0 // we skip broadcasting if there's another mutation happened synchronously\n          ];\n\n        case 7:\n          // let's always broadcast in the next tick\n          // to dedupe synchronous mutation calls\n          // check out https://github.com/vercel/swr/pull/735 for more details\n          _b.sent(); // we skip broadcasting if there's another mutation happened synchronously\n\n\n          if (shouldAbort()) return [2\n          /*return*/\n          , data];\n          _b.label = 8;\n\n        case 8:\n          updaters = CACHE_REVALIDATORS[key];\n\n          if (updaters) {\n            promises = [];\n\n            for (i = 0; i < updaters.length; ++i) {\n              promises.push(updaters[i](!!shouldRevalidate, data, error, undefined, i > 0));\n            } // return new updated value\n\n\n            return [2\n            /*return*/\n            , Promise.all(promises).then(function () {\n              if (error) throw error;\n              return cache.get(key);\n            })];\n          } // throw error or return data to be used by caller of mutate\n\n\n          if (error) throw error;\n          return [2\n          /*return*/\n          , data];\n      }\n    });\n  });\n};\n\nfunction useSWR() {\n  var _this = this;\n\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var _key,\n      fn,\n      config = {};\n\n  if (args.length >= 1) {\n    _key = args[0];\n  }\n\n  if (args.length > 2) {\n    fn = args[1];\n    config = args[2];\n  } else {\n    if (typeof args[1] === 'function') {\n      fn = args[1];\n    } else if (typeof args[1] === 'object') {\n      config = args[1];\n    }\n  } // we assume `key` as the identifier of the request\n  // `key` can change but `fn` shouldn't\n  // (because `revalidate` only depends on `key`)\n  // `keyErr` is the cache key for error objects\n\n\n  var _a = cache.serializeKey(_key),\n      key = _a[0],\n      fnArgs = _a[1],\n      keyErr = _a[2],\n      keyValidating = _a[3];\n\n  config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), config);\n  var configRef = useRef(config);\n  useIsomorphicLayoutEffect(function () {\n    configRef.current = config;\n  });\n\n  if (typeof fn === 'undefined') {\n    // use the global fetcher\n    fn = config.fetcher;\n  }\n\n  var resolveData = function () {\n    var cachedData = cache.get(key);\n    return typeof cachedData === 'undefined' ? config.initialData : cachedData;\n  };\n\n  var initialData = resolveData();\n  var initialError = cache.get(keyErr);\n  var initialIsValidating = !!cache.get(keyValidating); // if a state is accessed (data, error or isValidating),\n  // we add the state to dependencies so if the state is\n  // updated in the future, we can trigger a rerender\n\n  var stateDependencies = useRef({\n    data: false,\n    error: false,\n    isValidating: false\n  });\n  var stateRef = useRef({\n    data: initialData,\n    error: initialError,\n    isValidating: initialIsValidating\n  }); // display the data label in the React DevTools next to SWR hooks\n\n  useDebugValue(stateRef.current.data);\n\n  var _b = useState(null),\n      rerender = _b[1];\n\n  var dispatch = useCallback(function (payload) {\n    var shouldUpdateState = false;\n\n    for (var k in payload) {\n      if (stateRef.current[k] === payload[k]) {\n        continue;\n      }\n\n      stateRef.current[k] = payload[k];\n\n      if (stateDependencies.current[k]) {\n        shouldUpdateState = true;\n      }\n    }\n\n    if (shouldUpdateState || config.suspense) {\n      // if component is unmounted, should skip rerender\n      // if component is not mounted, should skip rerender\n      if (unmountedRef.current || !initialMountedRef.current) return;\n      rerender({});\n    }\n  }, // config.suspense isn't allowed to change during the lifecycle\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []); // error ref inside revalidate (is last request errored?)\n\n  var unmountedRef = useRef(false);\n  var keyRef = useRef(key); // check if component is mounted in suspense mode\n\n  var initialMountedRef = useRef(false); // do unmount check for callbacks\n\n  var eventsCallback = useCallback(function (event) {\n    var _a;\n\n    var params = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      params[_i - 1] = arguments[_i];\n    }\n\n    if (unmountedRef.current) return;\n    if (!initialMountedRef.current) return;\n    if (key !== keyRef.current) return;\n\n    (_a = configRef.current)[event].apply(_a, params);\n  }, [key]);\n  var boundMutate = useCallback(function (data, shouldRevalidate) {\n    return mutate(keyRef.current, data, shouldRevalidate);\n  }, []);\n\n  var addRevalidator = function (revalidators, callback) {\n    if (!callback) return;\n\n    if (!revalidators[key]) {\n      revalidators[key] = [callback];\n    } else {\n      revalidators[key].push(callback);\n    }\n  };\n\n  var removeRevalidator = function (revlidators, callback) {\n    if (revlidators[key]) {\n      var revalidators = revlidators[key];\n      var index = revalidators.indexOf(callback);\n\n      if (index >= 0) {\n        // 10x faster than splice\n        // https://jsperf.com/array-remove-by-index\n        revalidators[index] = revalidators[revalidators.length - 1];\n        revalidators.pop();\n      }\n    }\n  }; // start a revalidation\n\n\n  var revalidate = useCallback(function (revalidateOpts) {\n    if (revalidateOpts === void 0) {\n      revalidateOpts = {};\n    }\n\n    return __awaiter(_this, void 0, void 0, function () {\n      var loading, shouldDeduping, newData, startAt, newState, err_2, retryCount;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!key || !fn) return [2\n            /*return*/\n            , false];\n            if (unmountedRef.current) return [2\n            /*return*/\n            , false];\n            if (configRef.current.isPaused()) return [2\n            /*return*/\n            , false];\n            revalidateOpts = Object.assign({\n              dedupe: false\n            }, revalidateOpts);\n            loading = true;\n            shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && revalidateOpts.dedupe;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 6,, 7]);\n\n            dispatch({\n              isValidating: true\n            });\n            cache.set(keyValidating, true);\n\n            if (!shouldDeduping) {\n              // also update other hooks\n              broadcastState(key, stateRef.current.data, stateRef.current.error, true);\n            }\n\n            newData = void 0;\n            startAt = void 0;\n            if (!shouldDeduping) return [3\n            /*break*/\n            , 3]; // there's already an ongoing request,\n            // this one needs to be deduplicated.\n\n            startAt = CONCURRENT_PROMISES_TS[key];\n            return [4\n            /*yield*/\n            , CONCURRENT_PROMISES[key]];\n\n          case 2:\n            newData = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            // if no cache being rendered currently (it shows a blank page),\n            // we trigger the loading slow event.\n            if (config.loadingTimeout && !cache.get(key)) {\n              setTimeout(function () {\n                if (loading) eventsCallback('onLoadingSlow', key, config);\n              }, config.loadingTimeout);\n            }\n\n            if (fnArgs !== null) {\n              CONCURRENT_PROMISES[key] = fn.apply(void 0, fnArgs);\n            } else {\n              CONCURRENT_PROMISES[key] = fn(key);\n            }\n\n            CONCURRENT_PROMISES_TS[key] = startAt = now();\n            return [4\n            /*yield*/\n            , CONCURRENT_PROMISES[key]];\n\n          case 4:\n            newData = _a.sent();\n            setTimeout(function () {\n              delete CONCURRENT_PROMISES[key];\n              delete CONCURRENT_PROMISES_TS[key];\n            }, config.dedupingInterval); // trigger the success event,\n            // only do this for the original request.\n\n            eventsCallback('onSuccess', newData, key, config);\n            _a.label = 5;\n\n          case 5:\n            // if there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            if (CONCURRENT_PROMISES_TS[key] > startAt) {\n              return [2\n              /*return*/\n              , false];\n            } // if there're other mutations(s), overlapped with the current revalidation:\n            // case 1:\n            //   req------------------>res\n            //       mutate------>end\n            // case 2:\n            //         req------------>res\n            //   mutate------>end\n            // case 3:\n            //   req------------------>res\n            //       mutate-------...---------->\n            // we have to ignore the revalidation result (res) because it's no longer fresh.\n            // meanwhile, a new revalidation should be triggered when the mutation ends.\n\n\n            if (MUTATION_TS[key] && ( // case 1\n            startAt <= MUTATION_TS[key] || // case 2\n            startAt <= MUTATION_END_TS[key] || // case 3\n            MUTATION_END_TS[key] === 0)) {\n              dispatch({\n                isValidating: false\n              });\n              return [2\n              /*return*/\n              , false];\n            }\n\n            cache.set(key, newData);\n            cache.set(keyErr, undefined);\n            cache.set(keyValidating, false);\n            newState = {\n              isValidating: false\n            };\n\n            if (typeof stateRef.current.error !== 'undefined') {\n              // we don't have an error\n              newState.error = undefined;\n            }\n\n            if (!config.compare(stateRef.current.data, newData)) {\n              // deep compare to avoid extra re-render\n              // data changed\n              newState.data = newData;\n            } // merge the new state\n\n\n            dispatch(newState);\n\n            if (!shouldDeduping) {\n              // also update other hooks\n              broadcastState(key, newData, newState.error, false);\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            err_2 = _a.sent();\n            delete CONCURRENT_PROMISES[key];\n            delete CONCURRENT_PROMISES_TS[key];\n\n            if (configRef.current.isPaused()) {\n              dispatch({\n                isValidating: false\n              });\n              return [2\n              /*return*/\n              , false];\n            }\n\n            cache.set(keyErr, err_2); // get a new error\n            // don't use deep equal for errors\n\n            if (stateRef.current.error !== err_2) {\n              // we keep the stale data\n              dispatch({\n                isValidating: false,\n                error: err_2\n              });\n\n              if (!shouldDeduping) {\n                // also broadcast to update other hooks\n                broadcastState(key, undefined, err_2, false);\n              }\n            } // events and retry\n\n\n            eventsCallback('onError', err_2, key, config);\n\n            if (config.shouldRetryOnError) {\n              retryCount = (revalidateOpts.retryCount || 0) + 1;\n              eventsCallback('onErrorRetry', err_2, key, config, revalidate, Object.assign({\n                dedupe: true\n              }, revalidateOpts, {\n                retryCount: retryCount\n              }));\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            loading = false;\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  }, // dispatch is immutable, and `eventsCallback`, `fnArgs`, `keyErr`, and `keyValidating` are based on `key`,\n  // so we can them from the deps array.\n  //\n  // FIXME:\n  // `fn` and `config` might be changed during the lifecycle,\n  // but they might be changed every render like this.\n  // useSWR('key', () => fetch('/api/'), { suspense: true })\n  // So we omit the values from the deps array\n  // even though it might cause unexpected behaviors.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [key]); // mounted (client side rendering)\n\n  useIsomorphicLayoutEffect(function () {\n    if (!key) return undefined; // after `key` updates, we need to mark it as mounted\n\n    unmountedRef.current = false;\n    initialMountedRef.current = true; // after the component is mounted (hydrated),\n    // we need to update the data from the cache\n    // and trigger a revalidation\n\n    var currentHookData = stateRef.current.data;\n    var latestKeyedData = resolveData(); // update the state if the key changed (not the inital render) or cache updated\n\n    if (keyRef.current !== key) {\n      keyRef.current = key;\n    }\n\n    if (!config.compare(currentHookData, latestKeyedData)) {\n      dispatch({\n        data: latestKeyedData\n      });\n    } // revalidate with deduping\n\n\n    var softRevalidate = function () {\n      return revalidate({\n        dedupe: true\n      });\n    }; // trigger a revalidation\n\n\n    if (config.revalidateOnMount || !config.initialData && config.revalidateOnMount === undefined) {\n      if (typeof latestKeyedData !== 'undefined' && !IS_SERVER) {\n        // delay revalidate if there's cache\n        // to not block the rendering\n        rAF(softRevalidate);\n      } else {\n        softRevalidate();\n      }\n    }\n\n    var pending = false;\n\n    var onFocus = function () {\n      if (pending || !configRef.current.revalidateOnFocus) return;\n      pending = true;\n      softRevalidate();\n      setTimeout(function () {\n        return pending = false;\n      }, configRef.current.focusThrottleInterval);\n    };\n\n    var onReconnect = function () {\n      if (configRef.current.revalidateOnReconnect) {\n        softRevalidate();\n      }\n    }; // register global cache update listener\n\n\n    var onUpdate = function (shouldRevalidate, updatedData, updatedError, updatedIsValidating, dedupe) {\n      if (shouldRevalidate === void 0) {\n        shouldRevalidate = true;\n      }\n\n      if (dedupe === void 0) {\n        dedupe = true;\n      } // update hook state\n\n\n      var newState = {};\n      var needUpdate = false;\n\n      if (typeof updatedData !== 'undefined' && !config.compare(stateRef.current.data, updatedData)) {\n        newState.data = updatedData;\n        needUpdate = true;\n      } // always update error\n      // because it can be `undefined`\n\n\n      if (stateRef.current.error !== updatedError) {\n        newState.error = updatedError;\n        needUpdate = true;\n      }\n\n      if (typeof updatedIsValidating !== 'undefined' && stateRef.current.isValidating !== updatedIsValidating) {\n        newState.isValidating = updatedIsValidating;\n        needUpdate = true;\n      }\n\n      if (needUpdate) {\n        dispatch(newState);\n      }\n\n      if (shouldRevalidate) {\n        if (dedupe) {\n          return softRevalidate();\n        } else {\n          return revalidate();\n        }\n      }\n\n      return false;\n    };\n\n    addRevalidator(FOCUS_REVALIDATORS, onFocus);\n    addRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n    addRevalidator(CACHE_REVALIDATORS, onUpdate);\n    return function () {\n      // cleanup\n      dispatch = function () {\n        return null;\n      }; // mark it as unmounted\n\n\n      unmountedRef.current = true;\n      removeRevalidator(FOCUS_REVALIDATORS, onFocus);\n      removeRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n      removeRevalidator(CACHE_REVALIDATORS, onUpdate);\n    };\n  }, [key, revalidate]);\n  useIsomorphicLayoutEffect(function () {\n    var timer = null;\n\n    var tick = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(!stateRef.current.error && (configRef.current.refreshWhenHidden || configRef.current.isDocumentVisible()) && (configRef.current.refreshWhenOffline || configRef.current.isOnline()))) return [3\n              /*break*/\n              , 2]; // only revalidate when the page is visible\n              // if API request errored, we stop polling in this round\n              // and let the error retry function handle it\n\n              return [4\n              /*yield*/\n              , revalidate({\n                dedupe: true\n              })];\n\n            case 1:\n              // only revalidate when the page is visible\n              // if API request errored, we stop polling in this round\n              // and let the error retry function handle it\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              // Read the latest refreshInterval\n              if (configRef.current.refreshInterval && timer) {\n                timer = setTimeout(tick, configRef.current.refreshInterval);\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    if (configRef.current.refreshInterval) {\n      timer = setTimeout(tick, configRef.current.refreshInterval);\n    }\n\n    return function () {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n    };\n  }, [config.refreshInterval, config.refreshWhenHidden, config.refreshWhenOffline, revalidate]); // define returned state\n  // can be memorized since the state is a ref\n\n  var memoizedState = useMemo(function () {\n    var state = {\n      revalidate: revalidate,\n      mutate: boundMutate\n    };\n    Object.defineProperties(state, {\n      error: {\n        // `key` might be changed in the upcoming hook re-render,\n        // but the previous state will stay\n        // so we need to match the latest key and data (fallback to `initialData`)\n        get: function () {\n          stateDependencies.current.error = true;\n          return keyRef.current === key ? stateRef.current.error : initialError;\n        },\n        enumerable: true\n      },\n      data: {\n        get: function () {\n          stateDependencies.current.data = true;\n          return keyRef.current === key ? stateRef.current.data : initialData;\n        },\n        enumerable: true\n      },\n      isValidating: {\n        get: function () {\n          stateDependencies.current.isValidating = true;\n          return key ? stateRef.current.isValidating : false;\n        },\n        enumerable: true\n      }\n    });\n    return state; // `boundMutate` is immutable, and the immutability of `revalidate` depends on `key`\n    // so we can omit them from the deps array,\n    // but we put it to enable react-hooks/exhaustive-deps rule.\n    // `initialData` and `initialError` are not initial values\n    // because they are changed during the lifecycle\n    // so we should add them in the deps array.\n  }, [revalidate, initialData, initialError, boundMutate, key]); // suspense\n\n  if (config.suspense) {\n    // in suspense mode, we can't return empty state\n    // (it should be suspended)\n    // try to get data and error from cache\n    var latestData = cache.get(key);\n    var latestError = cache.get(keyErr);\n\n    if (typeof latestData === 'undefined') {\n      latestData = initialData;\n    }\n\n    if (typeof latestError === 'undefined') {\n      latestError = initialError;\n    }\n\n    if (typeof latestData === 'undefined' && typeof latestError === 'undefined') {\n      // need to start the request if it hasn't\n      if (!CONCURRENT_PROMISES[key]) {\n        // trigger revalidate immediately\n        // to get the promise\n        // in this revalidate, should not rerender\n        revalidate();\n      }\n\n      if (CONCURRENT_PROMISES[key] && typeof CONCURRENT_PROMISES[key].then === 'function') {\n        // if it is a promise\n        throw CONCURRENT_PROMISES[key];\n      } // it's a value, return it directly (override)\n\n\n      latestData = CONCURRENT_PROMISES[key];\n    }\n\n    if (typeof latestData === 'undefined' && latestError) {\n      // in suspense mode, throw error if there's no content\n      throw latestError;\n    } // return the latest data / error from cache\n    // in case `key` has changed\n\n\n    return {\n      error: latestError,\n      data: latestData,\n      // revalidate will be deprecated in the 1.x release\n      // because mutate() covers the same use case of revalidate().\n      // This remains only for backward compatibility\n      revalidate: revalidate,\n      mutate: boundMutate,\n      isValidating: stateRef.current.isValidating\n    };\n  }\n\n  return memoizedState;\n}\n\nvar SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","useCallback","useContext","useEffect","useLayoutEffect","useState","useRef","useMemo","useDebugValue","defaultConfig","cache","SWRConfigContext","IS_SERVER","window","Deno","version","deno","rAF","setTimeout","useIsomorphicLayoutEffect","CONCURRENT_PROMISES","CONCURRENT_PROMISES_TS","FOCUS_REVALIDATORS","RECONNECT_REVALIDATORS","CACHE_REVALIDATORS","MUTATION_TS","MUTATION_END_TS","now","ts","addEventListener","document","revalidate_1","revalidators","isDocumentVisible","isOnline","key","trigger","_key","shouldRevalidate","_a","serializeKey","keyErr","keyValidating","updaters","currentData","get","currentError","currentIsValidating","promises","i","all","broadcastState","data","error","isValidating","mutate","_data","beforeMutationTs","beforeConcurrentPromisesTs","isAsyncMutation","err_1","shouldAbort","_b","err","set","undefined","useSWR","_this","args","_i","arguments","fn","config","fnArgs","Object","assign","configRef","current","fetcher","resolveData","cachedData","initialData","initialError","initialIsValidating","stateDependencies","stateRef","rerender","dispatch","payload","shouldUpdateState","k","suspense","unmountedRef","initialMountedRef","keyRef","eventsCallback","event","params","boundMutate","addRevalidator","callback","removeRevalidator","revlidators","index","indexOf","revalidate","revalidateOpts","loading","shouldDeduping","newData","startAt","newState","err_2","retryCount","isPaused","dedupe","loadingTimeout","dedupingInterval","compare","shouldRetryOnError","currentHookData","latestKeyedData","softRevalidate","revalidateOnMount","pending","onFocus","revalidateOnFocus","focusThrottleInterval","onReconnect","revalidateOnReconnect","onUpdate","updatedData","updatedError","updatedIsValidating","needUpdate","timer","tick","refreshWhenHidden","refreshWhenOffline","refreshInterval","clearTimeout","memoizedState","state","defineProperties","enumerable","latestData","latestError","SWRConfig","Provider"],"sources":["C:/Users/rober/Documents/swaps-client/node_modules/swr/esm/use-swr.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { useCallback, useContext, useEffect, useLayoutEffect, useState, useRef, useMemo, useDebugValue } from 'react';\nimport defaultConfig, { cache } from './config';\nimport SWRConfigContext from './swr-config-context';\nvar IS_SERVER = typeof window === 'undefined' ||\n    // @ts-ignore\n    !!(typeof Deno !== 'undefined' && Deno && Deno.version && Deno.version.deno);\n// polyfill for requestAnimationFrame\nvar rAF = IS_SERVER\n    ? null\n    : window['requestAnimationFrame'] || (function (f) { return setTimeout(f, 1); });\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nvar useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\n// global state managers\nvar CONCURRENT_PROMISES = {};\nvar CONCURRENT_PROMISES_TS = {};\nvar FOCUS_REVALIDATORS = {};\nvar RECONNECT_REVALIDATORS = {};\nvar CACHE_REVALIDATORS = {};\nvar MUTATION_TS = {};\nvar MUTATION_END_TS = {};\n// generate strictly increasing timestamps\nvar now = (function () {\n    var ts = 0;\n    return function () { return ++ts; };\n})();\n// setup DOM events listeners for `focus` and `reconnect` actions\nif (!IS_SERVER &&\n    window.addEventListener &&\n    typeof document !== 'undefined' &&\n    typeof document.addEventListener !== 'undefined') {\n    var revalidate_1 = function (revalidators) {\n        if (!defaultConfig.isDocumentVisible() || !defaultConfig.isOnline())\n            return;\n        for (var key in revalidators) {\n            if (revalidators[key][0])\n                revalidators[key][0]();\n        }\n    };\n    // focus revalidate\n    document.addEventListener('visibilitychange', function () { return revalidate_1(FOCUS_REVALIDATORS); }, false);\n    window.addEventListener('focus', function () { return revalidate_1(FOCUS_REVALIDATORS); }, false);\n    // reconnect revalidate\n    window.addEventListener('online', function () { return revalidate_1(RECONNECT_REVALIDATORS); }, false);\n}\nvar trigger = function (_key, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    // we are ignoring the second argument which correspond to the arguments\n    // the fetcher will receive when key is an array\n    var _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2], keyValidating = _a[3];\n    if (!key)\n        return Promise.resolve();\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        var currentData = cache.get(key);\n        var currentError = cache.get(keyErr);\n        var currentIsValidating = cache.get(keyValidating);\n        var promises = [];\n        for (var i = 0; i < updaters.length; ++i) {\n            promises.push(updaters[i](shouldRevalidate, currentData, currentError, currentIsValidating, i > 0));\n        }\n        // return new updated value\n        return Promise.all(promises).then(function () { return cache.get(key); });\n    }\n    return Promise.resolve(cache.get(key));\n};\nvar broadcastState = function (key, data, error, isValidating) {\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        for (var i = 0; i < updaters.length; ++i) {\n            updaters[i](false, data, error, isValidating);\n        }\n    }\n};\nvar mutate = function (_key, _data, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    return __awaiter(void 0, void 0, void 0, function () {\n        var _a, key, keyErr, beforeMutationTs, beforeConcurrentPromisesTs, data, error, isAsyncMutation, err_1, shouldAbort, updaters, promises, i;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2];\n                    if (!key)\n                        return [2 /*return*/];\n                    // if there is no new data to update, let's just revalidate the key\n                    if (typeof _data === 'undefined')\n                        return [2 /*return*/, trigger(_key, shouldRevalidate)\n                            // update global timestamps\n                        ];\n                    // update global timestamps\n                    MUTATION_TS[key] = now() - 1;\n                    MUTATION_END_TS[key] = 0;\n                    beforeMutationTs = MUTATION_TS[key];\n                    beforeConcurrentPromisesTs = CONCURRENT_PROMISES_TS[key];\n                    isAsyncMutation = false;\n                    if (_data && typeof _data === 'function') {\n                        // `_data` is a function, call it passing current cache value\n                        try {\n                            _data = _data(cache.get(key));\n                        }\n                        catch (err) {\n                            error = err;\n                        }\n                    }\n                    if (!(_data && typeof _data.then === 'function')) return [3 /*break*/, 5];\n                    // `_data` is a promise\n                    isAsyncMutation = true;\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, _data];\n                case 2:\n                    data = _b.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    err_1 = _b.sent();\n                    error = err_1;\n                    return [3 /*break*/, 4];\n                case 4: return [3 /*break*/, 6];\n                case 5:\n                    data = _data;\n                    _b.label = 6;\n                case 6:\n                    shouldAbort = function () {\n                        // check if other mutations have occurred since we've started this mutation\n                        if (beforeMutationTs !== MUTATION_TS[key] ||\n                            beforeConcurrentPromisesTs !== CONCURRENT_PROMISES_TS[key]) {\n                            if (error)\n                                throw error;\n                            return true;\n                        }\n                    };\n                    // if there's a race we don't update cache or broadcast change, just return the data\n                    if (shouldAbort())\n                        return [2 /*return*/, data];\n                    if (typeof data !== 'undefined') {\n                        // update cached data\n                        cache.set(key, data);\n                    }\n                    // always update or reset the error\n                    cache.set(keyErr, error);\n                    // reset the timestamp to mark the mutation has ended\n                    MUTATION_END_TS[key] = now() - 1;\n                    if (!!isAsyncMutation) return [3 /*break*/, 8];\n                    // let's always broadcast in the next tick\n                    // to dedupe synchronous mutation calls\n                    // check out https://github.com/vercel/swr/pull/735 for more details\n                    return [4 /*yield*/, 0\n                        // we skip broadcasting if there's another mutation happened synchronously\n                    ];\n                case 7:\n                    // let's always broadcast in the next tick\n                    // to dedupe synchronous mutation calls\n                    // check out https://github.com/vercel/swr/pull/735 for more details\n                    _b.sent();\n                    // we skip broadcasting if there's another mutation happened synchronously\n                    if (shouldAbort())\n                        return [2 /*return*/, data];\n                    _b.label = 8;\n                case 8:\n                    updaters = CACHE_REVALIDATORS[key];\n                    if (updaters) {\n                        promises = [];\n                        for (i = 0; i < updaters.length; ++i) {\n                            promises.push(updaters[i](!!shouldRevalidate, data, error, undefined, i > 0));\n                        }\n                        // return new updated value\n                        return [2 /*return*/, Promise.all(promises).then(function () {\n                                if (error)\n                                    throw error;\n                                return cache.get(key);\n                            })];\n                    }\n                    // throw error or return data to be used by caller of mutate\n                    if (error)\n                        throw error;\n                    return [2 /*return*/, data];\n            }\n        });\n    });\n};\nfunction useSWR() {\n    var _this = this;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var _key, fn, config = {};\n    if (args.length >= 1) {\n        _key = args[0];\n    }\n    if (args.length > 2) {\n        fn = args[1];\n        config = args[2];\n    }\n    else {\n        if (typeof args[1] === 'function') {\n            fn = args[1];\n        }\n        else if (typeof args[1] === 'object') {\n            config = args[1];\n        }\n    }\n    // we assume `key` as the identifier of the request\n    // `key` can change but `fn` shouldn't\n    // (because `revalidate` only depends on `key`)\n    // `keyErr` is the cache key for error objects\n    var _a = cache.serializeKey(_key), key = _a[0], fnArgs = _a[1], keyErr = _a[2], keyValidating = _a[3];\n    config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), config);\n    var configRef = useRef(config);\n    useIsomorphicLayoutEffect(function () {\n        configRef.current = config;\n    });\n    if (typeof fn === 'undefined') {\n        // use the global fetcher\n        fn = config.fetcher;\n    }\n    var resolveData = function () {\n        var cachedData = cache.get(key);\n        return typeof cachedData === 'undefined' ? config.initialData : cachedData;\n    };\n    var initialData = resolveData();\n    var initialError = cache.get(keyErr);\n    var initialIsValidating = !!cache.get(keyValidating);\n    // if a state is accessed (data, error or isValidating),\n    // we add the state to dependencies so if the state is\n    // updated in the future, we can trigger a rerender\n    var stateDependencies = useRef({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    var stateRef = useRef({\n        data: initialData,\n        error: initialError,\n        isValidating: initialIsValidating\n    });\n    // display the data label in the React DevTools next to SWR hooks\n    useDebugValue(stateRef.current.data);\n    var _b = useState(null), rerender = _b[1];\n    var dispatch = useCallback(function (payload) {\n        var shouldUpdateState = false;\n        for (var k in payload) {\n            if (stateRef.current[k] === payload[k]) {\n                continue;\n            }\n            stateRef.current[k] = payload[k];\n            if (stateDependencies.current[k]) {\n                shouldUpdateState = true;\n            }\n        }\n        if (shouldUpdateState || config.suspense) {\n            // if component is unmounted, should skip rerender\n            // if component is not mounted, should skip rerender\n            if (unmountedRef.current || !initialMountedRef.current)\n                return;\n            rerender({});\n        }\n    }, \n    // config.suspense isn't allowed to change during the lifecycle\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // error ref inside revalidate (is last request errored?)\n    var unmountedRef = useRef(false);\n    var keyRef = useRef(key);\n    // check if component is mounted in suspense mode\n    var initialMountedRef = useRef(false);\n    // do unmount check for callbacks\n    var eventsCallback = useCallback(function (event) {\n        var _a;\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        if (unmountedRef.current)\n            return;\n        if (!initialMountedRef.current)\n            return;\n        if (key !== keyRef.current)\n            return;\n        (_a = configRef.current)[event].apply(_a, params);\n    }, [key]);\n    var boundMutate = useCallback(function (data, shouldRevalidate) {\n        return mutate(keyRef.current, data, shouldRevalidate);\n    }, []);\n    var addRevalidator = function (revalidators, callback) {\n        if (!callback)\n            return;\n        if (!revalidators[key]) {\n            revalidators[key] = [callback];\n        }\n        else {\n            revalidators[key].push(callback);\n        }\n    };\n    var removeRevalidator = function (revlidators, callback) {\n        if (revlidators[key]) {\n            var revalidators = revlidators[key];\n            var index = revalidators.indexOf(callback);\n            if (index >= 0) {\n                // 10x faster than splice\n                // https://jsperf.com/array-remove-by-index\n                revalidators[index] = revalidators[revalidators.length - 1];\n                revalidators.pop();\n            }\n        }\n    };\n    // start a revalidation\n    var revalidate = useCallback(function (revalidateOpts) {\n        if (revalidateOpts === void 0) { revalidateOpts = {}; }\n        return __awaiter(_this, void 0, void 0, function () {\n            var loading, shouldDeduping, newData, startAt, newState, err_2, retryCount;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!key || !fn)\n                            return [2 /*return*/, false];\n                        if (unmountedRef.current)\n                            return [2 /*return*/, false];\n                        if (configRef.current.isPaused())\n                            return [2 /*return*/, false];\n                        revalidateOpts = Object.assign({ dedupe: false }, revalidateOpts);\n                        loading = true;\n                        shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && revalidateOpts.dedupe;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 6, , 7]);\n                        dispatch({\n                            isValidating: true\n                        });\n                        cache.set(keyValidating, true);\n                        if (!shouldDeduping) {\n                            // also update other hooks\n                            broadcastState(key, stateRef.current.data, stateRef.current.error, true);\n                        }\n                        newData = void 0;\n                        startAt = void 0;\n                        if (!shouldDeduping) return [3 /*break*/, 3];\n                        // there's already an ongoing request,\n                        // this one needs to be deduplicated.\n                        startAt = CONCURRENT_PROMISES_TS[key];\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 2:\n                        newData = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 3:\n                        // if no cache being rendered currently (it shows a blank page),\n                        // we trigger the loading slow event.\n                        if (config.loadingTimeout && !cache.get(key)) {\n                            setTimeout(function () {\n                                if (loading)\n                                    eventsCallback('onLoadingSlow', key, config);\n                            }, config.loadingTimeout);\n                        }\n                        if (fnArgs !== null) {\n                            CONCURRENT_PROMISES[key] = fn.apply(void 0, fnArgs);\n                        }\n                        else {\n                            CONCURRENT_PROMISES[key] = fn(key);\n                        }\n                        CONCURRENT_PROMISES_TS[key] = startAt = now();\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 4:\n                        newData = _a.sent();\n                        setTimeout(function () {\n                            delete CONCURRENT_PROMISES[key];\n                            delete CONCURRENT_PROMISES_TS[key];\n                        }, config.dedupingInterval);\n                        // trigger the success event,\n                        // only do this for the original request.\n                        eventsCallback('onSuccess', newData, key, config);\n                        _a.label = 5;\n                    case 5:\n                        // if there're other ongoing request(s), started after the current one,\n                        // we need to ignore the current one to avoid possible race conditions:\n                        //   req1------------------>res1        (current one)\n                        //        req2---------------->res2\n                        // the request that fired later will always be kept.\n                        if (CONCURRENT_PROMISES_TS[key] > startAt) {\n                            return [2 /*return*/, false];\n                        }\n                        // if there're other mutations(s), overlapped with the current revalidation:\n                        // case 1:\n                        //   req------------------>res\n                        //       mutate------>end\n                        // case 2:\n                        //         req------------>res\n                        //   mutate------>end\n                        // case 3:\n                        //   req------------------>res\n                        //       mutate-------...---------->\n                        // we have to ignore the revalidation result (res) because it's no longer fresh.\n                        // meanwhile, a new revalidation should be triggered when the mutation ends.\n                        if (MUTATION_TS[key] &&\n                            // case 1\n                            (startAt <= MUTATION_TS[key] ||\n                                // case 2\n                                startAt <= MUTATION_END_TS[key] ||\n                                // case 3\n                                MUTATION_END_TS[key] === 0)) {\n                            dispatch({ isValidating: false });\n                            return [2 /*return*/, false];\n                        }\n                        cache.set(key, newData);\n                        cache.set(keyErr, undefined);\n                        cache.set(keyValidating, false);\n                        newState = {\n                            isValidating: false\n                        };\n                        if (typeof stateRef.current.error !== 'undefined') {\n                            // we don't have an error\n                            newState.error = undefined;\n                        }\n                        if (!config.compare(stateRef.current.data, newData)) {\n                            // deep compare to avoid extra re-render\n                            // data changed\n                            newState.data = newData;\n                        }\n                        // merge the new state\n                        dispatch(newState);\n                        if (!shouldDeduping) {\n                            // also update other hooks\n                            broadcastState(key, newData, newState.error, false);\n                        }\n                        return [3 /*break*/, 7];\n                    case 6:\n                        err_2 = _a.sent();\n                        delete CONCURRENT_PROMISES[key];\n                        delete CONCURRENT_PROMISES_TS[key];\n                        if (configRef.current.isPaused()) {\n                            dispatch({\n                                isValidating: false\n                            });\n                            return [2 /*return*/, false];\n                        }\n                        cache.set(keyErr, err_2);\n                        // get a new error\n                        // don't use deep equal for errors\n                        if (stateRef.current.error !== err_2) {\n                            // we keep the stale data\n                            dispatch({\n                                isValidating: false,\n                                error: err_2\n                            });\n                            if (!shouldDeduping) {\n                                // also broadcast to update other hooks\n                                broadcastState(key, undefined, err_2, false);\n                            }\n                        }\n                        // events and retry\n                        eventsCallback('onError', err_2, key, config);\n                        if (config.shouldRetryOnError) {\n                            retryCount = (revalidateOpts.retryCount || 0) + 1;\n                            eventsCallback('onErrorRetry', err_2, key, config, revalidate, Object.assign({ dedupe: true }, revalidateOpts, { retryCount: retryCount }));\n                        }\n                        return [3 /*break*/, 7];\n                    case 7:\n                        loading = false;\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    }, \n    // dispatch is immutable, and `eventsCallback`, `fnArgs`, `keyErr`, and `keyValidating` are based on `key`,\n    // so we can them from the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // useSWR('key', () => fetch('/api/'), { suspense: true })\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [key]);\n    // mounted (client side rendering)\n    useIsomorphicLayoutEffect(function () {\n        if (!key)\n            return undefined;\n        // after `key` updates, we need to mark it as mounted\n        unmountedRef.current = false;\n        initialMountedRef.current = true;\n        // after the component is mounted (hydrated),\n        // we need to update the data from the cache\n        // and trigger a revalidation\n        var currentHookData = stateRef.current.data;\n        var latestKeyedData = resolveData();\n        // update the state if the key changed (not the inital render) or cache updated\n        if (keyRef.current !== key) {\n            keyRef.current = key;\n        }\n        if (!config.compare(currentHookData, latestKeyedData)) {\n            dispatch({ data: latestKeyedData });\n        }\n        // revalidate with deduping\n        var softRevalidate = function () { return revalidate({ dedupe: true }); };\n        // trigger a revalidation\n        if (config.revalidateOnMount ||\n            (!config.initialData && config.revalidateOnMount === undefined)) {\n            if (typeof latestKeyedData !== 'undefined' && !IS_SERVER) {\n                // delay revalidate if there's cache\n                // to not block the rendering\n                rAF(softRevalidate);\n            }\n            else {\n                softRevalidate();\n            }\n        }\n        var pending = false;\n        var onFocus = function () {\n            if (pending || !configRef.current.revalidateOnFocus)\n                return;\n            pending = true;\n            softRevalidate();\n            setTimeout(function () { return (pending = false); }, configRef.current.focusThrottleInterval);\n        };\n        var onReconnect = function () {\n            if (configRef.current.revalidateOnReconnect) {\n                softRevalidate();\n            }\n        };\n        // register global cache update listener\n        var onUpdate = function (shouldRevalidate, updatedData, updatedError, updatedIsValidating, dedupe) {\n            if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n            if (dedupe === void 0) { dedupe = true; }\n            // update hook state\n            var newState = {};\n            var needUpdate = false;\n            if (typeof updatedData !== 'undefined' &&\n                !config.compare(stateRef.current.data, updatedData)) {\n                newState.data = updatedData;\n                needUpdate = true;\n            }\n            // always update error\n            // because it can be `undefined`\n            if (stateRef.current.error !== updatedError) {\n                newState.error = updatedError;\n                needUpdate = true;\n            }\n            if (typeof updatedIsValidating !== 'undefined' &&\n                stateRef.current.isValidating !== updatedIsValidating) {\n                newState.isValidating = updatedIsValidating;\n                needUpdate = true;\n            }\n            if (needUpdate) {\n                dispatch(newState);\n            }\n            if (shouldRevalidate) {\n                if (dedupe) {\n                    return softRevalidate();\n                }\n                else {\n                    return revalidate();\n                }\n            }\n            return false;\n        };\n        addRevalidator(FOCUS_REVALIDATORS, onFocus);\n        addRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n        addRevalidator(CACHE_REVALIDATORS, onUpdate);\n        return function () {\n            // cleanup\n            dispatch = function () { return null; };\n            // mark it as unmounted\n            unmountedRef.current = true;\n            removeRevalidator(FOCUS_REVALIDATORS, onFocus);\n            removeRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n            removeRevalidator(CACHE_REVALIDATORS, onUpdate);\n        };\n    }, [key, revalidate]);\n    useIsomorphicLayoutEffect(function () {\n        var timer = null;\n        var tick = function () { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!stateRef.current.error &&\n                            (configRef.current.refreshWhenHidden ||\n                                configRef.current.isDocumentVisible()) &&\n                            (configRef.current.refreshWhenOffline || configRef.current.isOnline()))) return [3 /*break*/, 2];\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        return [4 /*yield*/, revalidate({ dedupe: true })];\n                    case 1:\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        // Read the latest refreshInterval\n                        if (configRef.current.refreshInterval && timer) {\n                            timer = setTimeout(tick, configRef.current.refreshInterval);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        if (configRef.current.refreshInterval) {\n            timer = setTimeout(tick, configRef.current.refreshInterval);\n        }\n        return function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n    }, [\n        config.refreshInterval,\n        config.refreshWhenHidden,\n        config.refreshWhenOffline,\n        revalidate\n    ]);\n    // define returned state\n    // can be memorized since the state is a ref\n    var memoizedState = useMemo(function () {\n        var state = { revalidate: revalidate, mutate: boundMutate };\n        Object.defineProperties(state, {\n            error: {\n                // `key` might be changed in the upcoming hook re-render,\n                // but the previous state will stay\n                // so we need to match the latest key and data (fallback to `initialData`)\n                get: function () {\n                    stateDependencies.current.error = true;\n                    return keyRef.current === key ? stateRef.current.error : initialError;\n                },\n                enumerable: true\n            },\n            data: {\n                get: function () {\n                    stateDependencies.current.data = true;\n                    return keyRef.current === key ? stateRef.current.data : initialData;\n                },\n                enumerable: true\n            },\n            isValidating: {\n                get: function () {\n                    stateDependencies.current.isValidating = true;\n                    return key ? stateRef.current.isValidating : false;\n                },\n                enumerable: true\n            }\n        });\n        return state;\n        // `boundMutate` is immutable, and the immutability of `revalidate` depends on `key`\n        // so we can omit them from the deps array,\n        // but we put it to enable react-hooks/exhaustive-deps rule.\n        // `initialData` and `initialError` are not initial values\n        // because they are changed during the lifecycle\n        // so we should add them in the deps array.\n    }, [revalidate, initialData, initialError, boundMutate, key]);\n    // suspense\n    if (config.suspense) {\n        // in suspense mode, we can't return empty state\n        // (it should be suspended)\n        // try to get data and error from cache\n        var latestData = cache.get(key);\n        var latestError = cache.get(keyErr);\n        if (typeof latestData === 'undefined') {\n            latestData = initialData;\n        }\n        if (typeof latestError === 'undefined') {\n            latestError = initialError;\n        }\n        if (typeof latestData === 'undefined' &&\n            typeof latestError === 'undefined') {\n            // need to start the request if it hasn't\n            if (!CONCURRENT_PROMISES[key]) {\n                // trigger revalidate immediately\n                // to get the promise\n                // in this revalidate, should not rerender\n                revalidate();\n            }\n            if (CONCURRENT_PROMISES[key] &&\n                typeof CONCURRENT_PROMISES[key].then === 'function') {\n                // if it is a promise\n                throw CONCURRENT_PROMISES[key];\n            }\n            // it's a value, return it directly (override)\n            latestData = CONCURRENT_PROMISES[key];\n        }\n        if (typeof latestData === 'undefined' && latestError) {\n            // in suspense mode, throw error if there's no content\n            throw latestError;\n        }\n        // return the latest data / error from cache\n        // in case `key` has changed\n        return {\n            error: latestError,\n            data: latestData,\n            // revalidate will be deprecated in the 1.x release\n            // because mutate() covers the same use case of revalidate().\n            // This remains only for backward compatibility\n            revalidate: revalidate,\n            mutate: boundMutate,\n            isValidating: stateRef.current.isValidating\n        };\n    }\n    return memoizedState;\n}\nvar SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}