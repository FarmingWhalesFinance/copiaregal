{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\swaps-client\\\\src\\\\components\\\\Exchange\\\\ConfirmationBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useMemo } from \"react\";\nimport { USD_DECIMALS, PRECISION, BASIS_POINTS_DIVISOR, LIMIT, MIN_PROFIT_TIME, INCREASE, expandDecimals, getExchangeRate, getProfitPrice, getTimeRemaining, formatAmount, useLocalStorageSerializeKey, getExchangeRateDisplay, DEFAULT_SLIPPAGE_AMOUNT, DEFAULT_HIGHER_SLIPPAGE_AMOUNT, formatDateTime, calculatePositionDelta, getSpread } from \"../../Helpers\";\nimport { SLIPPAGE_BPS_KEY } from '../../config/localstorage';\nimport { getConstant } from \"../../Constants\";\nimport { getContract } from \"../../Addresses\";\nimport { BsArrowRight } from \"react-icons/bs\";\nimport Modal from \"../Modal/Modal\";\nimport Tooltip from \"../Tooltip/Tooltip\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport ExchangeInfoRow from \"./ExchangeInfoRow\";\nimport { getNativeToken, getToken, getWrappedToken } from \"../../data/Tokens\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConfirmationBox(props) {\n  _s();\n\n  const {\n    fromToken,\n    fromTokenInfo,\n    toToken,\n    toTokenInfo,\n    isSwap,\n    isLong,\n    isMarketOrder,\n    orderOption,\n    isShort,\n    toAmount,\n    fromAmount,\n    isHigherSlippageAllowed,\n    setIsHigherSlippageAllowed,\n    onConfirmationClick,\n    setIsConfirming,\n    shortCollateralAddress,\n    hasExistingPosition,\n    leverage,\n    existingPosition,\n    existingLiquidationPrice,\n    displayLiquidationPrice,\n    shortCollateralToken,\n    isPendingConfirmation,\n    triggerPriceUsd,\n    triggerRatio,\n    fees,\n    feesUsd,\n    isSubmitting,\n    fromUsdMin,\n    toUsdMax,\n    nextAveragePrice,\n    collateralTokenAddress,\n    feeBps,\n    chainId,\n    orders,\n    trackAction,\n    trackTrade\n  } = props;\n  const [savedSlippageAmount] = useLocalStorageSerializeKey([chainId, SLIPPAGE_BPS_KEY], DEFAULT_SLIPPAGE_AMOUNT);\n  const [isProfitWarningAccepted, setIsProfitWarningAccepted] = useState(false);\n  let minOut;\n  let fromTokenUsd;\n  let toTokenUsd;\n  let collateralAfterFees = fromUsdMin;\n\n  if (feesUsd) {\n    collateralAfterFees = fromUsdMin.sub(feesUsd);\n  }\n\n  if (isSwap) {\n    minOut = toAmount.mul(BASIS_POINTS_DIVISOR - savedSlippageAmount).div(BASIS_POINTS_DIVISOR);\n    fromTokenUsd = fromTokenInfo ? formatAmount(fromTokenInfo.minPrice, USD_DECIMALS, 2, true) : 0;\n    toTokenUsd = toTokenInfo ? formatAmount(toTokenInfo.maxPrice, USD_DECIMALS, 2, true) : 0;\n  }\n\n  const getTitle = () => {\n    if (!isMarketOrder) {\n      return \"Confirm Limit Order\";\n    }\n\n    if (isSwap) {\n      return \"Confirm Swap\";\n    }\n\n    return isLong ? \"Confirm Long\" : \"Confirm Short\";\n  };\n\n  const title = getTitle();\n  const existingOrder = useMemo(() => {\n    const wrappedToken = getWrappedToken(chainId);\n\n    for (const order of orders) {\n      if (order.type !== INCREASE) continue;\n      const sameToken = order.indexToken === wrappedToken.address ? toToken.isNative : order.indexToken === toToken.address;\n\n      if (order.isLong === isLong && sameToken) {\n        return order;\n      }\n    }\n  }, [orders, chainId, isLong, toToken.address, toToken.isNative]);\n\n  const getError = () => {\n    if (!isSwap && hasExistingPosition && !isMarketOrder) {\n      const {\n        delta,\n        hasProfit\n      } = calculatePositionDelta(triggerPriceUsd, existingPosition);\n\n      if (hasProfit && delta.eq(0)) {\n        return \"Invalid price, see warning\";\n      }\n    }\n\n    if (isMarketOrder && hasPendingProfit && !isProfitWarningAccepted) {\n      return \"Forfeit profit not checked\";\n    }\n\n    return false;\n  };\n\n  const getPrimaryText = () => {\n    if (!isPendingConfirmation) {\n      const error = getError();\n\n      if (error) {\n        return error;\n      }\n\n      if (isSwap) {\n        return title;\n      }\n\n      const action = isMarketOrder ? isLong ? \"Long\" : \"Short\" : \"Create Order\";\n\n      if (isMarketOrder && MIN_PROFIT_TIME > 0 && hasExistingPosition && existingPosition.delta.eq(0) && existingPosition.pendingDelta.gt(0)) {\n        return isLong ? `Forfeit profit and ${action}` : `Forfeit profit and Short`;\n      }\n\n      return isMarketOrder && MIN_PROFIT_TIME > 0 ? `Accept minimum and ${action}` : action;\n    }\n\n    if (!isMarketOrder) {\n      return \"Creating Order...\";\n    }\n\n    if (isSwap) {\n      return \"Swapping...\";\n    }\n\n    if (isLong) {\n      return \"Longing...\";\n    }\n\n    return \"Shorting...\";\n  };\n\n  const isPrimaryEnabled = () => {\n    if (getError()) {\n      return false;\n    }\n\n    return !isPendingConfirmation && !isSubmitting;\n  };\n\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n  const spread = getSpread(fromTokenInfo, toTokenInfo, isLong, nativeTokenAddress); // it's meaningless for limit/stop orders to show spread based on current prices\n\n  const showSpread = isMarketOrder && !!spread;\n  let allowedSlippage = savedSlippageAmount;\n\n  if (isHigherSlippageAllowed) {\n    allowedSlippage = DEFAULT_HIGHER_SLIPPAGE_AMOUNT;\n  }\n\n  const renderSpreadWarning = useCallback(() => {\n    if (!isMarketOrder) {\n      return null;\n    }\n\n    if (spread && spread.isHigh) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Confirmation-box-warning\",\n        children: \"The spread is > 1%, please ensure the trade details are acceptable before comfirming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this);\n    }\n  }, [isMarketOrder, spread]);\n  const renderFeeWarning = useCallback(() => {\n    if (orderOption === LIMIT || !feeBps || feeBps <= 50) {\n      return null;\n    }\n\n    if (isSwap) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Confirmation-box-warning\",\n        children: [\"Fees are high to swap from \", fromToken.symbol, \" to \", toToken.symbol, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (!collateralTokenAddress) {\n      return null;\n    }\n\n    const collateralToken = getToken(chainId, collateralTokenAddress);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Confirmation-box-warning\",\n      children: [\"Fees are high to swap from \", fromToken.symbol, \" to \", collateralToken.symbol, \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 84\n      }, this), collateralToken.symbol, \" is needed for collateral.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  }, [feeBps, isSwap, collateralTokenAddress, chainId, fromToken.symbol, toToken.symbol, orderOption]);\n  const hasPendingProfit = MIN_PROFIT_TIME > 0 && existingPosition && existingPosition.delta.eq(0) && existingPosition.pendingDelta.gt(0);\n  const renderMinProfitWarning = useCallback(() => {\n    if (MIN_PROFIT_TIME === 0) {\n      return null;\n    }\n\n    if (!isSwap) {\n      if (hasExistingPosition) {\n        const minProfitExpiration = existingPosition.lastIncreasedTime + MIN_PROFIT_TIME;\n\n        if (isMarketOrder && existingPosition.delta.eq(0) && existingPosition.pendingDelta.gt(0)) {\n          const profitPrice = getProfitPrice(existingPosition.markPrice, existingPosition);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Confirmation-box-warning\",\n            children: [\"Increasing this position at the current price will forfeit a pending profit of \", existingPosition.deltaStr, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), \"Profit price: \", existingPosition.isLong ? \">\" : \"<\", \" $\", formatAmount(profitPrice, USD_DECIMALS, 2, true), \". This rule only applies for the next \", getTimeRemaining(minProfitExpiration), \", until\", \" \", formatDateTime(minProfitExpiration), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this);\n        }\n\n        if (!isMarketOrder) {\n          const {\n            delta,\n            hasProfit\n          } = calculatePositionDelta(triggerPriceUsd, existingPosition);\n\n          if (hasProfit && delta.eq(0)) {\n            const profitPrice = getProfitPrice(existingPosition.markPrice, existingPosition);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Confirmation-box-warning\",\n              children: [\"This order will forfeit a profit of \", existingPosition.deltaStr, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 81\n              }, this), \"Profit price: \", existingPosition.isLong ? \">\" : \"<\", \" $\", formatAmount(profitPrice, USD_DECIMALS, 2, true), \". This rule only applies for the next \", getTimeRemaining(minProfitExpiration), \", until\", \" \", formatDateTime(minProfitExpiration), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this);\n          }\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Confirmation-box-warning\",\n        children: [\"A minimum price change of 1.5% is required for a position to be in profit. This only applies for the first\", \" \", MIN_PROFIT_TIME / 60 / 60, \" hours after increasing a position.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this);\n    }\n  }, [isSwap, hasExistingPosition, existingPosition, isMarketOrder, triggerPriceUsd]);\n  const renderExistingOrderWarning = useCallback(() => {\n    if (isSwap || !existingOrder) {\n      return;\n    }\n\n    const indexToken = getToken(chainId, existingOrder.indexToken);\n    const sizeInToken = formatAmount(existingOrder.sizeDelta.mul(PRECISION).div(existingOrder.triggerPrice), USD_DECIMALS, 4, true);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Confirmation-box-warning\",\n      children: [\"You have an active Limit Order to Increase \", existingOrder.isLong ? \"Long\" : \"Short\", \" \", sizeInToken, \" \", indexToken.symbol, \" ($\", formatAmount(existingOrder.sizeDelta, USD_DECIMALS, 2, true), \") at price $\", formatAmount(existingOrder.triggerPrice, USD_DECIMALS, 2, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this);\n  }, [existingOrder, isSwap, chainId]); // TODO handle unaprproved order plugin (very unlikely case)\n\n  const renderMain = useCallback(() => {\n    if (isSwap) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Confirmation-box-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Pay\\xA0\", formatAmount(fromAmount, fromToken.decimals, 4, true), \" \", fromToken.symbol, \" ($\", formatAmount(fromUsdMin, USD_DECIMALS, 2, true), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Confirmation-box-main-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Receive\\xA0\", formatAmount(toAmount, toToken.decimals, 4, true), \" \", toToken.symbol, \" ($\", formatAmount(toUsdMax, USD_DECIMALS, 2, true), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Confirmation-box-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Pay\\xA0\", formatAmount(fromAmount, fromToken.decimals, 4, true), \" \", fromToken.symbol, \" ($\", formatAmount(fromUsdMin, USD_DECIMALS, 2, true), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Confirmation-box-main-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [isLong ? \"Long\" : \"Short\", \"\\xA0\", formatAmount(toAmount, toToken.decimals, 4, true), \" \", toToken.symbol, \" ($\", formatAmount(toUsdMax, USD_DECIMALS, 2, true), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this);\n  }, [isSwap, fromAmount, fromToken, toToken, fromUsdMin, toUsdMax, isLong, toAmount]);\n  const SWAP_ORDER_EXECUTION_GAS_FEE = getConstant(chainId, \"SWAP_ORDER_EXECUTION_GAS_FEE\");\n  const INCREASE_ORDER_EXECUTION_GAS_FEE = getConstant(chainId, \"INCREASE_ORDER_EXECUTION_GAS_FEE\");\n  const executionFee = isSwap ? SWAP_ORDER_EXECUTION_GAS_FEE : INCREASE_ORDER_EXECUTION_GAS_FEE;\n  const renderExecutionFee = useCallback(() => {\n    if (isMarketOrder) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n      label: \"Execution Fee\",\n      children: [formatAmount(executionFee, 18, 4), \" \", getNativeToken(chainId).symbol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this);\n  }, [isMarketOrder, executionFee, chainId]);\n  const renderAvailableLiquidity = useCallback(() => {\n    let availableLiquidity;\n    const riskThresholdBps = 5000;\n    let isLiquidityRisk;\n    const token = isSwap || isLong ? toTokenInfo : shortCollateralToken;\n\n    if (!token || !token.poolAmount || !token.availableAmount) {\n      return null;\n    }\n\n    if (isSwap) {\n      const poolWithoutBuffer = token.poolAmount.sub(token.bufferAmount);\n      availableLiquidity = token.availableAmount.gt(poolWithoutBuffer) ? poolWithoutBuffer : token.availableAmount;\n      isLiquidityRisk = availableLiquidity.mul(riskThresholdBps).div(BASIS_POINTS_DIVISOR).lt(toAmount);\n    } else {\n      if (isShort) {\n        availableLiquidity = token.availableAmount;\n        let adjustedMaxGlobalShortSize;\n\n        if (toTokenInfo.maxAvailableShort && toTokenInfo.maxAvailableShort.gt(0)) {\n          adjustedMaxGlobalShortSize = toTokenInfo.maxAvailableShort.mul(expandDecimals(1, token.decimals)).div(expandDecimals(1, USD_DECIMALS));\n        }\n\n        if (adjustedMaxGlobalShortSize && adjustedMaxGlobalShortSize.lt(token.availableAmount)) {\n          availableLiquidity = adjustedMaxGlobalShortSize;\n        }\n\n        const sizeTokens = toUsdMax.mul(expandDecimals(1, token.decimals)).div(token.minPrice);\n        isLiquidityRisk = availableLiquidity.mul(riskThresholdBps).div(BASIS_POINTS_DIVISOR).lt(sizeTokens);\n      } else {\n        availableLiquidity = token.availableAmount;\n        isLiquidityRisk = availableLiquidity.mul(riskThresholdBps).div(BASIS_POINTS_DIVISOR).lt(toAmount);\n      }\n    }\n\n    if (!availableLiquidity) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n      label: \"Available Liquidity\",\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        position: \"right-bottom\",\n        handleClassName: isLiquidityRisk ? \"negative\" : null,\n        handle: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [formatAmount(availableLiquidity, token.decimals, token.isStable ? 0 : 2, true), \" \", token.symbol]\n        }, void 0, true),\n        renderContent: () => isLiquidityRisk ? \"There may not be sufficient liquidity to execute your order when the price conditions are met\" : \"The order will only execute if the price conditions are met and there is sufficient liquidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this);\n  }, [toTokenInfo, shortCollateralToken, isShort, isLong, isSwap, toAmount, toUsdMax]);\n  const renderMarginSection = useCallback(() => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Confirmation-box-info\",\n        children: [renderMain(), renderFeeWarning(), renderMinProfitWarning(), renderExistingOrderWarning(), hasPendingProfit && isMarketOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PositionEditor-accept-profit-warning\",\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            isChecked: isProfitWarningAccepted,\n            setIsChecked: setIsProfitWarningAccepted,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"muted\",\n              children: \"Forfeit profit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), orderOption === LIMIT && renderAvailableLiquidity(), isShort && /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Profits In\",\n          children: getToken(chainId, shortCollateralAddress).symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), isLong && /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Profits In\",\n          value: toTokenInfo.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Leverage\",\n          children: [hasExistingPosition && toAmount && toAmount.gt(0) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline-block muted\",\n            children: [formatAmount(existingPosition.leverage, 4, 2), \"x\", /*#__PURE__*/_jsxDEV(BsArrowRight, {\n              className: \"transition-arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), toAmount && leverage && leverage.gt(0) && `${formatAmount(leverage, 4, 2)}x`, !toAmount && leverage && leverage.gt(0) && `-`, leverage && leverage.eq(0) && `-`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Liq. Price\",\n          children: [hasExistingPosition && toAmount && toAmount.gt(0) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline-block muted\",\n            children: [\"$\", formatAmount(existingLiquidationPrice, USD_DECIMALS, 2, true), /*#__PURE__*/_jsxDEV(BsArrowRight, {\n              className: \"transition-arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), toAmount && displayLiquidationPrice && `$${formatAmount(displayLiquidationPrice, USD_DECIMALS, 2, true)}`, !toAmount && displayLiquidationPrice && `-`, !displayLiquidationPrice && `-`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Fees\",\n          children: [\"$\", formatAmount(feesUsd, USD_DECIMALS, 2, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Collateral\",\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            handle: `$${formatAmount(collateralAfterFees, USD_DECIMALS, 2, true)}`,\n            position: \"right-bottom\",\n            renderContent: () => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"Your position's collateral after deducting fees.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 21\n                }, this), \"Pay amount: $\", formatAmount(fromUsdMin, USD_DECIMALS, 2, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this), \"Fees: $\", formatAmount(feesUsd, USD_DECIMALS, 2, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), showSpread && /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Spread\",\n          isWarning: spread.isHigh,\n          isTop: true,\n          children: [formatAmount(spread.value.mul(100), USD_DECIMALS, 2, true), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), isMarketOrder && /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Entry Price\",\n          children: [hasExistingPosition && toAmount && toAmount.gt(0) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline-block muted\",\n            children: [\"$\", formatAmount(existingPosition.averagePrice, USD_DECIMALS, 2, true), /*#__PURE__*/_jsxDEV(BsArrowRight, {\n              className: \"transition-arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 17\n          }, this), nextAveragePrice && `$${formatAmount(nextAveragePrice, USD_DECIMALS, 2, true)}`, !nextAveragePrice && `-`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this), !isMarketOrder && /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Limit Price\",\n          isTop: true,\n          children: [\"$\", formatAmount(triggerPriceUsd, USD_DECIMALS, 2, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Borrow Fee\",\n          children: [isLong && toTokenInfo && formatAmount(toTokenInfo.fundingRate, 4, 4), isShort && shortCollateralToken && formatAmount(shortCollateralToken.fundingRate, 4, 4), (isLong && toTokenInfo && toTokenInfo.fundingRate || isShort && shortCollateralToken && shortCollateralToken.fundingRate) && \"% / 1h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Allowed Slippage\",\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            handle: `${formatAmount(allowedSlippage, 2, 2)}%`,\n            position: \"right-top\",\n            renderContent: () => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"You can change this in the settings menu on the top right of the page.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 21\n                }, this), \"Note that a low allowed slippage, e.g. less than 0.5%, may result in failed orders if prices are volatile.\"]\n              }, void 0, true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), isMarketOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PositionEditor-allow-higher-slippage\",\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            isChecked: isHigherSlippageAllowed,\n            setIsChecked: setIsHigherSlippageAllowed,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"muted\",\n              children: \"Allow up to 1% slippage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), renderExecutionFee()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }, [renderMain, renderMinProfitWarning, shortCollateralAddress, isShort, isLong, toTokenInfo, nextAveragePrice, toAmount, hasExistingPosition, existingPosition, isMarketOrder, triggerPriceUsd, showSpread, spread, displayLiquidationPrice, existingLiquidationPrice, feesUsd, leverage, renderExecutionFee, shortCollateralToken, renderExistingOrderWarning, chainId, renderFeeWarning, hasPendingProfit, isProfitWarningAccepted, renderAvailableLiquidity, orderOption, fromUsdMin, collateralAfterFees, isHigherSlippageAllowed, setIsHigherSlippageAllowed, allowedSlippage]);\n  const renderSwapSection = useCallback(() => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Confirmation-box-info\",\n        children: [renderMain(), renderFeeWarning(), renderSpreadWarning(), orderOption === LIMIT && renderAvailableLiquidity(), /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Min. Receive\",\n          children: [formatAmount(minOut, toTokenInfo.decimals, 4, true), \" \", toTokenInfo.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Price\",\n          children: getExchangeRateDisplay(getExchangeRate(fromTokenInfo, toTokenInfo), fromTokenInfo, toTokenInfo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), !isMarketOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-info-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-info-label\",\n            children: \"Limit Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-right\",\n            children: getExchangeRateDisplay(triggerRatio, fromTokenInfo, toTokenInfo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this), showSpread && /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n          label: \"Spread\",\n          isWarning: spread.isHigh,\n          children: [formatAmount(spread.value.mul(100), USD_DECIMALS, 2, true), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-info-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-info-label\",\n            children: \"Fees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-right\",\n            children: [formatAmount(feeBps, 2, 2, true), \"% (\", formatAmount(fees, fromTokenInfo.decimals, 4, true), \" \", fromTokenInfo.symbol, \": $\", formatAmount(feesUsd, USD_DECIMALS, 2, true), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), renderExecutionFee(), fromTokenUsd && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-info-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-info-label\",\n            children: [fromTokenInfo.symbol, \" Price\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-right\",\n            children: [fromTokenUsd, \" USD\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this), toTokenUsd && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-info-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-info-label\",\n            children: [toTokenInfo.symbol, \" Price\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-right\",\n            children: [toTokenUsd, \" USD\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }, [renderMain, renderSpreadWarning, fromTokenInfo, toTokenInfo, orderOption, showSpread, spread, feesUsd, feeBps, renderExecutionFee, fromTokenUsd, toTokenUsd, triggerRatio, fees, isMarketOrder, minOut, renderFeeWarning, renderAvailableLiquidity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Confirmation-box\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: true,\n      setIsVisible: () => setIsConfirming(false),\n      label: title,\n      children: [isSwap && renderSwapSection(), !isSwap && renderMarginSection(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Confirmation-box-row\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            onConfirmationClick();\n            trackAction && trackAction(\"Button clicked\", {\n              buttonName: `Confirmation modal - ${getPrimaryText()} Trade`\n            });\n            trackTrade(2, getPrimaryText());\n          },\n          className: \"App-cta Confirmation-box-button\",\n          disabled: !isPrimaryEnabled(),\n          children: getPrimaryText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 630,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfirmationBox, \"W6a51dZR9eAdPChpXcTpW/mjDvs=\", false, function () {\n  return [useLocalStorageSerializeKey];\n});\n\n_c = ConfirmationBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmationBox\");","map":{"version":3,"names":["React","useCallback","useState","useMemo","USD_DECIMALS","PRECISION","BASIS_POINTS_DIVISOR","LIMIT","MIN_PROFIT_TIME","INCREASE","expandDecimals","getExchangeRate","getProfitPrice","getTimeRemaining","formatAmount","useLocalStorageSerializeKey","getExchangeRateDisplay","DEFAULT_SLIPPAGE_AMOUNT","DEFAULT_HIGHER_SLIPPAGE_AMOUNT","formatDateTime","calculatePositionDelta","getSpread","SLIPPAGE_BPS_KEY","getConstant","getContract","BsArrowRight","Modal","Tooltip","Checkbox","ExchangeInfoRow","getNativeToken","getToken","getWrappedToken","ConfirmationBox","props","fromToken","fromTokenInfo","toToken","toTokenInfo","isSwap","isLong","isMarketOrder","orderOption","isShort","toAmount","fromAmount","isHigherSlippageAllowed","setIsHigherSlippageAllowed","onConfirmationClick","setIsConfirming","shortCollateralAddress","hasExistingPosition","leverage","existingPosition","existingLiquidationPrice","displayLiquidationPrice","shortCollateralToken","isPendingConfirmation","triggerPriceUsd","triggerRatio","fees","feesUsd","isSubmitting","fromUsdMin","toUsdMax","nextAveragePrice","collateralTokenAddress","feeBps","chainId","orders","trackAction","trackTrade","savedSlippageAmount","isProfitWarningAccepted","setIsProfitWarningAccepted","minOut","fromTokenUsd","toTokenUsd","collateralAfterFees","sub","mul","div","minPrice","maxPrice","getTitle","title","existingOrder","wrappedToken","order","type","sameToken","indexToken","address","isNative","getError","delta","hasProfit","eq","hasPendingProfit","getPrimaryText","error","action","pendingDelta","gt","isPrimaryEnabled","nativeTokenAddress","spread","showSpread","allowedSlippage","renderSpreadWarning","isHigh","renderFeeWarning","symbol","collateralToken","renderMinProfitWarning","minProfitExpiration","lastIncreasedTime","profitPrice","markPrice","deltaStr","renderExistingOrderWarning","sizeInToken","sizeDelta","triggerPrice","renderMain","decimals","SWAP_ORDER_EXECUTION_GAS_FEE","INCREASE_ORDER_EXECUTION_GAS_FEE","executionFee","renderExecutionFee","renderAvailableLiquidity","availableLiquidity","riskThresholdBps","isLiquidityRisk","token","poolAmount","availableAmount","poolWithoutBuffer","bufferAmount","lt","adjustedMaxGlobalShortSize","maxAvailableShort","sizeTokens","isStable","renderMarginSection","value","averagePrice","fundingRate","renderSwapSection","buttonName"],"sources":["C:/Users/rober/Documents/swaps-client/src/components/Exchange/ConfirmationBox.js"],"sourcesContent":["import React, { useCallback, useState, useMemo } from \"react\";\nimport {\n  USD_DECIMALS,\n  PRECISION,\n  BASIS_POINTS_DIVISOR,\n  LIMIT,\n  MIN_PROFIT_TIME,\n  INCREASE,\n  expandDecimals,\n  getExchangeRate,\n  getProfitPrice,\n  getTimeRemaining,\n  formatAmount,\n  useLocalStorageSerializeKey,\n  getExchangeRateDisplay,\n  DEFAULT_SLIPPAGE_AMOUNT,\n  DEFAULT_HIGHER_SLIPPAGE_AMOUNT,\n  formatDateTime,\n  calculatePositionDelta,\n  getSpread,\n} from \"../../Helpers\";\n\nimport {\n  SLIPPAGE_BPS_KEY\n} from '../../config/localstorage';\n\nimport { getConstant } from \"../../Constants\";\nimport { getContract } from \"../../Addresses\";\n\nimport { BsArrowRight } from \"react-icons/bs\";\nimport Modal from \"../Modal/Modal\";\nimport Tooltip from \"../Tooltip/Tooltip\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport ExchangeInfoRow from \"./ExchangeInfoRow\";\n\nimport { getNativeToken, getToken, getWrappedToken } from \"../../data/Tokens\";\n\nexport default function ConfirmationBox(props) {\n  const {\n    fromToken,\n    fromTokenInfo,\n    toToken,\n    toTokenInfo,\n    isSwap,\n    isLong,\n    isMarketOrder,\n    orderOption,\n    isShort,\n    toAmount,\n    fromAmount,\n    isHigherSlippageAllowed,\n    setIsHigherSlippageAllowed,\n    onConfirmationClick,\n    setIsConfirming,\n    shortCollateralAddress,\n    hasExistingPosition,\n    leverage,\n    existingPosition,\n    existingLiquidationPrice,\n    displayLiquidationPrice,\n    shortCollateralToken,\n    isPendingConfirmation,\n    triggerPriceUsd,\n    triggerRatio,\n    fees,\n    feesUsd,\n    isSubmitting,\n    fromUsdMin,\n    toUsdMax,\n    nextAveragePrice,\n    collateralTokenAddress,\n    feeBps,\n    chainId,\n    orders,\n    trackAction,\n    trackTrade,\n  } = props;\n\n  const [savedSlippageAmount] = useLocalStorageSerializeKey([chainId, SLIPPAGE_BPS_KEY], DEFAULT_SLIPPAGE_AMOUNT);\n  const [isProfitWarningAccepted, setIsProfitWarningAccepted] = useState(false);\n\n  let minOut;\n  let fromTokenUsd;\n  let toTokenUsd;\n\n  let collateralAfterFees = fromUsdMin;\n  if (feesUsd) {\n    collateralAfterFees = fromUsdMin.sub(feesUsd);\n  }\n\n  if (isSwap) {\n    minOut = toAmount.mul(BASIS_POINTS_DIVISOR - savedSlippageAmount).div(BASIS_POINTS_DIVISOR);\n\n    fromTokenUsd = fromTokenInfo ? formatAmount(fromTokenInfo.minPrice, USD_DECIMALS, 2, true) : 0;\n    toTokenUsd = toTokenInfo ? formatAmount(toTokenInfo.maxPrice, USD_DECIMALS, 2, true) : 0;\n  }\n\n  const getTitle = () => {\n    if (!isMarketOrder) {\n      return \"Confirm Limit Order\";\n    }\n    if (isSwap) {\n      return \"Confirm Swap\";\n    }\n    return isLong ? \"Confirm Long\" : \"Confirm Short\";\n  };\n  const title = getTitle();\n\n  const existingOrder = useMemo(() => {\n    const wrappedToken = getWrappedToken(chainId);\n    for (const order of orders) {\n      if (order.type !== INCREASE) continue;\n      const sameToken =\n        order.indexToken === wrappedToken.address ? toToken.isNative : order.indexToken === toToken.address;\n      if (order.isLong === isLong && sameToken) {\n        return order;\n      }\n    }\n  }, [orders, chainId, isLong, toToken.address, toToken.isNative]);\n\n  const getError = () => {\n    if (!isSwap && hasExistingPosition && !isMarketOrder) {\n      const { delta, hasProfit } = calculatePositionDelta(triggerPriceUsd, existingPosition);\n      if (hasProfit && delta.eq(0)) {\n        return \"Invalid price, see warning\";\n      }\n    }\n    if (isMarketOrder && hasPendingProfit && !isProfitWarningAccepted) {\n      return \"Forfeit profit not checked\";\n    }\n    return false;\n  };\n\n  const getPrimaryText = () => {\n    if (!isPendingConfirmation) {\n      const error = getError();\n      if (error) {\n        return error;\n      }\n\n      if (isSwap) {\n        return title;\n      }\n      const action = isMarketOrder ? (isLong ? \"Long\" : \"Short\") : \"Create Order\";\n\n      if (\n        isMarketOrder &&\n        MIN_PROFIT_TIME > 0 &&\n        hasExistingPosition &&\n        existingPosition.delta.eq(0) &&\n        existingPosition.pendingDelta.gt(0)\n      ) {\n        return isLong ? `Forfeit profit and ${action}` : `Forfeit profit and Short`;\n      }\n\n      return isMarketOrder && MIN_PROFIT_TIME > 0 ? `Accept minimum and ${action}` : action;\n    }\n\n    if (!isMarketOrder) {\n      return \"Creating Order...\";\n    }\n    if (isSwap) {\n      return \"Swapping...\";\n    }\n    if (isLong) {\n      return \"Longing...\";\n    }\n    return \"Shorting...\";\n  };\n\n  const isPrimaryEnabled = () => {\n    if (getError()) {\n      return false;\n    }\n    return !isPendingConfirmation && !isSubmitting;\n  };\n\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n  const spread = getSpread(fromTokenInfo, toTokenInfo, isLong, nativeTokenAddress);\n  // it's meaningless for limit/stop orders to show spread based on current prices\n  const showSpread = isMarketOrder && !!spread;\n\n  let allowedSlippage = savedSlippageAmount;\n  if (isHigherSlippageAllowed) {\n    allowedSlippage = DEFAULT_HIGHER_SLIPPAGE_AMOUNT;\n  }\n\n  const renderSpreadWarning = useCallback(() => {\n    if (!isMarketOrder) {\n      return null;\n    }\n\n    if (spread && spread.isHigh) {\n      return (\n        <div className=\"Confirmation-box-warning\">\n          The spread is > 1%, please ensure the trade details are acceptable before comfirming\n        </div>\n      );\n    }\n  }, [isMarketOrder, spread]);\n\n  const renderFeeWarning = useCallback(() => {\n    if (orderOption === LIMIT || !feeBps || feeBps <= 50) {\n      return null;\n    }\n\n    if (isSwap) {\n      return (\n        <div className=\"Confirmation-box-warning\">\n          Fees are high to swap from {fromToken.symbol} to {toToken.symbol}.\n        </div>\n      );\n    }\n\n    if (!collateralTokenAddress) {\n      return null;\n    }\n\n    const collateralToken = getToken(chainId, collateralTokenAddress);\n    return (\n      <div className=\"Confirmation-box-warning\">\n        Fees are high to swap from {fromToken.symbol} to {collateralToken.symbol}. <br />\n        {collateralToken.symbol} is needed for collateral.\n      </div>\n    );\n  }, [feeBps, isSwap, collateralTokenAddress, chainId, fromToken.symbol, toToken.symbol, orderOption]);\n\n  const hasPendingProfit =\n    MIN_PROFIT_TIME > 0 && existingPosition && existingPosition.delta.eq(0) && existingPosition.pendingDelta.gt(0);\n\n  const renderMinProfitWarning = useCallback(() => {\n    if (MIN_PROFIT_TIME === 0) {\n      return null;\n    }\n    if (!isSwap) {\n      if (hasExistingPosition) {\n        const minProfitExpiration = existingPosition.lastIncreasedTime + MIN_PROFIT_TIME;\n        if (isMarketOrder && existingPosition.delta.eq(0) && existingPosition.pendingDelta.gt(0)) {\n          const profitPrice = getProfitPrice(existingPosition.markPrice, existingPosition);\n          return (\n            <div className=\"Confirmation-box-warning\">\n              Increasing this position at the current price will forfeit a pending profit of {existingPosition.deltaStr}\n              .<br />\n              <br />\n              Profit price: {existingPosition.isLong ? \">\" : \"<\"} ${formatAmount(profitPrice, USD_DECIMALS, 2, true)}.\n              This rule only applies for the next {getTimeRemaining(minProfitExpiration)}, until{\" \"}\n              {formatDateTime(minProfitExpiration)}.\n            </div>\n          );\n        }\n        if (!isMarketOrder) {\n          const { delta, hasProfit } = calculatePositionDelta(triggerPriceUsd, existingPosition);\n          if (hasProfit && delta.eq(0)) {\n            const profitPrice = getProfitPrice(existingPosition.markPrice, existingPosition);\n            return (\n              <div className=\"Confirmation-box-warning\">\n                This order will forfeit a profit of {existingPosition.deltaStr}.<br />\n                Profit price: {existingPosition.isLong ? \">\" : \"<\"} ${formatAmount(profitPrice, USD_DECIMALS, 2, true)}.\n                This rule only applies for the next {getTimeRemaining(minProfitExpiration)}, until{\" \"}\n                {formatDateTime(minProfitExpiration)}.\n              </div>\n            );\n          }\n        }\n      }\n\n      return (\n        <div className=\"Confirmation-box-warning\">\n          A minimum price change of 1.5% is required for a position to be in profit. This only applies for the first{\" \"}\n          {MIN_PROFIT_TIME / 60 / 60} hours after increasing a position.\n        </div>\n      );\n    }\n  }, [isSwap, hasExistingPosition, existingPosition, isMarketOrder, triggerPriceUsd]);\n\n  const renderExistingOrderWarning = useCallback(() => {\n    if (isSwap || !existingOrder) {\n      return;\n    }\n    const indexToken = getToken(chainId, existingOrder.indexToken);\n    const sizeInToken = formatAmount(\n      existingOrder.sizeDelta.mul(PRECISION).div(existingOrder.triggerPrice),\n      USD_DECIMALS,\n      4,\n      true\n    );\n    return (\n      <div className=\"Confirmation-box-warning\">\n        You have an active Limit Order to Increase {existingOrder.isLong ? \"Long\" : \"Short\"} {sizeInToken}{\" \"}\n        {indexToken.symbol} (${formatAmount(existingOrder.sizeDelta, USD_DECIMALS, 2, true)}) at price $\n        {formatAmount(existingOrder.triggerPrice, USD_DECIMALS, 2, true)}\n      </div>\n    );\n  }, [existingOrder, isSwap, chainId]);\n\n  // TODO handle unaprproved order plugin (very unlikely case)\n  const renderMain = useCallback(() => {\n    if (isSwap) {\n      return (\n        <div className=\"Confirmation-box-main\">\n          <div>\n            Pay&nbsp;{formatAmount(fromAmount, fromToken.decimals, 4, true)} {fromToken.symbol} ($\n            {formatAmount(fromUsdMin, USD_DECIMALS, 2, true)})\n          </div>\n          <div className=\"Confirmation-box-main-icon\"></div>\n          <div>\n            Receive&nbsp;{formatAmount(toAmount, toToken.decimals, 4, true)} {toToken.symbol} ($\n            {formatAmount(toUsdMax, USD_DECIMALS, 2, true)})\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Confirmation-box-main\">\n        <span>\n          Pay&nbsp;{formatAmount(fromAmount, fromToken.decimals, 4, true)} {fromToken.symbol} ($\n          {formatAmount(fromUsdMin, USD_DECIMALS, 2, true)})\n        </span>\n        <div className=\"Confirmation-box-main-icon\"></div>\n        <div>\n          {isLong ? \"Long\" : \"Short\"}&nbsp;\n          {formatAmount(toAmount, toToken.decimals, 4, true)} {toToken.symbol} ($\n          {formatAmount(toUsdMax, USD_DECIMALS, 2, true)})\n        </div>\n      </div>\n    );\n  }, [isSwap, fromAmount, fromToken, toToken, fromUsdMin, toUsdMax, isLong, toAmount]);\n\n  const SWAP_ORDER_EXECUTION_GAS_FEE = getConstant(chainId, \"SWAP_ORDER_EXECUTION_GAS_FEE\");\n  const INCREASE_ORDER_EXECUTION_GAS_FEE = getConstant(chainId, \"INCREASE_ORDER_EXECUTION_GAS_FEE\");\n  const executionFee = isSwap ? SWAP_ORDER_EXECUTION_GAS_FEE : INCREASE_ORDER_EXECUTION_GAS_FEE;\n  const renderExecutionFee = useCallback(() => {\n    if (isMarketOrder) {\n      return null;\n    }\n    return (\n      <ExchangeInfoRow label=\"Execution Fee\">\n        {formatAmount(executionFee, 18, 4)} {getNativeToken(chainId).symbol}\n      </ExchangeInfoRow>\n    );\n  }, [isMarketOrder, executionFee, chainId]);\n\n  const renderAvailableLiquidity = useCallback(() => {\n    let availableLiquidity;\n    const riskThresholdBps = 5000;\n    let isLiquidityRisk;\n    const token = isSwap || isLong ? toTokenInfo : shortCollateralToken;\n\n    if (!token || !token.poolAmount || !token.availableAmount) {\n      return null;\n    }\n\n    if (isSwap) {\n      const poolWithoutBuffer = token.poolAmount.sub(token.bufferAmount);\n      availableLiquidity = token.availableAmount.gt(poolWithoutBuffer) ? poolWithoutBuffer : token.availableAmount;\n      isLiquidityRisk = availableLiquidity.mul(riskThresholdBps).div(BASIS_POINTS_DIVISOR).lt(toAmount);\n    } else {\n      if (isShort) {\n        availableLiquidity = token.availableAmount;\n\n        let adjustedMaxGlobalShortSize;\n\n        if (toTokenInfo.maxAvailableShort && toTokenInfo.maxAvailableShort.gt(0)) {\n          adjustedMaxGlobalShortSize = toTokenInfo.maxAvailableShort\n            .mul(expandDecimals(1, token.decimals))\n            .div(expandDecimals(1, USD_DECIMALS));\n        }\n\n        if (adjustedMaxGlobalShortSize && adjustedMaxGlobalShortSize.lt(token.availableAmount)) {\n          availableLiquidity = adjustedMaxGlobalShortSize;\n        }\n\n        const sizeTokens = toUsdMax.mul(expandDecimals(1, token.decimals)).div(token.minPrice);\n        isLiquidityRisk = availableLiquidity.mul(riskThresholdBps).div(BASIS_POINTS_DIVISOR).lt(sizeTokens);\n      } else {\n        availableLiquidity = token.availableAmount;\n        isLiquidityRisk = availableLiquidity.mul(riskThresholdBps).div(BASIS_POINTS_DIVISOR).lt(toAmount);\n      }\n    }\n\n    if (!availableLiquidity) {\n      return null;\n    }\n\n    return (\n      <ExchangeInfoRow label=\"Available Liquidity\">\n        <Tooltip\n          position=\"right-bottom\"\n          handleClassName={isLiquidityRisk ? \"negative\" : null}\n          handle={\n            <>\n              {formatAmount(availableLiquidity, token.decimals, token.isStable ? 0 : 2, true)} {token.symbol}\n            </>\n          }\n          renderContent={() =>\n            isLiquidityRisk\n              ? \"There may not be sufficient liquidity to execute your order when the price conditions are met\"\n              : \"The order will only execute if the price conditions are met and there is sufficient liquidity\"\n          }\n        />\n      </ExchangeInfoRow>\n    );\n  }, [toTokenInfo, shortCollateralToken, isShort, isLong, isSwap, toAmount, toUsdMax]);\n\n  const renderMarginSection = useCallback(() => {\n    return (\n      <>\n        <div className=\"Confirmation-box-info\">\n          {renderMain()}\n          {renderFeeWarning()}\n          {renderMinProfitWarning()}\n          {renderExistingOrderWarning()}\n          {hasPendingProfit && isMarketOrder && (\n            <div className=\"PositionEditor-accept-profit-warning\">\n              <Checkbox isChecked={isProfitWarningAccepted} setIsChecked={setIsProfitWarningAccepted}>\n                <span className=\"muted\">Forfeit profit</span>\n              </Checkbox>\n            </div>\n          )}\n          {orderOption === LIMIT && renderAvailableLiquidity()}\n          {isShort && (\n            <ExchangeInfoRow label=\"Profits In\">{getToken(chainId, shortCollateralAddress).symbol}</ExchangeInfoRow>\n          )}\n          {isLong && <ExchangeInfoRow label=\"Profits In\" value={toTokenInfo.symbol} />}\n          <ExchangeInfoRow label=\"Leverage\">\n            {hasExistingPosition && toAmount && toAmount.gt(0) && (\n              <div className=\"inline-block muted\">\n                {formatAmount(existingPosition.leverage, 4, 2)}x\n                <BsArrowRight className=\"transition-arrow\" />\n              </div>\n            )}\n            {toAmount && leverage && leverage.gt(0) && `${formatAmount(leverage, 4, 2)}x`}\n            {!toAmount && leverage && leverage.gt(0) && `-`}\n            {leverage && leverage.eq(0) && `-`}\n          </ExchangeInfoRow>\n          <ExchangeInfoRow label=\"Liq. Price\">\n            {hasExistingPosition && toAmount && toAmount.gt(0) && (\n              <div className=\"inline-block muted\">\n                ${formatAmount(existingLiquidationPrice, USD_DECIMALS, 2, true)}\n                <BsArrowRight className=\"transition-arrow\" />\n              </div>\n            )}\n            {toAmount && displayLiquidationPrice && `$${formatAmount(displayLiquidationPrice, USD_DECIMALS, 2, true)}`}\n            {!toAmount && displayLiquidationPrice && `-`}\n            {!displayLiquidationPrice && `-`}\n          </ExchangeInfoRow>\n          <ExchangeInfoRow label=\"Fees\">${formatAmount(feesUsd, USD_DECIMALS, 2, true)}</ExchangeInfoRow>\n          <ExchangeInfoRow label=\"Collateral\">\n            <Tooltip\n              handle={`$${formatAmount(collateralAfterFees, USD_DECIMALS, 2, true)}`}\n              position=\"right-bottom\"\n              renderContent={() => {\n                return (\n                  <>\n                    Your position's collateral after deducting fees.\n                    <br />\n                    <br />\n                    Pay amount: ${formatAmount(fromUsdMin, USD_DECIMALS, 2, true)}\n                    <br />\n                    Fees: ${formatAmount(feesUsd, USD_DECIMALS, 2, true)}\n                    <br />\n                  </>\n                );\n              }}\n            />\n          </ExchangeInfoRow>\n          {showSpread && (\n            <ExchangeInfoRow label=\"Spread\" isWarning={spread.isHigh} isTop={true}>\n              {formatAmount(spread.value.mul(100), USD_DECIMALS, 2, true)}%\n            </ExchangeInfoRow>\n          )}\n          {isMarketOrder && (\n            <ExchangeInfoRow label=\"Entry Price\">\n              {hasExistingPosition && toAmount && toAmount.gt(0) && (\n                <div className=\"inline-block muted\">\n                  ${formatAmount(existingPosition.averagePrice, USD_DECIMALS, 2, true)}\n                  <BsArrowRight className=\"transition-arrow\" />\n                </div>\n              )}\n              {nextAveragePrice && `$${formatAmount(nextAveragePrice, USD_DECIMALS, 2, true)}`}\n              {!nextAveragePrice && `-`}\n            </ExchangeInfoRow>\n          )}\n          {!isMarketOrder && (\n            <ExchangeInfoRow label=\"Limit Price\" isTop={true}>\n              ${formatAmount(triggerPriceUsd, USD_DECIMALS, 2, true)}\n            </ExchangeInfoRow>\n          )}\n          <ExchangeInfoRow label=\"Borrow Fee\">\n            {isLong && toTokenInfo && formatAmount(toTokenInfo.fundingRate, 4, 4)}\n            {isShort && shortCollateralToken && formatAmount(shortCollateralToken.fundingRate, 4, 4)}\n            {((isLong && toTokenInfo && toTokenInfo.fundingRate) ||\n              (isShort && shortCollateralToken && shortCollateralToken.fundingRate)) &&\n              \"% / 1h\"}\n          </ExchangeInfoRow>\n          <ExchangeInfoRow label=\"Allowed Slippage\">\n            <Tooltip\n              handle={`${formatAmount(allowedSlippage, 2, 2)}%`}\n              position=\"right-top\"\n              renderContent={() => {\n                return (\n                  <>\n                    You can change this in the settings menu on the top right of the page.\n                    <br />\n                    <br />\n                    Note that a low allowed slippage, e.g. less than 0.5%, may result in failed orders if prices are\n                    volatile.\n                  </>\n                );\n              }}\n            />\n          </ExchangeInfoRow>\n          {isMarketOrder && (\n            <div className=\"PositionEditor-allow-higher-slippage\">\n              <Checkbox isChecked={isHigherSlippageAllowed} setIsChecked={setIsHigherSlippageAllowed}>\n                <span className=\"muted\">Allow up to 1% slippage</span>\n              </Checkbox>\n            </div>\n          )}\n          {renderExecutionFee()}\n        </div>\n      </>\n    );\n  }, [\n    renderMain,\n    renderMinProfitWarning,\n    shortCollateralAddress,\n    isShort,\n    isLong,\n    toTokenInfo,\n    nextAveragePrice,\n    toAmount,\n    hasExistingPosition,\n    existingPosition,\n    isMarketOrder,\n    triggerPriceUsd,\n    showSpread,\n    spread,\n    displayLiquidationPrice,\n    existingLiquidationPrice,\n    feesUsd,\n    leverage,\n    renderExecutionFee,\n    shortCollateralToken,\n    renderExistingOrderWarning,\n    chainId,\n    renderFeeWarning,\n    hasPendingProfit,\n    isProfitWarningAccepted,\n    renderAvailableLiquidity,\n    orderOption,\n    fromUsdMin,\n    collateralAfterFees,\n    isHigherSlippageAllowed,\n    setIsHigherSlippageAllowed,\n    allowedSlippage,\n  ]);\n\n  const renderSwapSection = useCallback(() => {\n    return (\n      <>\n        <div className=\"Confirmation-box-info\">\n          {renderMain()}\n          {renderFeeWarning()}\n          {renderSpreadWarning()}\n          {orderOption === LIMIT && renderAvailableLiquidity()}\n          <ExchangeInfoRow label=\"Min. Receive\">\n            {formatAmount(minOut, toTokenInfo.decimals, 4, true)} {toTokenInfo.symbol}\n          </ExchangeInfoRow>\n          <ExchangeInfoRow label=\"Price\">\n            {getExchangeRateDisplay(getExchangeRate(fromTokenInfo, toTokenInfo), fromTokenInfo, toTokenInfo)}\n          </ExchangeInfoRow>\n          {!isMarketOrder && (\n            <div className=\"Exchange-info-row\">\n              <div className=\"Exchange-info-label\">Limit Price</div>\n              <div className=\"align-right\">{getExchangeRateDisplay(triggerRatio, fromTokenInfo, toTokenInfo)}</div>\n            </div>\n          )}\n          {showSpread && (\n            <ExchangeInfoRow label=\"Spread\" isWarning={spread.isHigh}>\n              {formatAmount(spread.value.mul(100), USD_DECIMALS, 2, true)}%\n            </ExchangeInfoRow>\n          )}\n          <div className=\"Exchange-info-row\">\n            <div className=\"Exchange-info-label\">Fees</div>\n            <div className=\"align-right\">\n              {formatAmount(feeBps, 2, 2, true)}% ({formatAmount(fees, fromTokenInfo.decimals, 4, true)}{\" \"}\n              {fromTokenInfo.symbol}: ${formatAmount(feesUsd, USD_DECIMALS, 2, true)})\n            </div>\n          </div>\n          {renderExecutionFee()}\n          {fromTokenUsd && (\n            <div className=\"Exchange-info-row\">\n              <div className=\"Exchange-info-label\">{fromTokenInfo.symbol} Price</div>\n              <div className=\"align-right\">{fromTokenUsd} USD</div>\n            </div>\n          )}\n          {toTokenUsd && (\n            <div className=\"Exchange-info-row\">\n              <div className=\"Exchange-info-label\">{toTokenInfo.symbol} Price</div>\n              <div className=\"align-right\">{toTokenUsd} USD</div>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }, [\n    renderMain,\n    renderSpreadWarning,\n    fromTokenInfo,\n    toTokenInfo,\n    orderOption,\n    showSpread,\n    spread,\n    feesUsd,\n    feeBps,\n    renderExecutionFee,\n    fromTokenUsd,\n    toTokenUsd,\n    triggerRatio,\n    fees,\n    isMarketOrder,\n    minOut,\n    renderFeeWarning,\n    renderAvailableLiquidity,\n  ]);\n\n  return (\n    <div className=\"Confirmation-box\">\n      <Modal isVisible={true} setIsVisible={() => setIsConfirming(false)} label={title}>\n        {isSwap && renderSwapSection()}\n        {!isSwap && renderMarginSection()}\n        <div className=\"Confirmation-box-row\">\n          <button\n            onClick={() => {\n              onConfirmationClick();\n              trackAction &&\n                trackAction(\"Button clicked\", {\n                  buttonName: `Confirmation modal - ${getPrimaryText()} Trade`,\n                });\n              trackTrade(2, getPrimaryText());\n            }}\n            className=\"App-cta Confirmation-box-button\"\n            disabled={!isPrimaryEnabled()}\n          >\n            {getPrimaryText()}\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}