{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { v4 as uuid } from '@lukeed/uuid';\nimport { dset } from 'dset';\nimport md5 from 'spark-md5';\nexport * from './interfaces';\n\nvar EventFactory =\n/** @class */\nfunction () {\n  function EventFactory(user) {\n    this.user = user;\n  }\n\n  EventFactory.prototype.track = function (event, properties, options, globalIntegrations) {\n    return this.normalize(__assign(__assign({}, this.baseEvent()), {\n      event: event,\n      type: 'track',\n      properties: properties,\n      options: __assign({}, options),\n      integrations: __assign({}, globalIntegrations)\n    }));\n  };\n\n  EventFactory.prototype.page = function (category, page, properties, options, globalIntegrations) {\n    var _a;\n\n    var event = {\n      type: 'page',\n      properties: __assign({}, properties),\n      options: __assign({}, options),\n      integrations: __assign({}, globalIntegrations)\n    };\n\n    if (category !== null) {\n      event.category = category;\n      event.properties = (_a = event.properties) !== null && _a !== void 0 ? _a : {};\n      event.properties.category = category;\n    }\n\n    if (page !== null) {\n      event.name = page;\n    }\n\n    return this.normalize(__assign(__assign({}, this.baseEvent()), event));\n  };\n\n  EventFactory.prototype.screen = function (category, screen, properties, options, globalIntegrations) {\n    var event = {\n      type: 'screen',\n      properties: __assign({}, properties),\n      options: __assign({}, options),\n      integrations: __assign({}, globalIntegrations)\n    };\n\n    if (category !== null) {\n      event.category = category;\n    }\n\n    if (screen !== null) {\n      event.name = screen;\n    }\n\n    return this.normalize(__assign(__assign({}, this.baseEvent()), event));\n  };\n\n  EventFactory.prototype.identify = function (userId, traits, options, globalIntegrations) {\n    return this.normalize(__assign(__assign({}, this.baseEvent()), {\n      type: 'identify',\n      userId: userId,\n      traits: traits,\n      options: __assign({}, options),\n      integrations: __assign({}, globalIntegrations)\n    }));\n  };\n\n  EventFactory.prototype.group = function (groupId, traits, options, globalIntegrations) {\n    return this.normalize(__assign(__assign({}, this.baseEvent()), {\n      type: 'group',\n      traits: traits,\n      options: __assign({}, options),\n      integrations: __assign({}, globalIntegrations),\n      groupId: groupId\n    }));\n  };\n\n  EventFactory.prototype.alias = function (to, from, options, globalIntegrations) {\n    var base = {\n      userId: to,\n      type: 'alias',\n      options: __assign({}, options),\n      integrations: __assign({}, globalIntegrations)\n    };\n\n    if (from !== null) {\n      base.previousId = from;\n    }\n\n    if (to === undefined) {\n      return this.normalize(__assign(__assign({}, base), this.baseEvent()));\n    }\n\n    return this.normalize(__assign(__assign({}, this.baseEvent()), base));\n  };\n\n  EventFactory.prototype.baseEvent = function () {\n    var base = {\n      integrations: {},\n      options: {}\n    };\n    var user = this.user;\n\n    if (user.id()) {\n      base.userId = user.id();\n    }\n\n    if (user.anonymousId()) {\n      base.anonymousId = user.anonymousId();\n    }\n\n    return base;\n  };\n  /**\n   * Builds the context part of an event based on \"foreign\" keys that\n   * are provided in the `Options` parameter for an Event\n   */\n\n\n  EventFactory.prototype.context = function (event) {\n    var _a, _b, _c;\n\n    var optionsKeys = ['integrations', 'anonymousId', 'timestamp', 'userId'];\n    var options = (_a = event.options) !== null && _a !== void 0 ? _a : {};\n    delete options['integrations'];\n    var providedOptionsKeys = Object.keys(options);\n    var context = (_c = (_b = event.options) === null || _b === void 0 ? void 0 : _b.context) !== null && _c !== void 0 ? _c : {};\n    var overrides = {};\n    providedOptionsKeys.forEach(function (key) {\n      if (key === 'context') {\n        return;\n      }\n\n      if (optionsKeys.includes(key)) {\n        dset(overrides, key, options[key]);\n      } else {\n        dset(context, key, options[key]);\n      }\n    });\n    return [context, overrides];\n  };\n\n  EventFactory.prototype.normalize = function (event) {\n    var _a, _b;\n\n    var integrationBooleans = Object.keys((_a = event.integrations) !== null && _a !== void 0 ? _a : {}).reduce(function (integrationNames, name) {\n      var _a;\n\n      var _b;\n\n      return __assign(__assign({}, integrationNames), (_a = {}, _a[name] = Boolean((_b = event.integrations) === null || _b === void 0 ? void 0 : _b[name]), _a));\n    }, {}); // This is pretty trippy, but here's what's going on:\n    // - a) We don't pass initial integration options as part of the event, only if they're true or false\n    // - b) We do accept per integration overrides (like integrations.Amplitude.sessionId) at the event level\n    // Hence the need to convert base integration options to booleans, but maintain per event integration overrides\n\n    var allIntegrations = __assign(__assign({}, integrationBooleans), (_b = event.options) === null || _b === void 0 ? void 0 : _b.integrations);\n\n    var _c = this.context(event),\n        context = _c[0],\n        overrides = _c[1];\n\n    var options = event.options,\n        rest = __rest(event, [\"options\"]);\n\n    var body = __assign(__assign(__assign({\n      timestamp: new Date()\n    }, rest), {\n      context: context,\n      integrations: allIntegrations\n    }), overrides);\n\n    var messageId = 'ajs-next-' + md5.hash(JSON.stringify(body) + uuid());\n\n    var evt = __assign(__assign({}, body), {\n      messageId: messageId\n    });\n\n    return evt;\n  };\n\n  return EventFactory;\n}();\n\nexport { EventFactory };","map":{"version":3,"sources":["../../../../src/core/events/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { v4 as uuid } from '@lukeed/uuid';\nimport { dset } from 'dset';\nimport md5 from 'spark-md5';\nexport * from './interfaces';\nvar EventFactory = /** @class */ (function () {\n    function EventFactory(user) {\n        this.user = user;\n    }\n    EventFactory.prototype.track = function (event, properties, options, globalIntegrations) {\n        return this.normalize(__assign(__assign({}, this.baseEvent()), { event: event, type: 'track', properties: properties, options: __assign({}, options), integrations: __assign({}, globalIntegrations) }));\n    };\n    EventFactory.prototype.page = function (category, page, properties, options, globalIntegrations) {\n        var _a;\n        var event = {\n            type: 'page',\n            properties: __assign({}, properties),\n            options: __assign({}, options),\n            integrations: __assign({}, globalIntegrations),\n        };\n        if (category !== null) {\n            event.category = category;\n            event.properties = (_a = event.properties) !== null && _a !== void 0 ? _a : {};\n            event.properties.category = category;\n        }\n        if (page !== null) {\n            event.name = page;\n        }\n        return this.normalize(__assign(__assign({}, this.baseEvent()), event));\n    };\n    EventFactory.prototype.screen = function (category, screen, properties, options, globalIntegrations) {\n        var event = {\n            type: 'screen',\n            properties: __assign({}, properties),\n            options: __assign({}, options),\n            integrations: __assign({}, globalIntegrations),\n        };\n        if (category !== null) {\n            event.category = category;\n        }\n        if (screen !== null) {\n            event.name = screen;\n        }\n        return this.normalize(__assign(__assign({}, this.baseEvent()), event));\n    };\n    EventFactory.prototype.identify = function (userId, traits, options, globalIntegrations) {\n        return this.normalize(__assign(__assign({}, this.baseEvent()), { type: 'identify', userId: userId, traits: traits, options: __assign({}, options), integrations: __assign({}, globalIntegrations) }));\n    };\n    EventFactory.prototype.group = function (groupId, traits, options, globalIntegrations) {\n        return this.normalize(__assign(__assign({}, this.baseEvent()), { type: 'group', traits: traits, options: __assign({}, options), integrations: __assign({}, globalIntegrations), groupId: groupId }));\n    };\n    EventFactory.prototype.alias = function (to, from, options, globalIntegrations) {\n        var base = {\n            userId: to,\n            type: 'alias',\n            options: __assign({}, options),\n            integrations: __assign({}, globalIntegrations),\n        };\n        if (from !== null) {\n            base.previousId = from;\n        }\n        if (to === undefined) {\n            return this.normalize(__assign(__assign({}, base), this.baseEvent()));\n        }\n        return this.normalize(__assign(__assign({}, this.baseEvent()), base));\n    };\n    EventFactory.prototype.baseEvent = function () {\n        var base = {\n            integrations: {},\n            options: {},\n        };\n        var user = this.user;\n        if (user.id()) {\n            base.userId = user.id();\n        }\n        if (user.anonymousId()) {\n            base.anonymousId = user.anonymousId();\n        }\n        return base;\n    };\n    /**\n     * Builds the context part of an event based on \"foreign\" keys that\n     * are provided in the `Options` parameter for an Event\n     */\n    EventFactory.prototype.context = function (event) {\n        var _a, _b, _c;\n        var optionsKeys = ['integrations', 'anonymousId', 'timestamp', 'userId'];\n        var options = (_a = event.options) !== null && _a !== void 0 ? _a : {};\n        delete options['integrations'];\n        var providedOptionsKeys = Object.keys(options);\n        var context = (_c = (_b = event.options) === null || _b === void 0 ? void 0 : _b.context) !== null && _c !== void 0 ? _c : {};\n        var overrides = {};\n        providedOptionsKeys.forEach(function (key) {\n            if (key === 'context') {\n                return;\n            }\n            if (optionsKeys.includes(key)) {\n                dset(overrides, key, options[key]);\n            }\n            else {\n                dset(context, key, options[key]);\n            }\n        });\n        return [context, overrides];\n    };\n    EventFactory.prototype.normalize = function (event) {\n        var _a, _b;\n        var integrationBooleans = Object.keys((_a = event.integrations) !== null && _a !== void 0 ? _a : {}).reduce(function (integrationNames, name) {\n            var _a;\n            var _b;\n            return __assign(__assign({}, integrationNames), (_a = {}, _a[name] = Boolean((_b = event.integrations) === null || _b === void 0 ? void 0 : _b[name]), _a));\n        }, {});\n        // This is pretty trippy, but here's what's going on:\n        // - a) We don't pass initial integration options as part of the event, only if they're true or false\n        // - b) We do accept per integration overrides (like integrations.Amplitude.sessionId) at the event level\n        // Hence the need to convert base integration options to booleans, but maintain per event integration overrides\n        var allIntegrations = __assign(__assign({}, integrationBooleans), (_b = event.options) === null || _b === void 0 ? void 0 : _b.integrations);\n        var _c = this.context(event), context = _c[0], overrides = _c[1];\n        var options = event.options, rest = __rest(event, [\"options\"]);\n        var body = __assign(__assign(__assign({ timestamp: new Date() }, rest), { context: context, integrations: allIntegrations }), overrides);\n        var messageId = 'ajs-next-' + md5.hash(JSON.stringify(body) + uuid());\n        var evt = __assign(__assign({}, body), { messageId: messageId });\n        return evt;\n    };\n    return EventFactory;\n}());\nexport { EventFactory };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}