{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\swaps-client\\\\src\\\\components\\\\Exchange\\\\OrderEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport { BsArrowRight } from \"react-icons/bs\";\nimport { PRECISION, USD_DECIMALS, SWAP, TRIGGER_PREFIX_ABOVE, TRIGGER_PREFIX_BELOW, MIN_PROFIT_TIME, DECREASE, INCREASE, useChainId, getTokenInfo, isTriggerRatioInverted, bigNumberify, formatAmountFree, parseValue, getNextToAmount, getExchangeRate, formatAmount, getExchangeRateDisplay, calculatePositionDelta, getLiquidationPrice, formatDateTime, getDeltaStr, getProfitPrice, getTimeRemaining } from \"../../Helpers\";\nimport { updateSwapOrder, updateIncreaseOrder, updateDecreaseOrder } from \"../../Api\";\nimport Modal from \"../Modal/Modal\";\nimport ExchangeInfoRow from \"./ExchangeInfoRow\";\nimport { getContract } from \"../../Addresses\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OrderEditor(props) {\n  _s();\n\n  const {\n    account,\n    order,\n    setEditingOrder,\n    infoTokens,\n    pendingTxns,\n    setPendingTxns,\n    library,\n    totalTokenWeights,\n    usdgSupply,\n    getPositionForOrder,\n    positionsMap\n  } = props;\n  const {\n    chainId\n  } = useChainId();\n  const position = order.type !== SWAP ? getPositionForOrder(account, order, positionsMap) : null;\n  const liquidationPrice = order.type === DECREASE && position ? getLiquidationPrice(position) : null;\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n  const fromTokenInfo = order.type === SWAP ? getTokenInfo(infoTokens, order.path[0], true, nativeTokenAddress) : null;\n  const toTokenInfo = order.type === SWAP ? getTokenInfo(infoTokens, order.path[order.path.length - 1], order.shouldUnwrap, nativeTokenAddress) : null;\n  const triggerRatioInverted = useMemo(() => {\n    if (order.type !== SWAP) {\n      return null;\n    }\n\n    return isTriggerRatioInverted(fromTokenInfo, toTokenInfo);\n  }, [toTokenInfo, fromTokenInfo, order.type]);\n  let initialRatio = 0;\n\n  if (order.triggerRatio) {\n    initialRatio = triggerRatioInverted ? PRECISION.mul(PRECISION).div(order.triggerRatio) : order.triggerRatio;\n  }\n\n  const [triggerRatioValue, setTriggerRatioValue] = useState(formatAmountFree(initialRatio, USD_DECIMALS, 6));\n  const [triggerPriceValue, setTriggerPriceValue] = useState(formatAmountFree(order.triggerPrice, USD_DECIMALS, 4));\n  const triggerPrice = useMemo(() => {\n    return triggerPriceValue ? parseValue(triggerPriceValue, USD_DECIMALS) : 0;\n  }, [triggerPriceValue]);\n  const triggerRatio = useMemo(() => {\n    if (!triggerRatioValue) {\n      return bigNumberify(0);\n    }\n\n    let ratio = parseValue(triggerRatioValue, USD_DECIMALS);\n\n    if (triggerRatioInverted) {\n      ratio = PRECISION.mul(PRECISION).div(ratio);\n    }\n\n    return ratio;\n  }, [triggerRatioValue, triggerRatioInverted]);\n  const indexTokenMarkPrice = useMemo(() => {\n    if (order.type === SWAP) {\n      return;\n    }\n\n    const toTokenInfo = getTokenInfo(infoTokens, order.indexToken);\n    return order.isLong ? toTokenInfo.maxPrice : toTokenInfo.minPrice;\n  }, [infoTokens, order]);\n  let toAmount;\n\n  if (order.type === SWAP) {\n    const {\n      amount\n    } = getNextToAmount(chainId, order.amountIn, order.path[0], order.path[order.path.length - 1], infoTokens, undefined, triggerRatio, usdgSupply, totalTokenWeights);\n    toAmount = amount;\n  }\n\n  const onClickPrimary = () => {\n    setIsSubmitting(true);\n    let func;\n    let params;\n\n    if (order.type === SWAP) {\n      func = updateSwapOrder;\n      params = [chainId, library, order.index, toAmount, triggerRatio, order.triggerAboveThreshold];\n    } else if (order.type === DECREASE) {\n      func = updateDecreaseOrder;\n      params = [chainId, library, order.index, order.collateralDelta, order.sizeDelta, triggerPrice, order.triggerAboveThreshold];\n    } else if (order.type === INCREASE) {\n      func = updateIncreaseOrder;\n      params = [chainId, library, order.index, order.sizeDelta, triggerPrice, order.triggerAboveThreshold];\n    }\n\n    params.push({\n      successMsg: \"Order updated!\",\n      failMsg: \"Order update failed.\",\n      sentMsg: \"Order update submitted!\",\n      pendingTxns,\n      setPendingTxns\n    });\n    return func(...params).then(() => {\n      setEditingOrder(null);\n    }).finally(() => {\n      setIsSubmitting(false);\n    });\n  };\n\n  const onTriggerRatioChange = evt => {\n    setTriggerRatioValue(evt.target.value || \"\");\n  };\n\n  const onTriggerPriceChange = evt => {\n    setTriggerPriceValue(evt.target.value || \"\");\n  };\n\n  const getError = () => {\n    if ((!triggerRatio || triggerRatio.eq(0)) && (!triggerPrice || triggerPrice.eq(0))) {\n      return \"Enter Price\";\n    }\n\n    if (order.type === SWAP && triggerRatio.eq(order.triggerRatio)) {\n      return \"Enter new Price\";\n    }\n\n    if (order.type !== SWAP && triggerPrice.eq(order.triggerPrice)) {\n      return \"Enter new Price\";\n    }\n\n    if (position) {\n      if (order.type === DECREASE) {\n        if (position.isLong && triggerPrice.lte(liquidationPrice)) {\n          return \"Price below Liq. Price\";\n        }\n\n        if (!position.isLong && triggerPrice.gte(liquidationPrice)) {\n          return \"Price above Liq. Price\";\n        }\n      }\n\n      const {\n        delta,\n        hasProfit\n      } = calculatePositionDelta(triggerPrice, position);\n\n      if (hasProfit && delta.eq(0)) {\n        return \"Invalid price, see warning\";\n      }\n    }\n\n    if (order.type !== SWAP && indexTokenMarkPrice) {\n      if (order.triggerAboveThreshold && indexTokenMarkPrice.gt(triggerPrice)) {\n        return \"Price below Mark Price\";\n      }\n\n      if (!order.triggerAboveThreshold && indexTokenMarkPrice.lt(triggerPrice)) {\n        return \"Price above Mark Price\";\n      }\n    }\n\n    if (order.type === SWAP) {\n      const currentRate = getExchangeRate(fromTokenInfo, toTokenInfo);\n\n      if (currentRate && !currentRate.gte(triggerRatio)) {\n        return `Price is ${triggerRatioInverted ? \"below\" : \"above\"} Mark Price`;\n      }\n    }\n  };\n\n  const renderMinProfitWarning = () => {\n    if (MIN_PROFIT_TIME === 0 || order.type === SWAP || !position || !triggerPrice || triggerPrice.eq(0)) {\n      return null;\n    }\n\n    const {\n      delta,\n      pendingDelta,\n      pendingDeltaPercentage,\n      hasProfit\n    } = calculatePositionDelta(triggerPrice, position);\n\n    if (hasProfit && delta.eq(0)) {\n      const {\n        deltaStr\n      } = getDeltaStr({\n        delta: pendingDelta,\n        deltaPercentage: pendingDeltaPercentage,\n        hasProfit\n      });\n      const profitPrice = getProfitPrice(triggerPrice, position);\n      const minProfitExpiration = position.lastIncreasedTime + MIN_PROFIT_TIME;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Confirmation-box-warning\",\n        children: [\"This order will forfeit a profit of \", deltaStr, \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 59\n        }, this), \"Profit price: \", position.isLong ? \">\" : \"<\", \" $\", formatAmount(profitPrice, USD_DECIMALS, 2, true), \". This rule only applies for the next \", getTimeRemaining(minProfitExpiration), \", until \", formatDateTime(minProfitExpiration), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const isPrimaryEnabled = () => {\n    if (isSubmitting) {\n      return false;\n    }\n\n    const error = getError();\n\n    if (error) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const getPrimaryText = () => {\n    const error = getError();\n\n    if (error) {\n      return error;\n    }\n\n    if (isSubmitting) {\n      return \"Updating Order...\";\n    }\n\n    return \"Update Order\";\n  };\n\n  if (order.type !== SWAP) {\n    const triggerPricePrefix = order.triggerAboveThreshold ? TRIGGER_PREFIX_ABOVE : TRIGGER_PREFIX_BELOW;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: true,\n      className: \"Exchange-list-modal\",\n      setIsVisible: () => setEditingOrder(null),\n      label: \"Edit order\",\n      children: [renderMinProfitWarning(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Exchange-swap-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-swap-section-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"muted\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"muted align-right clickable\",\n            onClick: () => {\n              setTriggerPriceValue(formatAmountFree(indexTokenMarkPrice, USD_DECIMALS, 2));\n            },\n            children: [\"Mark: \", formatAmount(indexTokenMarkPrice, USD_DECIMALS, 2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-swap-section-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-swap-input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0\",\n              placeholder: \"0.0\",\n              className: \"Exchange-swap-input\",\n              value: triggerPriceValue,\n              onChange: onTriggerPriceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"PositionEditor-token-symbol\",\n            children: \"USD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n        label: \"Price\",\n        children: triggerPrice && !triggerPrice.eq(order.triggerPrice) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"muted\",\n            children: [triggerPricePrefix, \" \", formatAmount(order.triggerPrice, USD_DECIMALS, 2, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(BsArrowRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), \"\\xA0\", triggerPricePrefix, \" \", formatAmount(triggerPrice, USD_DECIMALS, 2, true)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [triggerPricePrefix, \" \", formatAmount(order.triggerPrice, USD_DECIMALS, 2, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), liquidationPrice && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Exchange-info-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-info-label\",\n          children: \"Liq. Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-right\",\n          children: `$${formatAmount(liquidationPrice, USD_DECIMALS, 2, true)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Exchange-swap-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"App-cta Exchange-swap-button Exchange-list-modal-button\",\n          onClick: onClickPrimary,\n          disabled: !isPrimaryEnabled(),\n          children: getPrimaryText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isVisible: true,\n    className: \"Exchange-list-modal\",\n    setIsVisible: () => setEditingOrder(null),\n    label: \"Edit order\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Exchange-swap-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Exchange-swap-section-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"muted\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), fromTokenInfo && toTokenInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"muted align-right clickable\",\n          onClick: () => {\n            setTriggerRatioValue(formatAmountFree(getExchangeRate(fromTokenInfo, toTokenInfo, triggerRatioInverted), USD_DECIMALS, 10));\n          },\n          children: [\"Mark Price:\", \" \", formatAmount(getExchangeRate(fromTokenInfo, toTokenInfo, triggerRatioInverted), USD_DECIMALS, 2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Exchange-swap-section-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-swap-input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            placeholder: \"0.0\",\n            className: \"Exchange-swap-input\",\n            value: triggerRatioValue,\n            onChange: onTriggerRatioChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), (() => {\n          if (!toTokenInfo) return;\n          if (!fromTokenInfo) return;\n          const [tokenA, tokenB] = triggerRatioInverted ? [toTokenInfo, fromTokenInfo] : [fromTokenInfo, toTokenInfo];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"PositionEditor-token-symbol\",\n            children: [tokenA.symbol, \"\\xA0/\\xA0\", tokenB.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n      label: \"Minimum received\",\n      children: [triggerRatio && !triggerRatio.eq(order.triggerRatio) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"muted\",\n          children: formatAmount(order.minOut, toTokenInfo.decimals, 4, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(BsArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this), \"\\xA0\", formatAmount(toAmount, toTokenInfo.decimals, 4, true)]\n      }, void 0, true) : formatAmount(order.minOut, toTokenInfo.decimals, 4, true), \"\\xA0\", toTokenInfo.symbol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExchangeInfoRow, {\n      label: \"Price\",\n      children: triggerRatio && !triggerRatio.eq(0) && !triggerRatio.eq(order.triggerRatio) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"muted\",\n          children: getExchangeRateDisplay(order.triggerRatio, fromTokenInfo, toTokenInfo, {\n            omitSymbols: !triggerRatio || !triggerRatio.eq(order.triggerRatio)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(BsArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), \"\\xA0\", getExchangeRateDisplay(triggerRatio, fromTokenInfo, toTokenInfo)]\n      }, void 0, true) : getExchangeRateDisplay(order.triggerRatio, fromTokenInfo, toTokenInfo, {\n        omitSymbols: !triggerRatio || !triggerRatio.eq(order.triggerRatio)\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), fromTokenInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Exchange-info-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Exchange-info-label\",\n        children: [fromTokenInfo.symbol, \" price\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-right\",\n        children: [formatAmount(fromTokenInfo.minPrice, USD_DECIMALS, 2, true), \" USD\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this), toTokenInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Exchange-info-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Exchange-info-label\",\n        children: [toTokenInfo.symbol, \" price\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-right\",\n        children: [formatAmount(toTokenInfo.maxPrice, USD_DECIMALS, 2, true), \" USD\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Exchange-swap-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"App-cta Exchange-swap-button Exchange-list-modal-button\",\n        onClick: onClickPrimary,\n        disabled: !isPrimaryEnabled(),\n        children: getPrimaryText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderEditor, \"K/6+5dAxdGJ+9dW5FAVl+cjWrvk=\", false, function () {\n  return [useChainId];\n});\n\n_c = OrderEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderEditor\");","map":{"version":3,"names":["React","useState","useMemo","BsArrowRight","PRECISION","USD_DECIMALS","SWAP","TRIGGER_PREFIX_ABOVE","TRIGGER_PREFIX_BELOW","MIN_PROFIT_TIME","DECREASE","INCREASE","useChainId","getTokenInfo","isTriggerRatioInverted","bigNumberify","formatAmountFree","parseValue","getNextToAmount","getExchangeRate","formatAmount","getExchangeRateDisplay","calculatePositionDelta","getLiquidationPrice","formatDateTime","getDeltaStr","getProfitPrice","getTimeRemaining","updateSwapOrder","updateIncreaseOrder","updateDecreaseOrder","Modal","ExchangeInfoRow","getContract","OrderEditor","props","account","order","setEditingOrder","infoTokens","pendingTxns","setPendingTxns","library","totalTokenWeights","usdgSupply","getPositionForOrder","positionsMap","chainId","position","type","liquidationPrice","isSubmitting","setIsSubmitting","nativeTokenAddress","fromTokenInfo","path","toTokenInfo","length","shouldUnwrap","triggerRatioInverted","initialRatio","triggerRatio","mul","div","triggerRatioValue","setTriggerRatioValue","triggerPriceValue","setTriggerPriceValue","triggerPrice","ratio","indexTokenMarkPrice","indexToken","isLong","maxPrice","minPrice","toAmount","amount","amountIn","undefined","onClickPrimary","func","params","index","triggerAboveThreshold","collateralDelta","sizeDelta","push","successMsg","failMsg","sentMsg","then","finally","onTriggerRatioChange","evt","target","value","onTriggerPriceChange","getError","eq","lte","gte","delta","hasProfit","gt","lt","currentRate","renderMinProfitWarning","pendingDelta","pendingDeltaPercentage","deltaStr","deltaPercentage","profitPrice","minProfitExpiration","lastIncreasedTime","isPrimaryEnabled","error","getPrimaryText","triggerPricePrefix","tokenA","tokenB","symbol","minOut","decimals","omitSymbols"],"sources":["C:/Users/rober/Documents/swaps-client/src/components/Exchange/OrderEditor.js"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { BsArrowRight } from \"react-icons/bs\";\n\nimport {\n  PRECISION,\n  USD_DECIMALS,\n  SWAP,\n  TRIGGER_PREFIX_ABOVE,\n  TRIGGER_PREFIX_BELOW,\n  MIN_PROFIT_TIME,\n  DECREASE,\n  INCREASE,\n  useChainId,\n  getTokenInfo,\n  isTriggerRatioInverted,\n  bigNumberify,\n  formatAmountFree,\n  parseValue,\n  getNextToAmount,\n  getExchangeRate,\n  formatAmount,\n  getExchangeRateDisplay,\n  calculatePositionDelta,\n  getLiquidationPrice,\n  formatDateTime,\n  getDeltaStr,\n  getProfitPrice,\n  getTimeRemaining,\n} from \"../../Helpers\";\nimport { updateSwapOrder, updateIncreaseOrder, updateDecreaseOrder } from \"../../Api\";\nimport Modal from \"../Modal/Modal\";\nimport ExchangeInfoRow from \"./ExchangeInfoRow\";\nimport { getContract } from \"../../Addresses\";\n\nexport default function OrderEditor(props) {\n  const {\n    account,\n    order,\n    setEditingOrder,\n    infoTokens,\n    pendingTxns,\n    setPendingTxns,\n    library,\n    totalTokenWeights,\n    usdgSupply,\n    getPositionForOrder,\n    positionsMap,\n  } = props;\n\n  const { chainId } = useChainId();\n\n  const position = order.type !== SWAP ? getPositionForOrder(account, order, positionsMap) : null;\n  const liquidationPrice = order.type === DECREASE && position ? getLiquidationPrice(position) : null;\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n  const fromTokenInfo = order.type === SWAP ? getTokenInfo(infoTokens, order.path[0], true, nativeTokenAddress) : null;\n  const toTokenInfo =\n    order.type === SWAP\n      ? getTokenInfo(infoTokens, order.path[order.path.length - 1], order.shouldUnwrap, nativeTokenAddress)\n      : null;\n\n  const triggerRatioInverted = useMemo(() => {\n    if (order.type !== SWAP) {\n      return null;\n    }\n\n    return isTriggerRatioInverted(fromTokenInfo, toTokenInfo);\n  }, [toTokenInfo, fromTokenInfo, order.type]);\n\n  let initialRatio = 0;\n  if (order.triggerRatio) {\n    initialRatio = triggerRatioInverted ? PRECISION.mul(PRECISION).div(order.triggerRatio) : order.triggerRatio;\n  }\n  const [triggerRatioValue, setTriggerRatioValue] = useState(formatAmountFree(initialRatio, USD_DECIMALS, 6));\n\n  const [triggerPriceValue, setTriggerPriceValue] = useState(formatAmountFree(order.triggerPrice, USD_DECIMALS, 4));\n  const triggerPrice = useMemo(() => {\n    return triggerPriceValue ? parseValue(triggerPriceValue, USD_DECIMALS) : 0;\n  }, [triggerPriceValue]);\n\n  const triggerRatio = useMemo(() => {\n    if (!triggerRatioValue) {\n      return bigNumberify(0);\n    }\n    let ratio = parseValue(triggerRatioValue, USD_DECIMALS);\n    if (triggerRatioInverted) {\n      ratio = PRECISION.mul(PRECISION).div(ratio);\n    }\n    return ratio;\n  }, [triggerRatioValue, triggerRatioInverted]);\n\n  const indexTokenMarkPrice = useMemo(() => {\n    if (order.type === SWAP) {\n      return;\n    }\n    const toTokenInfo = getTokenInfo(infoTokens, order.indexToken);\n    return order.isLong ? toTokenInfo.maxPrice : toTokenInfo.minPrice;\n  }, [infoTokens, order]);\n\n  let toAmount;\n  if (order.type === SWAP) {\n    const { amount } = getNextToAmount(\n      chainId,\n      order.amountIn,\n      order.path[0],\n      order.path[order.path.length - 1],\n      infoTokens,\n      undefined,\n      triggerRatio,\n      usdgSupply,\n      totalTokenWeights\n    );\n    toAmount = amount;\n  }\n\n  const onClickPrimary = () => {\n    setIsSubmitting(true);\n\n    let func;\n    let params;\n\n    if (order.type === SWAP) {\n      func = updateSwapOrder;\n      params = [chainId, library, order.index, toAmount, triggerRatio, order.triggerAboveThreshold];\n    } else if (order.type === DECREASE) {\n      func = updateDecreaseOrder;\n      params = [\n        chainId,\n        library,\n        order.index,\n        order.collateralDelta,\n        order.sizeDelta,\n        triggerPrice,\n        order.triggerAboveThreshold,\n      ];\n    } else if (order.type === INCREASE) {\n      func = updateIncreaseOrder;\n      params = [chainId, library, order.index, order.sizeDelta, triggerPrice, order.triggerAboveThreshold];\n    }\n\n    params.push({\n      successMsg: \"Order updated!\",\n      failMsg: \"Order update failed.\",\n      sentMsg: \"Order update submitted!\",\n      pendingTxns,\n      setPendingTxns,\n    });\n\n    return func(...params)\n      .then(() => {\n        setEditingOrder(null);\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  };\n\n  const onTriggerRatioChange = (evt) => {\n    setTriggerRatioValue(evt.target.value || \"\");\n  };\n\n  const onTriggerPriceChange = (evt) => {\n    setTriggerPriceValue(evt.target.value || \"\");\n  };\n\n  const getError = () => {\n    if ((!triggerRatio || triggerRatio.eq(0)) && (!triggerPrice || triggerPrice.eq(0))) {\n      return \"Enter Price\";\n    }\n    if (order.type === SWAP && triggerRatio.eq(order.triggerRatio)) {\n      return \"Enter new Price\";\n    }\n    if (order.type !== SWAP && triggerPrice.eq(order.triggerPrice)) {\n      return \"Enter new Price\";\n    }\n    if (position) {\n      if (order.type === DECREASE) {\n        if (position.isLong && triggerPrice.lte(liquidationPrice)) {\n          return \"Price below Liq. Price\";\n        }\n        if (!position.isLong && triggerPrice.gte(liquidationPrice)) {\n          return \"Price above Liq. Price\";\n        }\n      }\n\n      const { delta, hasProfit } = calculatePositionDelta(triggerPrice, position);\n      if (hasProfit && delta.eq(0)) {\n        return \"Invalid price, see warning\";\n      }\n    }\n\n    if (order.type !== SWAP && indexTokenMarkPrice) {\n      if (order.triggerAboveThreshold && indexTokenMarkPrice.gt(triggerPrice)) {\n        return \"Price below Mark Price\";\n      }\n      if (!order.triggerAboveThreshold && indexTokenMarkPrice.lt(triggerPrice)) {\n        return \"Price above Mark Price\";\n      }\n    }\n\n    if (order.type === SWAP) {\n      const currentRate = getExchangeRate(fromTokenInfo, toTokenInfo);\n      if (currentRate && !currentRate.gte(triggerRatio)) {\n        return `Price is ${triggerRatioInverted ? \"below\" : \"above\"} Mark Price`;\n      }\n    }\n  };\n\n  const renderMinProfitWarning = () => {\n    if (MIN_PROFIT_TIME === 0 || order.type === SWAP || !position || !triggerPrice || triggerPrice.eq(0)) {\n      return null;\n    }\n\n    const { delta, pendingDelta, pendingDeltaPercentage, hasProfit } = calculatePositionDelta(triggerPrice, position);\n    if (hasProfit && delta.eq(0)) {\n      const { deltaStr } = getDeltaStr({\n        delta: pendingDelta,\n        deltaPercentage: pendingDeltaPercentage,\n        hasProfit,\n      });\n      const profitPrice = getProfitPrice(triggerPrice, position);\n      const minProfitExpiration = position.lastIncreasedTime + MIN_PROFIT_TIME;\n      return (\n        <div className=\"Confirmation-box-warning\">\n          This order will forfeit a profit of {deltaStr}. <br />\n          Profit price: {position.isLong ? \">\" : \"<\"} ${formatAmount(profitPrice, USD_DECIMALS, 2, true)}. This rule\n          only applies for the next {getTimeRemaining(minProfitExpiration)}, until {formatDateTime(minProfitExpiration)}\n          .\n        </div>\n      );\n    }\n  };\n\n  const isPrimaryEnabled = () => {\n    if (isSubmitting) {\n      return false;\n    }\n    const error = getError();\n    if (error) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const getPrimaryText = () => {\n    const error = getError();\n    if (error) {\n      return error;\n    }\n\n    if (isSubmitting) {\n      return \"Updating Order...\";\n    }\n    return \"Update Order\";\n  };\n\n  if (order.type !== SWAP) {\n    const triggerPricePrefix = order.triggerAboveThreshold ? TRIGGER_PREFIX_ABOVE : TRIGGER_PREFIX_BELOW;\n    return (\n      <Modal\n        isVisible={true}\n        className=\"Exchange-list-modal\"\n        setIsVisible={() => setEditingOrder(null)}\n        label=\"Edit order\"\n      >\n        {renderMinProfitWarning()}\n        <div className=\"Exchange-swap-section\">\n          <div className=\"Exchange-swap-section-top\">\n            <div className=\"muted\">Price</div>\n            <div\n              className=\"muted align-right clickable\"\n              onClick={() => {\n                setTriggerPriceValue(formatAmountFree(indexTokenMarkPrice, USD_DECIMALS, 2));\n              }}\n            >\n              Mark: {formatAmount(indexTokenMarkPrice, USD_DECIMALS, 2)}\n            </div>\n          </div>\n          <div className=\"Exchange-swap-section-bottom\">\n            <div className=\"Exchange-swap-input-container\">\n              <input\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"0.0\"\n                className=\"Exchange-swap-input\"\n                value={triggerPriceValue}\n                onChange={onTriggerPriceChange}\n              />\n            </div>\n            <div className=\"PositionEditor-token-symbol\">USD</div>\n          </div>\n        </div>\n        <ExchangeInfoRow label=\"Price\">\n          {triggerPrice && !triggerPrice.eq(order.triggerPrice) ? (\n            <>\n              <span className=\"muted\">\n                {triggerPricePrefix} {formatAmount(order.triggerPrice, USD_DECIMALS, 2, true)}\n              </span>\n              &nbsp;\n              <BsArrowRight />\n              &nbsp;\n              {triggerPricePrefix} {formatAmount(triggerPrice, USD_DECIMALS, 2, true)}\n            </>\n          ) : (\n            <span>\n              {triggerPricePrefix} {formatAmount(order.triggerPrice, USD_DECIMALS, 2, true)}\n            </span>\n          )}\n        </ExchangeInfoRow>\n        {liquidationPrice && (\n          <div className=\"Exchange-info-row\">\n            <div className=\"Exchange-info-label\">Liq. Price</div>\n            <div className=\"align-right\">{`$${formatAmount(liquidationPrice, USD_DECIMALS, 2, true)}`}</div>\n          </div>\n        )}\n        <div className=\"Exchange-swap-button-container\">\n          <button\n            className=\"App-cta Exchange-swap-button Exchange-list-modal-button\"\n            onClick={onClickPrimary}\n            disabled={!isPrimaryEnabled()}\n          >\n            {getPrimaryText()}\n          </button>\n        </div>\n      </Modal>\n    );\n  }\n\n  return (\n    <Modal\n      isVisible={true}\n      className=\"Exchange-list-modal\"\n      setIsVisible={() => setEditingOrder(null)}\n      label=\"Edit order\"\n    >\n      <div className=\"Exchange-swap-section\">\n        <div className=\"Exchange-swap-section-top\">\n          <div className=\"muted\">Price</div>\n          {fromTokenInfo && toTokenInfo && (\n            <div\n              className=\"muted align-right clickable\"\n              onClick={() => {\n                setTriggerRatioValue(\n                  formatAmountFree(getExchangeRate(fromTokenInfo, toTokenInfo, triggerRatioInverted), USD_DECIMALS, 10)\n                );\n              }}\n            >\n              Mark Price:{\" \"}\n              {formatAmount(getExchangeRate(fromTokenInfo, toTokenInfo, triggerRatioInverted), USD_DECIMALS, 2)}\n            </div>\n          )}\n        </div>\n        <div className=\"Exchange-swap-section-bottom\">\n          <div className=\"Exchange-swap-input-container\">\n            <input\n              type=\"number\"\n              min=\"0\"\n              placeholder=\"0.0\"\n              className=\"Exchange-swap-input\"\n              value={triggerRatioValue}\n              onChange={onTriggerRatioChange}\n            />\n          </div>\n          {(() => {\n            if (!toTokenInfo) return;\n            if (!fromTokenInfo) return;\n            const [tokenA, tokenB] = triggerRatioInverted ? [toTokenInfo, fromTokenInfo] : [fromTokenInfo, toTokenInfo];\n            return (\n              <div className=\"PositionEditor-token-symbol\">\n                {tokenA.symbol}&nbsp;/&nbsp;{tokenB.symbol}\n              </div>\n            );\n          })()}\n        </div>\n      </div>\n      <ExchangeInfoRow label=\"Minimum received\">\n        {triggerRatio && !triggerRatio.eq(order.triggerRatio) ? (\n          <>\n            <span className=\"muted\">{formatAmount(order.minOut, toTokenInfo.decimals, 4, true)}</span>\n            &nbsp;\n            <BsArrowRight />\n            &nbsp;\n            {formatAmount(toAmount, toTokenInfo.decimals, 4, true)}\n          </>\n        ) : (\n          formatAmount(order.minOut, toTokenInfo.decimals, 4, true)\n        )}\n        &nbsp;{toTokenInfo.symbol}\n      </ExchangeInfoRow>\n      <ExchangeInfoRow label=\"Price\">\n        {triggerRatio && !triggerRatio.eq(0) && !triggerRatio.eq(order.triggerRatio) ? (\n          <>\n            <span className=\"muted\">\n              {getExchangeRateDisplay(order.triggerRatio, fromTokenInfo, toTokenInfo, {\n                omitSymbols: !triggerRatio || !triggerRatio.eq(order.triggerRatio),\n              })}\n            </span>\n            &nbsp;\n            <BsArrowRight />\n            &nbsp;\n            {getExchangeRateDisplay(triggerRatio, fromTokenInfo, toTokenInfo)}\n          </>\n        ) : (\n          getExchangeRateDisplay(order.triggerRatio, fromTokenInfo, toTokenInfo, {\n            omitSymbols: !triggerRatio || !triggerRatio.eq(order.triggerRatio),\n          })\n        )}\n      </ExchangeInfoRow>\n      {fromTokenInfo && (\n        <div className=\"Exchange-info-row\">\n          <div className=\"Exchange-info-label\">{fromTokenInfo.symbol} price</div>\n          <div className=\"align-right\">{formatAmount(fromTokenInfo.minPrice, USD_DECIMALS, 2, true)} USD</div>\n        </div>\n      )}\n      {toTokenInfo && (\n        <div className=\"Exchange-info-row\">\n          <div className=\"Exchange-info-label\">{toTokenInfo.symbol} price</div>\n          <div className=\"align-right\">{formatAmount(toTokenInfo.maxPrice, USD_DECIMALS, 2, true)} USD</div>\n        </div>\n      )}\n      <div className=\"Exchange-swap-button-container\">\n        <button\n          className=\"App-cta Exchange-swap-button Exchange-list-modal-button\"\n          onClick={onClickPrimary}\n          disabled={!isPrimaryEnabled()}\n        >\n          {getPrimaryText()}\n        </button>\n      </div>\n    </Modal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}