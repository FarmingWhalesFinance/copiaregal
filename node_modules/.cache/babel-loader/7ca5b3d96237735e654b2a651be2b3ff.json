{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Track = void 0;\n\nvar inherits_1 = __importDefault(require(\"inherits\"));\n\nvar facade_1 = require(\"./facade\");\n\nvar identify_1 = require(\"./identify\");\n\nvar is_email_1 = __importDefault(require(\"./is-email\"));\n\nvar obj_case_1 = __importDefault(require(\"obj-case\"));\n\nfunction Track(dictionary, opts) {\n  facade_1.Facade.call(this, dictionary, opts);\n}\n\nexports.Track = Track;\ninherits_1.default(Track, facade_1.Facade);\nvar t = Track.prototype;\n\nt.action = function () {\n  return \"track\";\n};\n\nt.type = t.action;\nt.event = facade_1.Facade.field(\"event\");\nt.value = facade_1.Facade.proxy(\"properties.value\");\nt.category = facade_1.Facade.proxy(\"properties.category\");\nt.id = facade_1.Facade.proxy(\"properties.id\");\n\nt.productId = function () {\n  return this.proxy(\"properties.product_id\") || this.proxy(\"properties.productId\");\n};\n\nt.promotionId = function () {\n  return this.proxy(\"properties.promotion_id\") || this.proxy(\"properties.promotionId\");\n};\n\nt.cartId = function () {\n  return this.proxy(\"properties.cart_id\") || this.proxy(\"properties.cartId\");\n};\n\nt.checkoutId = function () {\n  return this.proxy(\"properties.checkout_id\") || this.proxy(\"properties.checkoutId\");\n};\n\nt.paymentId = function () {\n  return this.proxy(\"properties.payment_id\") || this.proxy(\"properties.paymentId\");\n};\n\nt.couponId = function () {\n  return this.proxy(\"properties.coupon_id\") || this.proxy(\"properties.couponId\");\n};\n\nt.wishlistId = function () {\n  return this.proxy(\"properties.wishlist_id\") || this.proxy(\"properties.wishlistId\");\n};\n\nt.reviewId = function () {\n  return this.proxy(\"properties.review_id\") || this.proxy(\"properties.reviewId\");\n};\n\nt.orderId = function () {\n  return this.proxy(\"properties.id\") || this.proxy(\"properties.order_id\") || this.proxy(\"properties.orderId\");\n};\n\nt.sku = facade_1.Facade.proxy(\"properties.sku\");\nt.tax = facade_1.Facade.proxy(\"properties.tax\");\nt.name = facade_1.Facade.proxy(\"properties.name\");\nt.price = facade_1.Facade.proxy(\"properties.price\");\nt.total = facade_1.Facade.proxy(\"properties.total\");\nt.repeat = facade_1.Facade.proxy(\"properties.repeat\");\nt.coupon = facade_1.Facade.proxy(\"properties.coupon\");\nt.shipping = facade_1.Facade.proxy(\"properties.shipping\");\nt.discount = facade_1.Facade.proxy(\"properties.discount\");\n\nt.shippingMethod = function () {\n  return this.proxy(\"properties.shipping_method\") || this.proxy(\"properties.shippingMethod\");\n};\n\nt.paymentMethod = function () {\n  return this.proxy(\"properties.payment_method\") || this.proxy(\"properties.paymentMethod\");\n};\n\nt.description = facade_1.Facade.proxy(\"properties.description\");\nt.plan = facade_1.Facade.proxy(\"properties.plan\");\n\nt.subtotal = function () {\n  var subtotal = obj_case_1.default(this.properties(), \"subtotal\");\n  var total = this.total() || this.revenue();\n  if (subtotal) return subtotal;\n  if (!total) return 0;\n\n  if (this.total()) {\n    var n = this.tax();\n    if (n) total -= n;\n    n = this.shipping();\n    if (n) total -= n;\n    n = this.discount();\n    if (n) total += n;\n  }\n\n  return total;\n};\n\nt.products = function () {\n  var props = this.properties();\n  var products = obj_case_1.default(props, \"products\");\n\n  if (Array.isArray(products)) {\n    return products.filter(function (item) {\n      return item !== null;\n    });\n  }\n\n  return [];\n};\n\nt.quantity = function () {\n  var props = this.obj.properties || {};\n  return props.quantity || 1;\n};\n\nt.currency = function () {\n  var props = this.obj.properties || {};\n  return props.currency || \"USD\";\n};\n\nt.referrer = function () {\n  return this.proxy(\"context.referrer.url\") || this.proxy(\"context.page.referrer\") || this.proxy(\"properties.referrer\");\n};\n\nt.query = facade_1.Facade.proxy(\"options.query\");\n\nt.properties = function (aliases) {\n  var ret = this.field(\"properties\") || {};\n  aliases = aliases || {};\n\n  for (var alias in aliases) {\n    var value = this[alias] == null ? this.proxy(\"properties.\" + alias) : this[alias]();\n    if (value == null) continue;\n    ret[aliases[alias]] = value;\n    delete ret[alias];\n  }\n\n  return ret;\n};\n\nt.username = function () {\n  return this.proxy(\"traits.username\") || this.proxy(\"properties.username\") || this.userId() || this.sessionId();\n};\n\nt.email = function () {\n  var email = this.proxy(\"traits.email\") || this.proxy(\"properties.email\") || this.proxy(\"options.traits.email\");\n  if (email) return email;\n  var userId = this.userId();\n  if (is_email_1.default(userId)) return userId;\n};\n\nt.revenue = function () {\n  var revenue = this.proxy(\"properties.revenue\");\n  var event = this.event();\n  var orderCompletedRegExp = /^[ _]?completed[ _]?order[ _]?|^[ _]?order[ _]?completed[ _]?$/i;\n\n  if (!revenue && event && event.match(orderCompletedRegExp)) {\n    revenue = this.proxy(\"properties.total\");\n  }\n\n  return currency(revenue);\n};\n\nt.cents = function () {\n  var revenue = this.revenue();\n  return typeof revenue !== \"number\" ? this.value() || 0 : revenue * 100;\n};\n\nt.identify = function () {\n  var json = this.json();\n  json.traits = this.traits();\n  return new identify_1.Identify(json, this.opts);\n};\n\nfunction currency(val) {\n  if (!val) return;\n\n  if (typeof val === \"number\") {\n    return val;\n  }\n\n  if (typeof val !== \"string\") {\n    return;\n  }\n\n  val = val.replace(/\\$/g, \"\");\n  val = parseFloat(val);\n\n  if (!isNaN(val)) {\n    return val;\n  }\n}","map":{"version":3,"sources":["../lib/track.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport inherit from \"inherits\";\nimport { Facade } from \"./facade\";\nimport { Identify } from \"./identify\";\nimport isEmail from \"./is-email\";\nimport get from \"obj-case\";\n\n/**\n * Initialize a new `Track` facade with a `dictionary` of arguments.\n *\n * @param {Object} dictionary - The object to wrap.\n * @param {string} [dictionary.event] - The name of the event being tracked.\n * @param {string} [dictionary.userId] - The ID of the user being tracked.\n * @param {string} [dictionary.anonymousId] - The anonymous ID of the user.\n * @param {string} [dictionary.properties] - Properties of the track event.\n * @param {Object} opts - Options about what kind of Facade to create.\n *\n * @augments Facade\n */\nexport function Track(dictionary, opts) {\n  Facade.call(this, dictionary, opts);\n}\n\ninherit(Track, Facade);\n\nlet t = Track.prototype;\n\n/**\n * Return the type of facade this is. This will always return `\"track\"`.\n *\n * @return {string}\n */\nt.action = function () {\n  return \"track\";\n};\n\n/**\n * An alias for {@link Track#action}.\n *\n * @function\n * @return {string}\n */\nt.type = t.action;\n\n/**\n * Get the event name from `event`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.event = Facade.field(\"event\");\n\n/**\n * Get the event value, usually the monetary value, from `properties.value`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.value = Facade.proxy(\"properties.value\");\n\n/**\n * Get the event cateogry from `properties.category`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.category = Facade.proxy(\"properties.category\");\n\n/**\n * Get the event ID from `properties.id`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.id = Facade.proxy(\"properties.id\");\n\n/**\n * Get the product ID from `properties.productId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.productId = function () {\n  return (\n    this.proxy(\"properties.product_id\") || this.proxy(\"properties.productId\")\n  );\n};\n\n/**\n * Get the promotion ID from `properties.promotionId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.promotionId = function () {\n  return (\n    this.proxy(\"properties.promotion_id\") ||\n    this.proxy(\"properties.promotionId\")\n  );\n};\n\n/**\n * Get the cart ID from `properties.cartId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.cartId = function () {\n  return this.proxy(\"properties.cart_id\") || this.proxy(\"properties.cartId\");\n};\n\n/**\n * Get the checkout ID from `properties.checkoutId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.checkoutId = function () {\n  return (\n    this.proxy(\"properties.checkout_id\") || this.proxy(\"properties.checkoutId\")\n  );\n};\n\n/**\n * Get the payment ID from `properties.paymentId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.paymentId = function () {\n  return (\n    this.proxy(\"properties.payment_id\") || this.proxy(\"properties.paymentId\")\n  );\n};\n\n/**\n * Get the coupon ID from `properties.couponId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.couponId = function () {\n  return (\n    this.proxy(\"properties.coupon_id\") || this.proxy(\"properties.couponId\")\n  );\n};\n\n/**\n * Get the wishlist ID from `properties.wishlistId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.wishlistId = function () {\n  return (\n    this.proxy(\"properties.wishlist_id\") || this.proxy(\"properties.wishlistId\")\n  );\n};\n\n/**\n * Get the review ID from `properties.reviewId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.reviewId = function () {\n  return (\n    this.proxy(\"properties.review_id\") || this.proxy(\"properties.reviewId\")\n  );\n};\n\n/**\n * Get the order ID from `properties.id` or `properties.orderId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.orderId = function () {\n  // doesn't follow above convention since this fallback order was how it used to be\n  return (\n    this.proxy(\"properties.id\") ||\n    this.proxy(\"properties.order_id\") ||\n    this.proxy(\"properties.orderId\")\n  );\n};\n\n/**\n * Get the SKU from `properties.sku`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.sku = Facade.proxy(\"properties.sku\");\n\n/**\n * Get the amount of tax for this purchase from `properties.tax`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.tax = Facade.proxy(\"properties.tax\");\n\n/**\n * Get the name of this event from `properties.name`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.name = Facade.proxy(\"properties.name\");\n\n/**\n * Get the price of this purchase from `properties.price`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.price = Facade.proxy(\"properties.price\");\n\n/**\n * Get the total for this purchase from `properties.total`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.total = Facade.proxy(\"properties.total\");\n\n/**\n * Whether this is a repeat purchase from `properties.repeat`.\n *\n * This *should* be a boolean, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {boolean}\n */\nt.repeat = Facade.proxy(\"properties.repeat\");\n\n/**\n * Get the coupon for this purchase from `properties.coupon`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.coupon = Facade.proxy(\"properties.coupon\");\n\n/**\n * Get the shipping for this purchase from `properties.shipping`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.shipping = Facade.proxy(\"properties.shipping\");\n\n/**\n * Get the discount for this purchase from `properties.discount`.\n *\n * This *should* be a number, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {number}\n */\nt.discount = Facade.proxy(\"properties.discount\");\n\n/**\n * Get the shipping method for this purchase from `properties.shippingMethod`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.shippingMethod = function () {\n  return (\n    this.proxy(\"properties.shipping_method\") ||\n    this.proxy(\"properties.shippingMethod\")\n  );\n};\n\n/**\n * Get the payment method for this purchase from `properties.paymentMethod`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.paymentMethod = function () {\n  return (\n    this.proxy(\"properties.payment_method\") ||\n    this.proxy(\"properties.paymentMethod\")\n  );\n};\n\n/**\n * Get a description for this event from `properties.description`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.description = Facade.proxy(\"properties.description\");\n\n/**\n * Get a plan, as in the plan the user is on, for this event from\n * `properties.plan`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string}\n */\nt.plan = Facade.proxy(\"properties.plan\");\n\n/**\n * Get the subtotal for this purchase from `properties.subtotal`.\n *\n * If `properties.subtotal` isn't available, then fall back to computing the\n * total from `properties.total` or `properties.revenue`, and then subtracting\n * tax, shipping, and discounts.\n *\n * If neither subtotal, total, nor revenue are available, then return 0.\n *\n * @return {number}\n */\nt.subtotal = function () {\n  let subtotal = get(this.properties(), \"subtotal\");\n  let total = this.total() || this.revenue();\n\n  if (subtotal) return subtotal;\n  if (!total) return 0;\n\n  if (this.total()) {\n    let n = this.tax();\n    if (n) total -= n;\n    n = this.shipping();\n    if (n) total -= n;\n    n = this.discount();\n    if (n) total += n;\n  }\n\n  return total;\n};\n\n/**\n * Get the products for this event from `properties.products` if it's an\n * array, falling back to an empty array.\n *\n * @return {Array}\n */\nt.products = function () {\n  let props = this.properties();\n  let products = get(props, \"products\");\n  if (Array.isArray(products)) {\n    return products.filter(item => item !== null)\n  }\n  return [];\n};\n\n/**\n * Get the quantity for this event from `properties.quantity`, falling back to\n * a quantity of one.\n *\n * @return {number}\n */\nt.quantity = function () {\n  let props = this.obj.properties || {};\n  return props.quantity || 1;\n};\n\n/**\n * Get the currency for this event from `properties.currency`, falling back to\n * \"USD\".\n *\n * @return {string}\n */\nt.currency = function () {\n  let props = this.obj.properties || {};\n  return props.currency || \"USD\";\n};\n\n/**\n * Get the referrer for this event from `context.referrer.url`,\n * `context.page.referrer`, or `properties.referrer`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string}\n */\nt.referrer = function () {\n  // TODO re-examine whether this function is necessary\n  return (\n    this.proxy(\"context.referrer.url\") ||\n    this.proxy(\"context.page.referrer\") ||\n    this.proxy(\"properties.referrer\")\n  );\n};\n\n/**\n * Get the query for this event from `options.query`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @function\n * @return {string|object}\n */\nt.query = Facade.proxy(\"options.query\");\n\n/**\n * Get the page's properties. This is identical to how {@link Facade#traits}\n * works, except it looks at `properties.*` instead of `options.traits.*`.\n *\n * Properties are gotten from `properties`.\n *\n * The parameter `aliases` is meant to transform keys in `properties` into new\n * keys. Each alias like `{ \"xxx\": \"yyy\" }` will take whatever is at `xxx` in\n * the traits, and move it to `yyy`. If `xxx` is a method of this facade, it'll\n * be called as a function instead of treated as a key into the traits.\n *\n * @example\n * let obj = { properties: { foo: \"bar\" }, anonymousId: \"xxx\" }\n * let track = new Track(obj)\n *\n * track.traits() // { \"foo\": \"bar\" }\n * track.traits({ \"foo\": \"asdf\" }) // { \"asdf\": \"bar\" }\n * track.traits({ \"sessionId\": \"rofl\" }) // { \"rofl\": \"xxx\" }\n *\n * @param {Object} aliases - A mapping from keys to the new keys they should be\n * transformed to.\n * @return {Object}\n */\nt.properties = function (aliases) {\n  let ret = this.field(\"properties\") || {};\n  aliases = aliases || {};\n\n  for (let alias in aliases) {\n    let value =\n      this[alias] == null ? this.proxy(\"properties.\" + alias) : this[alias]();\n    if (value == null) continue;\n    ret[aliases[alias]] = value;\n    delete ret[alias];\n  }\n\n  return ret;\n};\n\n/**\n * Get the username of the user for this event from `traits.username`,\n * `properties.username`, `userId`, or `anonymousId`.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string|undefined}\n */\nt.username = function () {\n  return (\n    this.proxy(\"traits.username\") ||\n    this.proxy(\"properties.username\") ||\n    this.userId() ||\n    this.sessionId()\n  );\n};\n\n/**\n * Get the email of the user for this event from `trais.email`,\n * `properties.email`, or `options.traits.email`, falling back to `userId` if\n * it looks like a valid email.\n *\n * This *should* be a string, but may not be if the client isn't adhering to\n * the spec.\n *\n * @return {string|undefined}\n */\nt.email = function () {\n  let email =\n    this.proxy(\"traits.email\") ||\n    this.proxy(\"properties.email\") ||\n    this.proxy(\"options.traits.email\");\n  if (email) return email;\n\n  let userId = this.userId();\n  if (isEmail(userId)) return userId;\n};\n\n/**\n * Get the revenue for this event.\n *\n * If this is an \"Order Completed\" event, this will be the `properties.total`\n * falling back to the `properties.revenue`. For all other events, this is\n * simply taken from `properties.revenue`.\n *\n * If there are dollar signs in these properties, they will be removed. The\n * result will be parsed into a number.\n *\n * @return {number}\n */\nt.revenue = function () {\n  let revenue = this.proxy(\"properties.revenue\");\n  let event = this.event();\n  let orderCompletedRegExp = /^[ _]?completed[ _]?order[ _]?|^[ _]?order[ _]?completed[ _]?$/i;\n\n  // it's always revenue, unless it's called during an order completion.\n  if (!revenue && event && event.match(orderCompletedRegExp)) {\n    revenue = this.proxy(\"properties.total\");\n  }\n\n  return currency(revenue);\n};\n\n/**\n * Get the revenue for this event in \"cents\" -- in other words, multiply the\n * {@link Track#revenue} by 100, or return 0 if there isn't a numerical revenue\n * for this event.\n *\n * @return {number}\n */\nt.cents = function () {\n  let revenue = this.revenue();\n  return typeof revenue !== \"number\" ? this.value() || 0 : revenue * 100;\n};\n\n/**\n * Convert this event into an {@link Identify} facade.\n *\n * This works by taking this event's underlying object and creating an Identify\n * from it. This event's traits, taken from `options.traits`, will be used as\n * the Identify's traits.\n *\n * @return {Identify}\n */\nt.identify = function () {\n  // TODO: remove me.\n  let json = this.json();\n  json.traits = this.traits();\n  return new Identify(json, this.opts);\n};\n\n/**\n * Get float from currency value.\n *\n * @ignore\n * @param {*} val\n * @return {number}\n */\nfunction currency(val) {\n  if (!val) return;\n  if (typeof val === \"number\") {\n    return val;\n  }\n  if (typeof val !== \"string\") {\n    return;\n  }\n\n  val = val.replace(/\\$/g, \"\");\n  val = parseFloat(val);\n\n  if (!isNaN(val)) {\n    return val;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}