{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { Context, ContextCancelation } from '../context';\n\nfunction tryOperation(op) {\n  return __awaiter(this, void 0, void 0, function () {\n    var err_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n\n          return [4\n          /*yield*/\n          , op()];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n\n        case 2:\n          err_1 = _a.sent();\n          return [2\n          /*return*/\n          , Promise.reject(err_1)];\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexport function attempt(ctx, plugin) {\n  ctx.log('debug', 'plugin', {\n    plugin: plugin.name\n  });\n  var start = new Date().getTime();\n  var hook = plugin[ctx.event.type];\n\n  if (hook === undefined) {\n    return Promise.resolve(ctx);\n  }\n\n  var newCtx = tryOperation(function () {\n    return hook.apply(plugin, [ctx]);\n  }).then(function (ctx) {\n    var done = new Date().getTime() - start;\n    ctx.stats.gauge('plugin_time', done, [\"plugin:\".concat(plugin.name)]);\n    return ctx;\n  }).catch(function (err) {\n    if (err instanceof ContextCancelation && err.type === 'middleware_cancellation') {\n      throw err;\n    }\n\n    if (err instanceof ContextCancelation) {\n      ctx.log('warn', err.type, {\n        plugin: plugin.name,\n        error: err\n      });\n      return err;\n    }\n\n    ctx.log('error', 'plugin Error', {\n      plugin: plugin.name,\n      error: err\n    });\n    ctx.stats.increment('plugin_error', 1, [\"plugin:\".concat(plugin.name)]);\n    return err;\n  });\n  return newCtx;\n}\nexport function ensure(ctx, plugin) {\n  return attempt(ctx, plugin).then(function (newContext) {\n    if (newContext instanceof Context) {\n      return newContext;\n    }\n\n    ctx.log('debug', 'Context canceled');\n    ctx.stats.increment('context_canceled');\n    ctx.cancel(newContext);\n  });\n}","map":{"version":3,"sources":["../../../../src/core/queue/delivery.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,EAAkB,kBAAlB,QAA4C,YAA5C;;AAGA,SAAe,YAAf,CACE,EADF,EACsC;;;;;;;;UAG3B,OAAA,CAAA;UAAA;UAAA,EAAM,EAAE,EAAR,CAAA;;;UAAP,OAAA,CAAA;UAAA;UAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;UAEA,OAAA,CAAA;UAAA;UAAA,EAAO,OAAO,CAAC,MAAR,CAAe,KAAf,CAAP,CAAA;;;;;;;;;AAEH;;AAED,OAAM,SAAU,OAAV,CACJ,GADI,EAEJ,MAFI,EAEU;EAEd,GAAG,CAAC,GAAJ,CAAQ,OAAR,EAAiB,QAAjB,EAA2B;IAAE,MAAM,EAAE,MAAM,CAAC;EAAjB,CAA3B;EACA,IAAM,KAAK,GAAG,IAAI,IAAJ,GAAW,OAAX,EAAd;EAEA,IAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,KAAJ,CAAU,IAAX,CAAnB;;EACA,IAAI,IAAI,KAAK,SAAb,EAAwB;IACtB,OAAO,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAP;EACD;;EAED,IAAM,MAAM,GAAG,YAAY,CAAC,YAAA;IAAM,OAAA,IAAI,CAAC,KAAL,CAAW,MAAX,EAAmB,CAAnB,GAAmB,CAAnB,CAAA;EAAyB,CAAhC,CAAZ,CACZ,IADY,CACP,UAAC,GAAD,EAAI;IACR,IAAM,IAAI,GAAG,IAAI,IAAJ,GAAW,OAAX,KAAuB,KAApC;IACA,GAAG,CAAC,KAAJ,CAAU,KAAV,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC,CAAC,UAAA,MAAA,CAAU,MAAM,CAAC,IAAjB,CAAD,CAArC;IACA,OAAO,GAAP;EACD,CALY,EAMZ,KANY,CAMN,UAAC,GAAD,EAAI;IACT,IACE,GAAG,YAAY,kBAAf,IACA,GAAG,CAAC,IAAJ,KAAa,yBAFf,EAGE;MACA,MAAM,GAAN;IACD;;IAED,IAAI,GAAG,YAAY,kBAAnB,EAAuC;MACrC,GAAG,CAAC,GAAJ,CAAQ,MAAR,EAAgB,GAAG,CAAC,IAApB,EAA0B;QACxB,MAAM,EAAE,MAAM,CAAC,IADS;QAExB,KAAK,EAAE;MAFiB,CAA1B;MAKA,OAAO,GAAP;IACD;;IAED,GAAG,CAAC,GAAJ,CAAQ,OAAR,EAAiB,cAAjB,EAAiC;MAC/B,MAAM,EAAE,MAAM,CAAC,IADgB;MAE/B,KAAK,EAAE;IAFwB,CAAjC;IAKA,GAAG,CAAC,KAAJ,CAAU,SAAV,CAAoB,cAApB,EAAoC,CAApC,EAAuC,CAAC,UAAA,MAAA,CAAU,MAAM,CAAC,IAAjB,CAAD,CAAvC;IACA,OAAO,GAAP;EACD,CA9BY,CAAf;EAgCA,OAAO,MAAP;AACD;AAED,OAAM,SAAU,MAAV,CACJ,GADI,EAEJ,MAFI,EAEU;EAEd,OAAO,OAAO,CAAC,GAAD,EAAM,MAAN,CAAP,CAAqB,IAArB,CAA0B,UAAC,UAAD,EAAW;IAC1C,IAAI,UAAU,YAAY,OAA1B,EAAmC;MACjC,OAAO,UAAP;IACD;;IAED,GAAG,CAAC,GAAJ,CAAQ,OAAR,EAAiB,kBAAjB;IACA,GAAG,CAAC,KAAJ,CAAU,SAAV,CAAoB,kBAApB;IACA,GAAG,CAAC,MAAJ,CAAW,UAAX;EACD,CARM,CAAP;AASD","sourceRoot":"","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { Context, ContextCancelation } from '../context';\nfunction tryOperation(op) {\n    return __awaiter(this, void 0, void 0, function () {\n        var err_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, op()];\n                case 1: return [2 /*return*/, _a.sent()];\n                case 2:\n                    err_1 = _a.sent();\n                    return [2 /*return*/, Promise.reject(err_1)];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function attempt(ctx, plugin) {\n    ctx.log('debug', 'plugin', { plugin: plugin.name });\n    var start = new Date().getTime();\n    var hook = plugin[ctx.event.type];\n    if (hook === undefined) {\n        return Promise.resolve(ctx);\n    }\n    var newCtx = tryOperation(function () { return hook.apply(plugin, [ctx]); })\n        .then(function (ctx) {\n        var done = new Date().getTime() - start;\n        ctx.stats.gauge('plugin_time', done, [\"plugin:\".concat(plugin.name)]);\n        return ctx;\n    })\n        .catch(function (err) {\n        if (err instanceof ContextCancelation &&\n            err.type === 'middleware_cancellation') {\n            throw err;\n        }\n        if (err instanceof ContextCancelation) {\n            ctx.log('warn', err.type, {\n                plugin: plugin.name,\n                error: err,\n            });\n            return err;\n        }\n        ctx.log('error', 'plugin Error', {\n            plugin: plugin.name,\n            error: err,\n        });\n        ctx.stats.increment('plugin_error', 1, [\"plugin:\".concat(plugin.name)]);\n        return err;\n    });\n    return newCtx;\n}\nexport function ensure(ctx, plugin) {\n    return attempt(ctx, plugin).then(function (newContext) {\n        if (newContext instanceof Context) {\n            return newContext;\n        }\n        ctx.log('debug', 'Context canceled');\n        ctx.stats.increment('context_canceled');\n        ctx.cancel(newContext);\n    });\n}\n//# sourceMappingURL=delivery.js.map"]},"metadata":{},"sourceType":"module"}