{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\copiaswaps-client\\\\swaps-client\\\\src\\\\components\\\\Tooltip\\\\TooltipRow.js\";\nimport * as Styled from './Tooltip.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TooltipRow(_ref) {\n  let {\n    label,\n    value,\n    showDollar = true\n  } = _ref;\n  const valueIsArray = Array.isArray(value);\n  return /*#__PURE__*/_jsxDEV(Styled.TooltipRow, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"label\",\n      children: [label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), valueIsArray ? /*#__PURE__*/_jsxDEV(Styled.TooltipRowValues, {\n      children: value.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: v\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Styled.TooltipRowValue, {\n      children: [showDollar && \"$\", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = TooltipRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TooltipRow\");","map":{"version":3,"names":["Styled","TooltipRow","label","value","showDollar","valueIsArray","Array","isArray","map","v","i"],"sources":["C:/Users/rober/Documents/copiaswaps-client/swaps-client/src/components/Tooltip/TooltipRow.js"],"sourcesContent":["import * as Styled from './Tooltip.styles';\n\nexport default function TooltipRow({ label, value, showDollar = true }) {\n  const valueIsArray = Array.isArray(value);\n\n  return (\n    <Styled.TooltipRow>\n      <span className=\"label\">{label}:</span>\n      {valueIsArray ?\n        <Styled.TooltipRowValues>\n          {value.map((v, i) => (\n            <li key={i}>{v}</li>\n          ))}\n        </Styled.TooltipRowValues>\n        : <Styled.TooltipRowValue>\n          {showDollar && \"$\"}\n          {value}\n        </Styled.TooltipRowValue>\n      }\n    </Styled.TooltipRow>\n  );\n}\n"],"mappings":";AAAA,OAAO,KAAKA,MAAZ,MAAwB,kBAAxB;;AAEA,eAAe,SAASC,UAAT,OAAyD;EAAA,IAArC;IAAEC,KAAF;IAASC,KAAT;IAAgBC,UAAU,GAAG;EAA7B,CAAqC;EACtE,MAAMC,YAAY,GAAGC,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAArB;EAEA,oBACE,QAAC,MAAD,CAAQ,UAAR;IAAA,wBACE;MAAM,SAAS,EAAC,OAAhB;MAAA,WAAyBD,KAAzB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGG,YAAY,gBACX,QAAC,MAAD,CAAQ,gBAAR;MAAA,UACGF,KAAK,CAACK,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACT;QAAA,UAAaD;MAAb,GAASC,CAAT;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADW,gBAMT,QAAC,MAAD,CAAQ,eAAR;MAAA,WACCN,UAAU,IAAI,GADf,EAECD,KAFD;IAAA;MAAA;MAAA;MAAA;IAAA,QARN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;KAnBuBF,U"},"metadata":{},"sourceType":"module"}