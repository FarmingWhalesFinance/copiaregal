{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\swaps-client\\\\src\\\\components\\\\RewardsRoundSelect\\\\RewardsRoundSelect.js\";\nimport React from \"react\";\nimport { Menu } from \"@headlessui/react\";\nimport * as Styles from \"./RewardsRoundSelect.styles\";\nimport { FaChevronDown } from \"react-icons/fa\";\nimport cx from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RewardsRoundSelect(_ref) {\n  let {\n    timeTillRewards,\n    allRoundsRewardsData,\n    setSelectedRound,\n    trackAction,\n    rewardsMessage\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Styles.RewardsRoundSelect, {\n    children: [!!allRoundsRewardsData && /*#__PURE__*/_jsxDEV(RoundDropdown, {\n      allRoundsRewardsData: allRoundsRewardsData,\n      setSelectedRound: setSelectedRound,\n      rewardsMessage: rewardsMessage,\n      trackAction: trackAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), timeTillRewards && /*#__PURE__*/_jsxDEV(Styles.RewardsRoundNextRewards, {\n      children: [\"Next rewards in \", /*#__PURE__*/_jsxDEV(Styles.RewardsRoundCountdown, {\n        children: timeTillRewards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = RewardsRoundSelect;\nexport function RoundDropdown(props) {\n  const {\n    allRoundsRewardsData,\n    setSelectedRound,\n    rewardsMessage,\n    trackAction\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Styles.RewardsRoundSelectMenu, {\n    children: /*#__PURE__*/_jsxDEV(Menu, {\n      children: _ref2 => {\n        let {\n          open\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Menu.Button, {\n            as: \"div\",\n            children: /*#__PURE__*/_jsxDEV(Styles.RoundSelectButton, {\n              className: cx(\"App-cta transparent\", {\n                \"App-cta-selected\": open\n              }),\n              onClick: () => trackAction && trackAction(\"Button clicked\", {\n                buttonName: \"Rewards round dropdown\"\n              }),\n              children: [rewardsMessage, /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hide-overflow\",\n            children: /*#__PURE__*/_jsxDEV(Menu.Items, {\n              as: \"div\",\n              className: \"menu-items\",\n              children: allRoundsRewardsData && allRoundsRewardsData.sort((a, b) => b.round - a.round).map((rewardRound, index) => /*#__PURE__*/_jsxDEV(Menu.Item, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"menu-item large\",\n                  onClick: () => {\n                    let selectedRound = parseFloat(rewardRound === null || rewardRound === void 0 ? void 0 : rewardRound.round);\n\n                    if (index === 0) {\n                      selectedRound = \"latest\";\n                    }\n\n                    setSelectedRound(selectedRound);\n                    trackAction && trackAction(\"Button clicked\", {\n                      buttonName: \"Select rewards round\",\n                      weekNo: selectedRound\n                    });\n                  },\n                  children: rewardRound !== null && rewardRound !== void 0 && rewardRound.customRoundText ? rewardRound.customRoundText : `Round ${parseFloat(rewardRound === null || rewardRound === void 0 ? void 0 : rewardRound.round) + 1}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c2 = RoundDropdown;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RewardsRoundSelect\");\n$RefreshReg$(_c2, \"RoundDropdown\");","map":{"version":3,"names":["React","Menu","Styles","FaChevronDown","cx","RewardsRoundSelect","timeTillRewards","allRoundsRewardsData","setSelectedRound","trackAction","rewardsMessage","RoundDropdown","props","open","buttonName","sort","a","b","round","map","rewardRound","index","selectedRound","parseFloat","weekNo","customRoundText"],"sources":["C:/Users/rober/Documents/swaps-client/src/components/RewardsRoundSelect/RewardsRoundSelect.js"],"sourcesContent":["import React from \"react\";\nimport { Menu } from \"@headlessui/react\";\nimport * as Styles from \"./RewardsRoundSelect.styles\";\nimport { FaChevronDown } from \"react-icons/fa\";\nimport cx from \"classnames\";\n\nexport default function RewardsRoundSelect({\n  timeTillRewards,\n  allRoundsRewardsData,\n  setSelectedRound,\n  trackAction,\n  rewardsMessage,\n}) {\n  return (\n    <Styles.RewardsRoundSelect>\n      {!!allRoundsRewardsData && (\n        <RoundDropdown\n          allRoundsRewardsData={allRoundsRewardsData}\n          setSelectedRound={setSelectedRound}\n          rewardsMessage={rewardsMessage}\n          trackAction={trackAction}\n        />\n      )}\n      {timeTillRewards && (\n        <Styles.RewardsRoundNextRewards>\n          Next rewards in <Styles.RewardsRoundCountdown>{timeTillRewards}</Styles.RewardsRoundCountdown>\n        </Styles.RewardsRoundNextRewards>\n      )}\n    </Styles.RewardsRoundSelect>\n  );\n}\n\nexport function RoundDropdown(props) {\n  const { allRoundsRewardsData, setSelectedRound, rewardsMessage, trackAction } = props;\n\n  return (\n    <Styles.RewardsRoundSelectMenu>\n      <Menu>\n        {({ open }) => (\n          <>\n            <Menu.Button as=\"div\">\n              <Styles.RoundSelectButton\n                className={cx(\"App-cta transparent\", {\n                  \"App-cta-selected\": open,\n                })}\n                onClick={() =>\n                  trackAction &&\n                  trackAction(\"Button clicked\", {\n                    buttonName: \"Rewards round dropdown\",\n                  })\n                }\n              >\n                {rewardsMessage}\n                <FaChevronDown />\n              </Styles.RoundSelectButton>\n            </Menu.Button>\n            <div className=\"hide-overflow\">\n              <Menu.Items as=\"div\" className=\"menu-items\">\n                {allRoundsRewardsData &&\n                  allRoundsRewardsData\n                    .sort((a, b) => b.round - a.round)\n                    .map((rewardRound, index) => (\n                      <Menu.Item>\n                        <div\n                          className=\"menu-item large\"\n                          onClick={() => {\n                            let selectedRound = parseFloat(rewardRound?.round);\n                            if (index === 0) {\n                              selectedRound = \"latest\";\n                            }\n                            setSelectedRound(selectedRound);\n                            trackAction &&\n                              trackAction(\"Button clicked\", {\n                                buttonName: \"Select rewards round\",\n                                weekNo: selectedRound,\n                              });\n                          }}\n                        >\n                          {rewardRound?.customRoundText\n                            ? rewardRound.customRoundText\n                            : `Round ${parseFloat(rewardRound?.round) + 1}`}\n                        </div>\n                      </Menu.Item>\n                    ))}\n              </Menu.Items>\n            </div>\n          </>\n        )}\n      </Menu>\n    </Styles.RewardsRoundSelectMenu>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}