{"ast":null,"code":"/**\n * Tries to gets the unencoded version of an encoded component of a\n * Uniform Resource Identifier (URI). If input string is malformed,\n * returns it back as-is.\n *\n * Note: All occurences of the `+` character become ` ` (spaces).\n **/\nexport function gracefulDecodeURIComponent(encodedURIComponent) {\n  try {\n    return decodeURIComponent(encodedURIComponent.replace(/\\+/g, ' '));\n  } catch (_a) {\n    return encodedURIComponent;\n  }\n}","map":{"version":3,"sources":["../../../../src/core/query-string/gracefulDecodeURIComponent.ts"],"names":[],"mappings":"AAAA;;;;;;AAMI;AACJ,OAAM,SAAU,0BAAV,CACJ,mBADI,EACuB;EAE3B,IAAI;IACF,OAAO,kBAAkB,CAAC,mBAAmB,CAAC,OAApB,CAA4B,KAA5B,EAAmC,GAAnC,CAAD,CAAzB;EACD,CAFD,CAEE,OAAA,EAAA,EAAM;IACN,OAAO,mBAAP;EACD;AACF","sourceRoot":"","sourcesContent":["/**\n * Tries to gets the unencoded version of an encoded component of a\n * Uniform Resource Identifier (URI). If input string is malformed,\n * returns it back as-is.\n *\n * Note: All occurences of the `+` character become ` ` (spaces).\n **/\nexport function gracefulDecodeURIComponent(encodedURIComponent) {\n    try {\n        return decodeURIComponent(encodedURIComponent.replace(/\\+/g, ' '));\n    }\n    catch (_a) {\n        return encodedURIComponent;\n    }\n}\n//# sourceMappingURL=gracefulDecodeURIComponent.js.map"]},"metadata":{},"sourceType":"module"}