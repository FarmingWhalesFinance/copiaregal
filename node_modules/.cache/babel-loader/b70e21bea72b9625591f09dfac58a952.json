{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isPlanEventEnabled } from '../../lib/is-plan-event-enabled';\n\nfunction disabledActionDestinations(plan, settings) {\n  var _a, _b;\n\n  if (!plan || !Object.keys(plan)) {\n    return {};\n  }\n\n  var disabledIntegrations = Object.keys(plan.integrations).filter(function (i) {\n    return plan.integrations[i] === false;\n  }); // This accounts for cases like Fullstory, where the settings.integrations\n  // contains a \"Fullstory\" object but settings.remotePlugins contains \"Fullstory (Actions)\"\n\n  var disabledRemotePlugins = [];\n  ((_a = settings.remotePlugins) !== null && _a !== void 0 ? _a : []).forEach(function (p) {\n    disabledIntegrations.forEach(function (int) {\n      if (p.name.includes(int) || int.includes(p.name)) {\n        disabledRemotePlugins.push(p.name);\n      }\n    });\n  });\n  return ((_b = settings.remotePlugins) !== null && _b !== void 0 ? _b : []).reduce(function (acc, p) {\n    if (p.settings['subscriptions']) {\n      if (disabledRemotePlugins.includes(p.name)) {\n        // @ts-expect-error element implicitly has an 'any' type because p.settings is a JSONObject\n        p.settings['subscriptions'].forEach( // @ts-expect-error parameter 'sub' implicitly has an 'any' type\n        function (sub) {\n          return acc[\"\".concat(p.name, \" \").concat(sub.partnerAction)] = false;\n        });\n      }\n    }\n\n    return acc;\n  }, {});\n}\n\nexport function schemaFilter(track, settings) {\n  function filter(ctx) {\n    var plan = track;\n    var ev = ctx.event.event;\n\n    if (plan && ev) {\n      var planEvent = plan[ev];\n\n      if (!isPlanEventEnabled(plan, planEvent)) {\n        ctx.updateEvent('integrations', __assign(__assign({}, ctx.event.integrations), {\n          All: false,\n          'Segment.io': true\n        }));\n        return ctx;\n      } else {\n        var disabledActions = disabledActionDestinations(planEvent, settings);\n        ctx.updateEvent('integrations', __assign(__assign(__assign({}, ctx.event.integrations), planEvent === null || planEvent === void 0 ? void 0 : planEvent.integrations), disabledActions));\n      }\n    }\n\n    return ctx;\n  }\n\n  return {\n    name: 'Schema Filter',\n    version: '0.1.0',\n    isLoaded: function () {\n      return true;\n    },\n    load: function () {\n      return Promise.resolve();\n    },\n    type: 'before',\n    page: filter,\n    alias: filter,\n    track: filter,\n    identify: filter,\n    group: filter\n  };\n}","map":{"version":3,"sources":["../../../../src/plugins/schema-filter/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { isPlanEventEnabled } from '../../lib/is-plan-event-enabled';\nfunction disabledActionDestinations(plan, settings) {\n    var _a, _b;\n    if (!plan || !Object.keys(plan)) {\n        return {};\n    }\n    var disabledIntegrations = Object.keys(plan.integrations).filter(function (i) { return plan.integrations[i] === false; });\n    // This accounts for cases like Fullstory, where the settings.integrations\n    // contains a \"Fullstory\" object but settings.remotePlugins contains \"Fullstory (Actions)\"\n    var disabledRemotePlugins = [];\n    ((_a = settings.remotePlugins) !== null && _a !== void 0 ? _a : []).forEach(function (p) {\n        disabledIntegrations.forEach(function (int) {\n            if (p.name.includes(int) || int.includes(p.name)) {\n                disabledRemotePlugins.push(p.name);\n            }\n        });\n    });\n    return ((_b = settings.remotePlugins) !== null && _b !== void 0 ? _b : []).reduce(function (acc, p) {\n        if (p.settings['subscriptions']) {\n            if (disabledRemotePlugins.includes(p.name)) {\n                // @ts-expect-error element implicitly has an 'any' type because p.settings is a JSONObject\n                p.settings['subscriptions'].forEach(\n                // @ts-expect-error parameter 'sub' implicitly has an 'any' type\n                function (sub) { return (acc[\"\".concat(p.name, \" \").concat(sub.partnerAction)] = false); });\n            }\n        }\n        return acc;\n    }, {});\n}\nexport function schemaFilter(track, settings) {\n    function filter(ctx) {\n        var plan = track;\n        var ev = ctx.event.event;\n        if (plan && ev) {\n            var planEvent = plan[ev];\n            if (!isPlanEventEnabled(plan, planEvent)) {\n                ctx.updateEvent('integrations', __assign(__assign({}, ctx.event.integrations), { All: false, 'Segment.io': true }));\n                return ctx;\n            }\n            else {\n                var disabledActions = disabledActionDestinations(planEvent, settings);\n                ctx.updateEvent('integrations', __assign(__assign(__assign({}, ctx.event.integrations), planEvent === null || planEvent === void 0 ? void 0 : planEvent.integrations), disabledActions));\n            }\n        }\n        return ctx;\n    }\n    return {\n        name: 'Schema Filter',\n        version: '0.1.0',\n        isLoaded: function () { return true; },\n        load: function () { return Promise.resolve(); },\n        type: 'before',\n        page: filter,\n        alias: filter,\n        track: filter,\n        identify: filter,\n        group: filter,\n    };\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}