{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { ContextCancelation } from '../../core/context';\nimport { asPromise } from '../../lib/as-promise';\nimport { toFacade } from '../../lib/to-facade';\nexport function applyDestinationMiddleware(destination, evt, middleware) {\n  return __awaiter(this, void 0, void 0, function () {\n    function applyMiddleware(event, fn) {\n      return __awaiter(this, void 0, void 0, function () {\n        var nextCalled, returnedEvent;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              nextCalled = false;\n              returnedEvent = null;\n              return [4\n              /*yield*/\n              , asPromise(fn({\n                payload: toFacade(event, {\n                  clone: true,\n                  traverse: false\n                }),\n                integration: destination,\n                next: function (evt) {\n                  nextCalled = true;\n\n                  if (evt === null) {\n                    returnedEvent = null;\n                  }\n\n                  if (evt) {\n                    returnedEvent = evt.obj;\n                  }\n                }\n              }))];\n\n            case 1:\n              _b.sent();\n\n              if (!nextCalled && returnedEvent !== null) {\n                returnedEvent = returnedEvent;\n                returnedEvent.integrations = __assign(__assign({}, event.integrations), (_a = {}, _a[destination] = false, _a));\n              }\n\n              return [2\n              /*return*/\n              , returnedEvent];\n          }\n        });\n      });\n    }\n\n    var _i, middleware_1, md, result;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _i = 0, middleware_1 = middleware;\n          _a.label = 1;\n\n        case 1:\n          if (!(_i < middleware_1.length)) return [3\n          /*break*/\n          , 4];\n          md = middleware_1[_i];\n          return [4\n          /*yield*/\n          , applyMiddleware(evt, md)];\n\n        case 2:\n          result = _a.sent();\n\n          if (result === null) {\n            return [2\n            /*return*/\n            , null];\n          }\n\n          evt = result;\n          _a.label = 3;\n\n        case 3:\n          _i++;\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          return [2\n          /*return*/\n          , evt];\n      }\n    });\n  });\n}\nexport function sourceMiddlewarePlugin(fn, integrations) {\n  function apply(ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var nextCalled;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            nextCalled = false;\n            return [4\n            /*yield*/\n            , asPromise(fn({\n              payload: toFacade(ctx.event, {\n                clone: true,\n                traverse: false\n              }),\n              integrations: integrations !== null && integrations !== void 0 ? integrations : {},\n              next: function (evt) {\n                nextCalled = true;\n\n                if (evt) {\n                  ctx.event = evt.obj;\n                }\n              }\n            }))];\n\n          case 1:\n            _a.sent();\n\n            if (!nextCalled) {\n              throw new ContextCancelation({\n                retry: false,\n                type: 'middleware_cancellation',\n                reason: 'Middleware `next` function skipped'\n              });\n            }\n\n            return [2\n            /*return*/\n            , ctx];\n        }\n      });\n    });\n  }\n\n  return {\n    name: \"Source Middleware \".concat(fn.name),\n    type: 'before',\n    version: '0.1.0',\n    isLoaded: function () {\n      return true;\n    },\n    load: function (ctx) {\n      return Promise.resolve(ctx);\n    },\n    track: apply,\n    page: apply,\n    identify: apply,\n    alias: apply,\n    group: apply\n  };\n}","map":{"version":3,"sources":["../../../../src/plugins/middleware/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { ContextCancelation } from '../../core/context';\nimport { asPromise } from '../../lib/as-promise';\nimport { toFacade } from '../../lib/to-facade';\nexport function applyDestinationMiddleware(destination, evt, middleware) {\n    return __awaiter(this, void 0, void 0, function () {\n        function applyMiddleware(event, fn) {\n            return __awaiter(this, void 0, void 0, function () {\n                var nextCalled, returnedEvent;\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            nextCalled = false;\n                            returnedEvent = null;\n                            return [4 /*yield*/, asPromise(fn({\n                                    payload: toFacade(event, {\n                                        clone: true,\n                                        traverse: false,\n                                    }),\n                                    integration: destination,\n                                    next: function (evt) {\n                                        nextCalled = true;\n                                        if (evt === null) {\n                                            returnedEvent = null;\n                                        }\n                                        if (evt) {\n                                            returnedEvent = evt.obj;\n                                        }\n                                    },\n                                }))];\n                        case 1:\n                            _b.sent();\n                            if (!nextCalled && returnedEvent !== null) {\n                                returnedEvent = returnedEvent;\n                                returnedEvent.integrations = __assign(__assign({}, event.integrations), (_a = {}, _a[destination] = false, _a));\n                            }\n                            return [2 /*return*/, returnedEvent];\n                    }\n                });\n            });\n        }\n        var _i, middleware_1, md, result;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _i = 0, middleware_1 = middleware;\n                    _a.label = 1;\n                case 1:\n                    if (!(_i < middleware_1.length)) return [3 /*break*/, 4];\n                    md = middleware_1[_i];\n                    return [4 /*yield*/, applyMiddleware(evt, md)];\n                case 2:\n                    result = _a.sent();\n                    if (result === null) {\n                        return [2 /*return*/, null];\n                    }\n                    evt = result;\n                    _a.label = 3;\n                case 3:\n                    _i++;\n                    return [3 /*break*/, 1];\n                case 4: return [2 /*return*/, evt];\n            }\n        });\n    });\n}\nexport function sourceMiddlewarePlugin(fn, integrations) {\n    function apply(ctx) {\n        return __awaiter(this, void 0, void 0, function () {\n            var nextCalled;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        nextCalled = false;\n                        return [4 /*yield*/, asPromise(fn({\n                                payload: toFacade(ctx.event, {\n                                    clone: true,\n                                    traverse: false,\n                                }),\n                                integrations: integrations !== null && integrations !== void 0 ? integrations : {},\n                                next: function (evt) {\n                                    nextCalled = true;\n                                    if (evt) {\n                                        ctx.event = evt.obj;\n                                    }\n                                },\n                            }))];\n                    case 1:\n                        _a.sent();\n                        if (!nextCalled) {\n                            throw new ContextCancelation({\n                                retry: false,\n                                type: 'middleware_cancellation',\n                                reason: 'Middleware `next` function skipped',\n                            });\n                        }\n                        return [2 /*return*/, ctx];\n                }\n            });\n        });\n    }\n    return {\n        name: \"Source Middleware \".concat(fn.name),\n        type: 'before',\n        version: '0.1.0',\n        isLoaded: function () { return true; },\n        load: function (ctx) { return Promise.resolve(ctx); },\n        track: apply,\n        page: apply,\n        identify: apply,\n        alias: apply,\n        group: apply,\n    };\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}