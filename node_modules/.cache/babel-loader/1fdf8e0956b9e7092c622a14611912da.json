{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\swaps-client\\\\src\\\\views\\\\Stake\\\\StakeV2.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport Modal from \"../../components/Modal/Modal\";\nimport Tooltip from \"../../components/Tooltip/Tooltip\";\nimport Vault from \"../../abis/Vault.json\";\nimport ReaderV2 from \"../../abis/ReaderV2.json\";\nimport Vester from \"../../abis/Vester.json\";\nimport RewardRouter from \"../../abis/RewardRouter.json\";\nimport RewardReader from \"../../abis/RewardReader.json\";\nimport Token from \"../../abis/Token.json\";\nimport MlpManager from \"../../abis/MlpManager.json\";\nimport { ethers } from \"ethers\";\nimport { helperToast, bigNumberify, fetcher, formatAmount, formatKeyAmount, formatAmountFree, getChainName, parseValue, approveTokens, useLocalStorageSerializeKey, useChainId, MLP_DECIMALS, USD_DECIMALS, ARBITRUM, PLACEHOLDER_ACCOUNT, getBalanceAndSupplyData, getDepositBalanceData, getVestingData, getStakingData, getProcessedData, getPageTitle } from \"../../Helpers\";\nimport { callContract, useMYCPrice, useStakingApr, useTotalMYCSupply } from \"../../Api\";\nimport { getConstant } from \"../../Constants\";\nimport useSWR from \"swr\";\nimport { getContract } from \"../../Addresses\";\nimport mlp40Icon from \"../../img/ic_mlp_40.svg\";\nimport myc40Icon from \"../../img/ic_myc_40.svg\";\nimport * as StakeV2Styled from \"./StakeV2Styles\";\nimport \"./StakeV2.css\";\nimport SEO from \"../../components/Common/SEO\";\nimport ClaimModal from \"./ClaimModal\";\nimport Toggle from \"../../components/Toggle/Toggle\";\nimport MlpPriceChart from \"./MlpPriceChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CompoundModal(props) {\n  _s();\n\n  const {\n    isVisible,\n    setIsVisible,\n    rewardRouterAddress,\n    active,\n    account,\n    library,\n    chainId,\n    setPendingTxns,\n    totalVesterRewards,\n    nativeTokenSymbol,\n    wrappedTokenSymbol,\n    processedData,\n    vesterAddress,\n    stakedMlpTrackerAddress,\n    esMycAddress\n  } = props;\n  const [isCompounding, setIsCompounding] = useState(false);\n  const [isDepositing, setIsDepositing] = useState(false);\n  const [shouldClaimMyc, setShouldClaimMyc] = useLocalStorageSerializeKey([chainId, \"StakeV2-compound-should-claim-myc\"], true);\n  const [shouldClaimEsMyc, setShouldClaimEsMyc] = useLocalStorageSerializeKey([chainId, \"StakeV2-compound-should-claim-esMyc\"], true);\n  const [shouldBuyMlpWithEth, setShouldBuyMlpWithEth] = useLocalStorageSerializeKey([chainId, \"StakeV2-compound-should-buy-mlp\"], true);\n  const mycAddress = getContract(chainId, \"MYC\");\n  const [isApproving, setIsApproving] = useState(false);\n  const {\n    data: tokenAllowance\n  } = useSWR(active && [active, chainId, mycAddress, \"allowance\", account, stakedMlpTrackerAddress], {\n    fetcher: fetcher(library, Token)\n  });\n  const needApproval = tokenAllowance && totalVesterRewards && totalVesterRewards.gt(tokenAllowance);\n\n  const isPrimaryEnabled = () => {\n    return !isCompounding && !isApproving && !isCompounding && !isDepositing;\n  };\n\n  const getPrimaryText = () => {\n    if (isApproving) {\n      return `Approving MYC...`;\n    }\n\n    if (needApproval) {\n      return `Approve MYC`;\n    }\n\n    if (isCompounding) {\n      return \"Compounding...\";\n    }\n\n    if (isDepositing) {\n      return \"Depositing...\";\n    }\n\n    return \"Compound\";\n  };\n\n  const onClickPrimary = () => {\n    if (needApproval) {\n      approveTokens({\n        setIsApproving,\n        library,\n        tokenAddress: mycAddress,\n        spender: stakedMlpTrackerAddress,\n        chainId\n      });\n      return;\n    }\n\n    setIsCompounding(true);\n    const contract = new ethers.Contract(rewardRouterAddress, RewardRouter.abi, library.getSigner());\n    callContract(chainId, contract, \"handleRewards\", [shouldClaimMyc, // shouldClaimMyc,\n    false, // shouldStakeMYC,\n    shouldClaimEsMyc, // shouldClaimEsMyc,\n    false, // shouldStakeEsMyc,\n    false, // shouldStakeMultiplierPoints,\n    shouldBuyMlpWithEth, // shouldClaimWeth,\n    false, // shouldConvertWeth,\n    shouldBuyMlpWithEth // shouldBuyMlpWithEth\n    ], {\n      sentMsg: \"Compound submitted!\",\n      failMsg: \"Compound failed.\",\n      successMsg: \"Compound completed!\",\n      setPendingTxns\n    }).then(async res => {\n      if (shouldClaimEsMyc) {\n        await res.wait();\n        depositEsMyc();\n      } else {\n        setIsVisible(false);\n      }\n    }).finally(() => {\n      setIsCompounding(false);\n    });\n  };\n\n  const depositEsMyc = async () => {\n    setIsDepositing(true);\n    const contract = new ethers.Contract(vesterAddress, Vester.abi, library.getSigner());\n    const esMyc = new ethers.Contract(esMycAddress, Token.abi, library.getSigner());\n    const balance = await esMyc.balanceOf(account);\n    callContract(chainId, contract, \"deposit\", [balance], {\n      sentMsg: \"Deposit submitted!\",\n      failMsg: \"Deposit failed!\",\n      successMsg: \"Deposited!\",\n      setPendingTxns\n    }).then(async res => {\n      setIsVisible(false);\n    }).finally(() => {\n      setIsDepositing(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StakeModal\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: isVisible,\n      setIsVisible: setIsVisible,\n      label: \"Compound Rewards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CompoundModal-menu\",\n        children: [/*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRow, {\n          children: [/*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRowHeader, {\n            children: \"Claim Vested MYC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), shouldClaimMyc && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRowText, {\n              large: true,\n              inline: true,\n              children: [formatKeyAmount(processedData, \"mlpVesterRewards\", 18, 4), \" MYC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRowText, {\n              inline: true,\n              secondary: true,\n              children: [\"($\", formatKeyAmount(processedData, \"mlpVesterRewardsUsd\", USD_DECIMALS, 4), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Toggle, {\n            isChecked: shouldClaimMyc,\n            handleToggle: setShouldClaimMyc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRow, {\n          children: [/*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRowHeader, {\n            children: \"Claim and vest esMYC Rewards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), shouldClaimEsMyc && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRowText, {\n              inline: true,\n              large: true,\n              children: [formatKeyAmount(processedData, \"stakedMlpTrackerRewards\", 18, 4), \" esMYC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRowText, {\n              inline: true,\n              secondary: true,\n              children: [\"($\", formatKeyAmount(processedData, \"stakedMlpTrackerRewardsUsd\", USD_DECIMALS, 2, true), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Toggle, {\n            isChecked: shouldClaimEsMyc,\n            handleToggle: setShouldClaimEsMyc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRow, {\n          children: [/*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRowHeader, {\n            children: [\"Buy MLP with \", wrappedTokenSymbol, \" Rewards\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), shouldBuyMlpWithEth && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRowText, {\n              large: true,\n              inline: true,\n              children: [formatKeyAmount(processedData, \"feeMlpTrackerRewards\", 18, 4), \" \", nativeTokenSymbol, \" (\", wrappedTokenSymbol, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(StakeV2Styled.ModalRowText, {\n              inline: true,\n              secondary: true,\n              children: [\"($\", formatKeyAmount(processedData, \"feeMlpTrackerRewardsUsd\", USD_DECIMALS, 2, true), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Toggle, {\n            isChecked: shouldBuyMlpWithEth,\n            handleToggle: setShouldBuyMlpWithEth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Exchange-swap-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"App-cta Exchange-swap-button\",\n          onClick: onClickPrimary,\n          disabled: !isPrimaryEnabled(),\n          children: getPrimaryText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CompoundModal, \"GVE+GVOB8pjCAGmodOkw8mFb6T8=\", false, function () {\n  return [useLocalStorageSerializeKey, useLocalStorageSerializeKey, useLocalStorageSerializeKey, useSWR];\n});\n\n_c = CompoundModal;\n\nfunction VesterDepositModal(props) {\n  _s2();\n\n  const {\n    isVisible,\n    setIsVisible,\n    chainId,\n    title,\n    maxAmount,\n    value,\n    setValue,\n    balance,\n    vestedAmount,\n    maxVestableAmount,\n    vesterAddress,\n    setPendingTxns\n  } = props;\n  const [isDepositing, setIsDepositing] = useState(false);\n  const {\n    library,\n    account\n  } = useWeb3React();\n  const {\n    data: ethBalance\n  } = useSWR([library, \"getBalance\", account, \"latest\"], {\n    fetcher: function (library, method) {\n      for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        params[_key - 2] = arguments[_key];\n      }\n\n      return library[method](...params);\n    }\n  });\n  let amount = parseValue(value, 18);\n  let nextDepositAmount = vestedAmount;\n\n  if (amount) {\n    nextDepositAmount = vestedAmount.add(amount);\n  }\n\n  const getError = () => {\n    if (ethBalance !== null && ethBalance !== void 0 && ethBalance.eq(0)) {\n      return [\"Not enough ETH for gas\"];\n    }\n\n    if (!amount || amount.eq(0)) {\n      return \"Enter an amount\";\n    }\n\n    if (maxAmount && amount.gt(maxAmount)) {\n      return \"Max amount exceeded\";\n    }\n  };\n\n  const onClickPrimary = () => {\n    setIsDepositing(true);\n    const contract = new ethers.Contract(vesterAddress, Vester.abi, library.getSigner());\n    callContract(chainId, contract, \"deposit\", [amount], {\n      sentMsg: \"Deposit submitted!\",\n      failMsg: \"Deposit failed!\",\n      successMsg: \"Deposited!\",\n      setPendingTxns\n    }).then(async res => {\n      setIsVisible(false);\n    }).finally(() => {\n      setIsDepositing(false);\n    });\n  };\n\n  const isPrimaryEnabled = () => {\n    const error = getError();\n\n    if (error) {\n      return false;\n    }\n\n    if (isDepositing) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const getPrimaryText = () => {\n    const error = getError();\n\n    if (error) {\n      return error;\n    }\n\n    if (isDepositing) {\n      return \"Depositing...\";\n    }\n\n    return \"Deposit\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SEO, {\n      title: getPageTitle(\"Earn\"),\n      description: \"Claim fees and liquidity mining rewards earned via providing liquidity to the Mycelium Perpetual Swap liquidity pool.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"StakeModal\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isVisible: isVisible,\n        setIsVisible: setIsVisible,\n        label: title,\n        className: \"non-scrollable\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-swap-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-swap-section-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Exchange-swap-usd\",\n                children: \"Deposit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted align-right clickable\",\n              onClick: () => setValue(formatAmountFree(maxAmount, 18, 18)),\n              children: [\"Max: \", formatAmount(maxAmount, 18, 4, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-swap-section-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                placeholder: \"0.0\",\n                className: \"Exchange-swap-input\",\n                value: value,\n                onChange: e => setValue(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"PositionEditor-token-symbol\",\n              children: \"esMYC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"VesterDepositModal-info-rows\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Exchange-info-label\",\n              children: \"Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"align-right\",\n              children: [formatAmount(balance, 18, 2, true), \" esMYC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Exchange-info-label\",\n              children: \"Vault Capacity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"align-right\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                handle: `${formatAmount(nextDepositAmount, 18, 2, true)} / ${formatAmount(maxVestableAmount, 18, 2, true)}`,\n                position: \"right-bottom\",\n                renderContent: () => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [\"Vault Capacity for your Account\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 25\n                    }, this), \"Deposited: \", formatAmount(vestedAmount, 18, 2, true), \" esMYC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 25\n                    }, this), \"Max Capacity: \", formatAmount(maxVestableAmount, 18, 2, true), \" esMYC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-swap-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"App-cta Exchange-swap-button\",\n            onClick: onClickPrimary,\n            disabled: !isPrimaryEnabled(),\n            children: getPrimaryText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(VesterDepositModal, \"iuv2CO3Msb5X7ndAtbc5CjFKK0k=\", false, function () {\n  return [useWeb3React, useSWR];\n});\n\n_c2 = VesterDepositModal;\n\nfunction VesterWithdrawModal(props) {\n  _s3();\n\n  const {\n    isVisible,\n    setIsVisible,\n    chainId,\n    title,\n    library,\n    vesterAddress,\n    setPendingTxns\n  } = props;\n  const [isWithdrawing, setIsWithdrawing] = useState(false);\n\n  const onClickPrimary = () => {\n    setIsWithdrawing(true);\n    const contract = new ethers.Contract(vesterAddress, Vester.abi, library.getSigner());\n    callContract(chainId, contract, \"withdraw\", [], {\n      sentMsg: \"Withdraw submitted.\",\n      failMsg: \"Withdraw failed.\",\n      successMsg: \"Withdrawn!\",\n      setPendingTxns\n    }).then(async res => {\n      setIsVisible(false);\n    }).finally(() => {\n      setIsWithdrawing(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StakeModal\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: isVisible,\n      setIsVisible: setIsVisible,\n      label: title,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"This will withdraw and unreserve all tokens as well as pause vesting.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), \"esMYC tokens that have been converted to MYC will remain as MYC tokens.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), \"To claim MYC tokens without withdrawing, use the \\\"Claim\\\" button under the Total Rewards section.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Exchange-swap-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"App-cta Exchange-swap-button\",\n          onClick: onClickPrimary,\n          disabled: isWithdrawing,\n          children: [!isWithdrawing && \"Confirm Withdraw\", isWithdrawing && \"Confirming...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(VesterWithdrawModal, \"VPNm1UM31S8l5Lyj1D0yckHCe58=\");\n\n_c3 = VesterWithdrawModal;\nexport default function StakeV2(_ref) {\n  _s4();\n\n  let {\n    setPendingTxns,\n    connectWallet,\n    trackAction,\n    savedSlippageAmount,\n    infoTokens,\n    trackPageWithTraits,\n    analytics\n  } = _ref;\n  const {\n    active,\n    library,\n    account\n  } = useWeb3React();\n  const {\n    chainId\n  } = useChainId();\n  const chainName = getChainName(chainId);\n  const [isVesterDepositModalVisible, setIsVesterDepositModalVisible] = useState(false);\n  const [vesterDepositTitle, setVesterDepositTitle] = useState(\"\");\n  const [vesterDepositStakeTokenLabel, setVesterDepositStakeTokenLabel] = useState(\"\");\n  const [vesterDepositMaxAmount, setVesterDepositMaxAmount] = useState(\"\");\n  const [vesterDepositBalance, setVesterDepositBalance] = useState(\"\");\n  const [vesterDepositEscrowedBalance, setVesterDepositEscrowedBalance] = useState(\"\");\n  const [vesterDepositVestedAmount, setVesterDepositVestedAmount] = useState(\"\");\n  const [vesterDepositAverageStakedAmount, setVesterDepositAverageStakedAmount] = useState(\"\");\n  const [vesterDepositMaxVestableAmount, setVesterDepositMaxVestableAmount] = useState(\"\");\n  const [vesterDepositValue, setVesterDepositValue] = useState(\"\");\n  const [vesterDepositReserveAmount, setVesterDepositReserveAmount] = useState(\"\");\n  const [vesterDepositMaxReserveAmount, setVesterDepositMaxReserveAmount] = useState(\"\");\n  const [vesterDepositAddress, setVesterDepositAddress] = useState(\"\");\n  const [isVesterWithdrawModalVisible, setIsVesterWithdrawModalVisible] = useState(false);\n  const [vesterWithdrawTitle, setVesterWithdrawTitle] = useState(false);\n  const [vesterWithdrawAddress, setVesterWithdrawAddress] = useState(\"\");\n  const [isCompoundModalVisible, setIsCompoundModalVisible] = useState(false);\n  const [isClaimModalVisible, setIsClaimModalVisible] = useState(false);\n  const rewardRouterAddress = getContract(chainId, \"RewardRouter\");\n  const rewardReaderAddress = getContract(chainId, \"RewardReader\");\n  const readerAddress = getContract(chainId, \"Reader\");\n  const vaultAddress = getContract(chainId, \"Vault\");\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n  const mycAddress = getContract(chainId, \"MYC\");\n  const esMycAddress = getContract(chainId, \"ES_MYC\");\n  const bnMycAddress = getContract(chainId, \"BN_MYC\");\n  const mlpAddress = getContract(chainId, \"MLP\");\n  const stakedMycTrackerAddress = getContract(chainId, \"StakedMycTracker\");\n  const bonusMycTrackerAddress = getContract(chainId, \"BonusMycTracker\");\n  const feeMycTrackerAddress = getContract(chainId, \"FeeMycTracker\");\n  const stakedMlpTrackerAddress = getContract(chainId, \"StakedMlpTracker\");\n  const feeMlpTrackerAddress = getContract(chainId, \"FeeMlpTracker\");\n  const mlpManagerAddress = getContract(chainId, \"MlpManager\");\n  const mycVesterAddress = getContract(chainId, \"MycVester\");\n  const mlpVesterAddress = getContract(chainId, \"MlpVester\");\n  const vesterAddresses = [mycVesterAddress, mlpVesterAddress];\n  const nativeTokenSymbol = getConstant(chainId, \"nativeTokenSymbol\");\n  const wrappedTokenSymbol = getConstant(chainId, \"wrappedTokenSymbol\");\n  const walletTokens = [mycAddress, esMycAddress, mlpAddress, stakedMycTrackerAddress];\n  const depositTokens = [mycAddress, esMycAddress, stakedMycTrackerAddress, bonusMycTrackerAddress, bnMycAddress, mlpAddress];\n  const rewardTrackersForDepositBalances = [stakedMycTrackerAddress, stakedMycTrackerAddress, bonusMycTrackerAddress, feeMycTrackerAddress, feeMycTrackerAddress, feeMlpTrackerAddress];\n  const rewardTrackersForStakingInfo = [stakedMycTrackerAddress, bonusMycTrackerAddress, feeMycTrackerAddress, stakedMlpTrackerAddress, feeMlpTrackerAddress];\n  const {\n    data: walletBalances\n  } = useSWR([`StakeV2:walletBalances:${active}`, chainId, readerAddress, \"getTokenBalancesWithSupplies\", account || PLACEHOLDER_ACCOUNT], {\n    fetcher: fetcher(library, ReaderV2, [walletTokens])\n  });\n  const {\n    data: depositBalances\n  } = useSWR([`StakeV2:depositBalances:${active}`, chainId, rewardReaderAddress, \"getDepositBalances\", account || PLACEHOLDER_ACCOUNT], {\n    fetcher: fetcher(library, RewardReader, [depositTokens, rewardTrackersForDepositBalances])\n  });\n  const {\n    data: stakingInfo\n  } = useSWR([`StakeV2:stakingInfo:${active}`, chainId, rewardReaderAddress, \"getStakingInfo\", account || PLACEHOLDER_ACCOUNT], {\n    fetcher: fetcher(library, RewardReader, [rewardTrackersForStakingInfo])\n  });\n  const {\n    data: stakedMycSupply\n  } = useSWR([`StakeV2:stakedMycSupply:${active}`, chainId, mycAddress, \"balanceOf\", stakedMycTrackerAddress], {\n    fetcher: fetcher(library, Token)\n  });\n  const {\n    data: aums\n  } = useSWR([`StakeV2:getAums:${active}`, chainId, mlpManagerAddress, \"getAums\"], {\n    fetcher: fetcher(library, MlpManager)\n  });\n  const {\n    data: nativeTokenPrice\n  } = useSWR([`StakeV2:nativeTokenPrice:${active}`, chainId, vaultAddress, \"getMinPrice\", nativeTokenAddress], {\n    fetcher: fetcher(library, Vault)\n  });\n  const {\n    data: vestingInfo\n  } = useSWR([`StakeV2:vestingInfo:${active}`, chainId, readerAddress, \"getVestingInfo\", account || PLACEHOLDER_ACCOUNT], {\n    fetcher: fetcher(library, ReaderV2, [vesterAddresses])\n  });\n  const {\n    data: ethBalance\n  } = useSWR([library, \"getBalance\", account, \"latest\"], {\n    fetcher: function (library, method) {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        params[_key2 - 2] = arguments[_key2];\n      }\n\n      return library[method](...params);\n    }\n  });\n  const {\n    mycPrice\n  } = useMYCPrice(chainId, {\n    arbitrum: chainId === ARBITRUM ? library : undefined\n  }, active);\n  const {\n    total: mycSupply\n  } = useTotalMYCSupply();\n  let aum;\n\n  if (aums && aums.length > 0) {\n    aum = aums[0].add(aums[1]).div(2);\n  }\n\n  const {\n    balanceData,\n    supplyData\n  } = getBalanceAndSupplyData(walletBalances);\n  const depositBalanceData = getDepositBalanceData(depositBalances);\n  const stakingData = getStakingData(stakingInfo);\n  const vestingData = getVestingData(vestingInfo);\n  const processedData = getProcessedData(balanceData, supplyData, depositBalanceData, stakingData, vestingData, aum, nativeTokenPrice, stakedMycSupply, mycPrice, mycSupply);\n  const stakingApr = useStakingApr(mycPrice, nativeTokenPrice);\n  let totalRewardTokens;\n\n  if (processedData && processedData.bnMycInFeeMyc && processedData.bonusMycInFeeMyc) {\n    totalRewardTokens = processedData.bnMycInFeeMyc.add(processedData.bonusMycInFeeMyc);\n  }\n\n  let totalRewardTokensAndMlp;\n\n  if (totalRewardTokens && processedData && processedData.mlpBalance) {\n    totalRewardTokensAndMlp = totalRewardTokens.add(processedData.mlpBalance);\n  }\n\n  let earnMsg;\n\n  if (totalRewardTokensAndMlp && totalRewardTokensAndMlp.gt(0)) {\n    earnMsg = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"You are earning \", nativeTokenSymbol, \" rewards with\", \" \", formatKeyAmount(processedData, \"mlpBalance\", MLP_DECIMALS, 2, true), \" MLP tokens.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 7\n    }, this);\n  }\n\n  const showMlpCompoundModal = () => {\n    if (ethBalance !== null && ethBalance !== void 0 && ethBalance.eq(0)) {\n      helperToast.error(\"You don't have any ETH to pay for gas\");\n    } else {\n      setIsCompoundModalVisible(true);\n    }\n  };\n\n  const showMlpClaimModal = () => {\n    if (ethBalance !== null && ethBalance !== void 0 && ethBalance.eq(0)) {\n      helperToast.error(\"You don't have any ETH to pay for gas\");\n    } else {\n      setIsClaimModalVisible(true);\n    }\n  };\n\n  const showMycVesterDepositModal = () => {\n    if (ethBalance !== null && ethBalance !== void 0 && ethBalance.eq(0)) {\n      helperToast.error(\"You don't have any ETH to pay for gas\");\n      return;\n    } else if (!vestingData) {\n      helperToast.error(\"Loading vesting data, please wait.\");\n      return;\n    } // let remainingVestableAmount = vestingData.mlpVester.maxVestableAmount.sub(vestingData.mlpVester.vestedAmount);\n    // if (processedData.esMycBalance.lt(remainingVestableAmount)) {\n    // }\n\n\n    let remainingVestableAmount = processedData.esMycBalance;\n    let maxVestableAmount = bigNumberify(remainingVestableAmount).add(vestingData.mlpVesterVestedAmount);\n    setIsVesterDepositModalVisible(true);\n    setVesterDepositTitle(\"esMYC Vault\");\n    setVesterDepositStakeTokenLabel(\"staked MYC + esMYC + Multiplier Points\");\n    setVesterDepositMaxAmount(remainingVestableAmount);\n    setVesterDepositBalance(processedData.esMycBalance);\n    setVesterDepositEscrowedBalance(vestingData.mlpVester.escrowedBalance);\n    setVesterDepositVestedAmount(vestingData.mlpVester.vestedAmount);\n    setVesterDepositMaxVestableAmount(maxVestableAmount);\n    setVesterDepositAverageStakedAmount(vestingData.mlpVester.averageStakedAmount);\n    setVesterDepositReserveAmount(vestingData.mlpVester.pairAmount);\n    setVesterDepositMaxReserveAmount(totalRewardTokens);\n    setVesterDepositValue(\"\");\n    setVesterDepositAddress(mlpVesterAddress);\n  };\n\n  const showMycVesterWithdrawModal = () => {\n    if (ethBalance !== null && ethBalance !== void 0 && ethBalance.eq(0)) {\n      helperToast.error(\"You don't have any ETH to pay for gas\");\n      return;\n    } else if (!vestingData || !vestingData.mlpVesterVestedAmount || vestingData.mlpVesterVestedAmount.eq(0)) {\n      helperToast.error(\"You have not deposited any tokens for vesting.\");\n      return;\n    }\n\n    setIsVesterWithdrawModalVisible(true);\n    setVesterWithdrawTitle(\"Withdraw from esMYC Vault\");\n    setVesterWithdrawAddress(mlpVesterAddress);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StakeV2 Page page-layout default-container\",\n    children: [/*#__PURE__*/_jsxDEV(VesterDepositModal, {\n      isVisible: isVesterDepositModalVisible,\n      setIsVisible: setIsVesterDepositModalVisible,\n      chainId: chainId,\n      title: vesterDepositTitle,\n      stakeTokenLabel: vesterDepositStakeTokenLabel,\n      maxAmount: vesterDepositMaxAmount,\n      balance: vesterDepositBalance,\n      escrowedBalance: vesterDepositEscrowedBalance,\n      vestedAmount: vesterDepositVestedAmount,\n      averageStakedAmount: vesterDepositAverageStakedAmount,\n      maxVestableAmount: vesterDepositMaxVestableAmount,\n      reserveAmount: vesterDepositReserveAmount,\n      maxReserveAmount: vesterDepositMaxReserveAmount,\n      value: vesterDepositValue,\n      setValue: setVesterDepositValue,\n      vesterAddress: vesterDepositAddress,\n      setPendingTxns: setPendingTxns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VesterWithdrawModal, {\n      isVisible: isVesterWithdrawModalVisible,\n      setIsVisible: setIsVesterWithdrawModalVisible,\n      vesterAddress: vesterWithdrawAddress,\n      chainId: chainId,\n      title: vesterWithdrawTitle,\n      library: library,\n      setPendingTxns: setPendingTxns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompoundModal, {\n      active: active,\n      account: account,\n      setPendingTxns: setPendingTxns,\n      isVisible: isCompoundModalVisible,\n      setIsVisible: setIsCompoundModalVisible,\n      rewardRouterAddress: rewardRouterAddress,\n      totalVesterRewards: processedData.totalVesterRewards,\n      wrappedTokenSymbol: wrappedTokenSymbol,\n      nativeTokenSymbol: nativeTokenSymbol,\n      library: library,\n      chainId: chainId,\n      processedData: processedData,\n      vesterAddress: mlpVesterAddress,\n      stakedMlpTrackerAddress: stakedMlpTrackerAddress,\n      esMycAddress: esMycAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClaimModal, {\n      active: active,\n      setPendingTxns: setPendingTxns,\n      connectWallet: connectWallet,\n      library: library,\n      chainId: chainId,\n      isVisible: isClaimModalVisible,\n      setIsVisible: setIsClaimModalVisible,\n      rewardRouterAddress: rewardRouterAddress,\n      wrappedTokenSymbol: wrappedTokenSymbol,\n      nativeTokenSymbol: nativeTokenSymbol,\n      processedData: processedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StakeV2Styled.StakeV2Content, {\n      className: \"StakeV2-content\",\n      children: /*#__PURE__*/_jsxDEV(StakeV2Styled.StakeV2Cards, {\n        className: \"StakeV2-cards\",\n        children: /*#__PURE__*/_jsxDEV(StakeV2Styled.StakeV2Card, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Page-title-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Page-title\",\n              children: \"Stake and Earn || Coming Soon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Page-description\",\n              children: \"Stake your $ARBX and earn rewards.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 15\n            }, this), earnMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Page-description\",\n              children: earnMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 725,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(StakeV2, \"VHDzpYiypuiMSeS3rkIpSDT5Fc4=\", false, function () {\n  return [useWeb3React, useChainId, useSWR, useSWR, useSWR, useSWR, useSWR, useSWR, useSWR, useSWR, useMYCPrice, useTotalMYCSupply, useStakingApr];\n});\n\n_c4 = StakeV2;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CompoundModal\");\n$RefreshReg$(_c2, \"VesterDepositModal\");\n$RefreshReg$(_c3, \"VesterWithdrawModal\");\n$RefreshReg$(_c4, \"StakeV2\");","map":{"version":3,"names":["React","useState","Link","useWeb3React","Modal","Tooltip","Vault","ReaderV2","Vester","RewardRouter","RewardReader","Token","MlpManager","ethers","helperToast","bigNumberify","fetcher","formatAmount","formatKeyAmount","formatAmountFree","getChainName","parseValue","approveTokens","useLocalStorageSerializeKey","useChainId","MLP_DECIMALS","USD_DECIMALS","ARBITRUM","PLACEHOLDER_ACCOUNT","getBalanceAndSupplyData","getDepositBalanceData","getVestingData","getStakingData","getProcessedData","getPageTitle","callContract","useMYCPrice","useStakingApr","useTotalMYCSupply","getConstant","useSWR","getContract","StakeV2Styled","SEO","ClaimModal","Toggle","MlpPriceChart","CompoundModal","props","isVisible","setIsVisible","rewardRouterAddress","active","account","library","chainId","setPendingTxns","totalVesterRewards","nativeTokenSymbol","wrappedTokenSymbol","processedData","vesterAddress","stakedMlpTrackerAddress","esMycAddress","isCompounding","setIsCompounding","isDepositing","setIsDepositing","shouldClaimMyc","setShouldClaimMyc","shouldClaimEsMyc","setShouldClaimEsMyc","shouldBuyMlpWithEth","setShouldBuyMlpWithEth","mycAddress","isApproving","setIsApproving","data","tokenAllowance","needApproval","gt","isPrimaryEnabled","getPrimaryText","onClickPrimary","tokenAddress","spender","contract","Contract","abi","getSigner","sentMsg","failMsg","successMsg","then","res","wait","depositEsMyc","finally","esMyc","balance","balanceOf","VesterDepositModal","title","maxAmount","value","setValue","vestedAmount","maxVestableAmount","ethBalance","method","params","amount","nextDepositAmount","add","getError","eq","error","e","target","VesterWithdrawModal","isWithdrawing","setIsWithdrawing","StakeV2","connectWallet","trackAction","savedSlippageAmount","infoTokens","trackPageWithTraits","analytics","chainName","isVesterDepositModalVisible","setIsVesterDepositModalVisible","vesterDepositTitle","setVesterDepositTitle","vesterDepositStakeTokenLabel","setVesterDepositStakeTokenLabel","vesterDepositMaxAmount","setVesterDepositMaxAmount","vesterDepositBalance","setVesterDepositBalance","vesterDepositEscrowedBalance","setVesterDepositEscrowedBalance","vesterDepositVestedAmount","setVesterDepositVestedAmount","vesterDepositAverageStakedAmount","setVesterDepositAverageStakedAmount","vesterDepositMaxVestableAmount","setVesterDepositMaxVestableAmount","vesterDepositValue","setVesterDepositValue","vesterDepositReserveAmount","setVesterDepositReserveAmount","vesterDepositMaxReserveAmount","setVesterDepositMaxReserveAmount","vesterDepositAddress","setVesterDepositAddress","isVesterWithdrawModalVisible","setIsVesterWithdrawModalVisible","vesterWithdrawTitle","setVesterWithdrawTitle","vesterWithdrawAddress","setVesterWithdrawAddress","isCompoundModalVisible","setIsCompoundModalVisible","isClaimModalVisible","setIsClaimModalVisible","rewardReaderAddress","readerAddress","vaultAddress","nativeTokenAddress","bnMycAddress","mlpAddress","stakedMycTrackerAddress","bonusMycTrackerAddress","feeMycTrackerAddress","feeMlpTrackerAddress","mlpManagerAddress","mycVesterAddress","mlpVesterAddress","vesterAddresses","walletTokens","depositTokens","rewardTrackersForDepositBalances","rewardTrackersForStakingInfo","walletBalances","depositBalances","stakingInfo","stakedMycSupply","aums","nativeTokenPrice","vestingInfo","mycPrice","arbitrum","undefined","total","mycSupply","aum","length","div","balanceData","supplyData","depositBalanceData","stakingData","vestingData","stakingApr","totalRewardTokens","bnMycInFeeMyc","bonusMycInFeeMyc","totalRewardTokensAndMlp","mlpBalance","earnMsg","showMlpCompoundModal","showMlpClaimModal","showMycVesterDepositModal","remainingVestableAmount","esMycBalance","mlpVesterVestedAmount","mlpVester","escrowedBalance","averageStakedAmount","pairAmount","showMycVesterWithdrawModal"],"sources":["C:/Users/rober/Documents/swaps-client/src/views/Stake/StakeV2.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport Modal from \"../../components/Modal/Modal\";\nimport Tooltip from \"../../components/Tooltip/Tooltip\";\n\nimport Vault from \"../../abis/Vault.json\";\nimport ReaderV2 from \"../../abis/ReaderV2.json\";\nimport Vester from \"../../abis/Vester.json\";\nimport RewardRouter from \"../../abis/RewardRouter.json\";\nimport RewardReader from \"../../abis/RewardReader.json\";\nimport Token from \"../../abis/Token.json\";\nimport MlpManager from \"../../abis/MlpManager.json\";\n\nimport { ethers } from \"ethers\";\nimport {\n  helperToast,\n  bigNumberify,\n  fetcher,\n  formatAmount,\n  formatKeyAmount,\n  formatAmountFree,\n  getChainName,\n  parseValue,\n  approveTokens,\n  useLocalStorageSerializeKey,\n  useChainId,\n  MLP_DECIMALS,\n  USD_DECIMALS,\n  ARBITRUM,\n  PLACEHOLDER_ACCOUNT,\n  getBalanceAndSupplyData,\n  getDepositBalanceData,\n  getVestingData,\n  getStakingData,\n  getProcessedData,\n  getPageTitle,\n} from \"../../Helpers\";\nimport {\n  callContract,\n  useMYCPrice,\n  useStakingApr,\n  useTotalMYCSupply,\n} from \"../../Api\";\nimport { getConstant } from \"../../Constants\";\n\nimport useSWR from \"swr\";\n\nimport { getContract } from \"../../Addresses\";\n\nimport mlp40Icon from \"../../img/ic_mlp_40.svg\";\nimport myc40Icon from \"../../img/ic_myc_40.svg\";\nimport * as StakeV2Styled from \"./StakeV2Styles\";\n\nimport \"./StakeV2.css\";\n\nimport SEO from \"../../components/Common/SEO\";\nimport ClaimModal from \"./ClaimModal\";\nimport Toggle from \"../../components/Toggle/Toggle\";\nimport MlpPriceChart from \"./MlpPriceChart\";\n\nfunction CompoundModal(props) {\n  const {\n    isVisible,\n    setIsVisible,\n    rewardRouterAddress,\n    active,\n    account,\n    library,\n    chainId,\n    setPendingTxns,\n    totalVesterRewards,\n    nativeTokenSymbol,\n    wrappedTokenSymbol,\n    processedData,\n    vesterAddress,\n    stakedMlpTrackerAddress,\n    esMycAddress,\n  } = props;\n  const [isCompounding, setIsCompounding] = useState(false);\n  const [isDepositing, setIsDepositing] = useState(false);\n\n  const [shouldClaimMyc, setShouldClaimMyc] = useLocalStorageSerializeKey(\n    [chainId, \"StakeV2-compound-should-claim-myc\"],\n    true\n  );\n\n  const [shouldClaimEsMyc, setShouldClaimEsMyc] = useLocalStorageSerializeKey(\n    [chainId, \"StakeV2-compound-should-claim-esMyc\"],\n    true\n  );\n\n  const [shouldBuyMlpWithEth, setShouldBuyMlpWithEth] = useLocalStorageSerializeKey(\n    [chainId, \"StakeV2-compound-should-buy-mlp\"],\n    true\n  );\n\n  const mycAddress = getContract(chainId, \"MYC\");\n  const [isApproving, setIsApproving] = useState(false);\n\n  const { data: tokenAllowance } = useSWR(\n    active && [active, chainId, mycAddress, \"allowance\", account, stakedMlpTrackerAddress],\n    {\n      fetcher: fetcher(library, Token),\n    }\n  );\n\n  const needApproval = tokenAllowance && totalVesterRewards && totalVesterRewards.gt(tokenAllowance);\n\n  const isPrimaryEnabled = () => {\n    return !isCompounding && !isApproving && !isCompounding && !isDepositing;\n  };\n\n  const getPrimaryText = () => {\n    if (isApproving) {\n      return `Approving MYC...`;\n    }\n    if (needApproval) {\n      return `Approve MYC`;\n    }\n    if (isCompounding) {\n      return \"Compounding...\";\n    }\n    if (isDepositing) {\n      return \"Depositing...\";\n    }\n    return \"Compound\";\n  };\n\n  const onClickPrimary = () => {\n    if (needApproval) {\n      approveTokens({\n        setIsApproving,\n        library,\n        tokenAddress: mycAddress,\n        spender: stakedMlpTrackerAddress,\n        chainId,\n      });\n      return;\n    }\n\n    setIsCompounding(true);\n\n    const contract = new ethers.Contract(rewardRouterAddress, RewardRouter.abi, library.getSigner());\n    callContract(\n      chainId,\n      contract,\n      \"handleRewards\",\n      [\n        shouldClaimMyc, // shouldClaimMyc,\n        false, // shouldStakeMYC,\n        shouldClaimEsMyc, // shouldClaimEsMyc,\n        false, // shouldStakeEsMyc,\n        false, // shouldStakeMultiplierPoints,\n        shouldBuyMlpWithEth, // shouldClaimWeth,\n        false, // shouldConvertWeth,\n        shouldBuyMlpWithEth, // shouldBuyMlpWithEth\n      ],\n      {\n        sentMsg: \"Compound submitted!\",\n        failMsg: \"Compound failed.\",\n        successMsg: \"Compound completed!\",\n        setPendingTxns,\n      }\n    )\n      .then(async (res) => {\n        if (shouldClaimEsMyc) {\n          await res.wait();\n          depositEsMyc();\n        } else {\n          setIsVisible(false);\n        }\n      })\n      .finally(() => {\n        setIsCompounding(false);\n      });\n  };\n\n  const depositEsMyc = async () => {\n    setIsDepositing(true);\n    const contract = new ethers.Contract(vesterAddress, Vester.abi, library.getSigner());\n    const esMyc = new ethers.Contract(esMycAddress, Token.abi, library.getSigner());\n    const balance = await esMyc.balanceOf(account);\n\n    callContract(chainId, contract, \"deposit\", [balance], {\n      sentMsg: \"Deposit submitted!\",\n      failMsg: \"Deposit failed!\",\n      successMsg: \"Deposited!\",\n      setPendingTxns,\n    })\n      .then(async (res) => {\n        setIsVisible(false);\n      })\n      .finally(() => {\n        setIsDepositing(false);\n      });\n  };\n\n  return (\n    <div className=\"StakeModal\">\n      <Modal isVisible={isVisible} setIsVisible={setIsVisible} label=\"Compound Rewards\">\n        <div className=\"CompoundModal-menu\">\n          <StakeV2Styled.ModalRow>\n            <StakeV2Styled.ModalRowHeader>Claim Vested MYC</StakeV2Styled.ModalRowHeader>\n            {shouldClaimMyc && (\n              <>\n                <StakeV2Styled.ModalRowText large inline>\n                  {formatKeyAmount(processedData, \"mlpVesterRewards\", 18, 4)} MYC\n                </StakeV2Styled.ModalRowText>{\" \"}\n                <StakeV2Styled.ModalRowText inline secondary>\n                  (${formatKeyAmount(processedData, \"mlpVesterRewardsUsd\", USD_DECIMALS, 4)})\n                </StakeV2Styled.ModalRowText>\n              </>\n            )}\n            <Toggle isChecked={shouldClaimMyc} handleToggle={setShouldClaimMyc} />\n          </StakeV2Styled.ModalRow>\n          <StakeV2Styled.ModalRow>\n            <StakeV2Styled.ModalRowHeader>Claim and vest esMYC Rewards</StakeV2Styled.ModalRowHeader>\n            {shouldClaimEsMyc && (\n              <>\n                <StakeV2Styled.ModalRowText inline large>\n                  {formatKeyAmount(processedData, \"stakedMlpTrackerRewards\", 18, 4)} esMYC\n                </StakeV2Styled.ModalRowText>{\" \"}\n                <StakeV2Styled.ModalRowText inline secondary>\n                  ($\n                  {formatKeyAmount(processedData, \"stakedMlpTrackerRewardsUsd\", USD_DECIMALS, 2, true)})\n                </StakeV2Styled.ModalRowText>\n              </>\n            )}\n            <Toggle isChecked={shouldClaimEsMyc} handleToggle={setShouldClaimEsMyc} />\n          </StakeV2Styled.ModalRow>\n          <StakeV2Styled.ModalRow>\n            <StakeV2Styled.ModalRowHeader>Buy MLP with {wrappedTokenSymbol} Rewards</StakeV2Styled.ModalRowHeader>\n            {shouldBuyMlpWithEth && (\n              <>\n                <StakeV2Styled.ModalRowText large inline>\n                  {formatKeyAmount(processedData, \"feeMlpTrackerRewards\", 18, 4)} {nativeTokenSymbol} (\n                  {wrappedTokenSymbol})\n                </StakeV2Styled.ModalRowText>{\" \"}\n                <StakeV2Styled.ModalRowText inline secondary>\n                  ($\n                  {formatKeyAmount(processedData, \"feeMlpTrackerRewardsUsd\", USD_DECIMALS, 2, true)})\n                </StakeV2Styled.ModalRowText>\n              </>\n            )}\n            <Toggle isChecked={shouldBuyMlpWithEth} handleToggle={setShouldBuyMlpWithEth} />\n          </StakeV2Styled.ModalRow>\n        </div>\n        <div className=\"Exchange-swap-button-container\">\n          <button className=\"App-cta Exchange-swap-button\" onClick={onClickPrimary} disabled={!isPrimaryEnabled()}>\n            {getPrimaryText()}\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nfunction VesterDepositModal(props) {\n  const {\n    isVisible,\n    setIsVisible,\n    chainId,\n    title,\n    maxAmount,\n    value,\n    setValue,\n    balance,\n    vestedAmount,\n    maxVestableAmount,\n    vesterAddress,\n    setPendingTxns,\n  } = props;\n  const [isDepositing, setIsDepositing] = useState(false);\n  const { library, account } = useWeb3React();\n\n  const { data: ethBalance } = useSWR([library, \"getBalance\", account, \"latest\"], {\n    fetcher: (library, method, ...params) => library[method](...params),\n  });\n\n  let amount = parseValue(value, 18);\n\n  let nextDepositAmount = vestedAmount;\n  if (amount) {\n    nextDepositAmount = vestedAmount.add(amount);\n  }\n\n  const getError = () => {\n    if (ethBalance?.eq(0)) {\n      return [\"Not enough ETH for gas\"];\n    }\n\n    if (!amount || amount.eq(0)) {\n      return \"Enter an amount\";\n    }\n    if (maxAmount && amount.gt(maxAmount)) {\n      return \"Max amount exceeded\";\n    }\n  };\n\n  const onClickPrimary = () => {\n    setIsDepositing(true);\n    const contract = new ethers.Contract(vesterAddress, Vester.abi, library.getSigner());\n\n    callContract(chainId, contract, \"deposit\", [amount], {\n      sentMsg: \"Deposit submitted!\",\n      failMsg: \"Deposit failed!\",\n      successMsg: \"Deposited!\",\n      setPendingTxns,\n    })\n      .then(async (res) => {\n        setIsVisible(false);\n      })\n      .finally(() => {\n        setIsDepositing(false);\n      });\n  };\n\n  const isPrimaryEnabled = () => {\n    const error = getError();\n    if (error) {\n      return false;\n    }\n    if (isDepositing) {\n      return false;\n    }\n    return true;\n  };\n\n  const getPrimaryText = () => {\n    const error = getError();\n    if (error) {\n      return error;\n    }\n    if (isDepositing) {\n      return \"Depositing...\";\n    }\n    return \"Deposit\";\n  };\n\n  return (\n    <>\n      <SEO\n        title={getPageTitle(\"Earn\")}\n        description=\"Claim fees and liquidity mining rewards earned via providing liquidity to the Mycelium Perpetual Swap liquidity pool.\"\n      />\n      <div className=\"StakeModal\">\n        <Modal isVisible={isVisible} setIsVisible={setIsVisible} label={title} className=\"non-scrollable\">\n          <div className=\"Exchange-swap-section\">\n            <div className=\"Exchange-swap-section-top\">\n              <div className=\"muted\">\n                <div className=\"Exchange-swap-usd\">Deposit</div>\n              </div>\n              <div\n                className=\"muted align-right clickable\"\n                onClick={() => setValue(formatAmountFree(maxAmount, 18, 18))}\n              >\n                Max: {formatAmount(maxAmount, 18, 4, true)}\n              </div>\n            </div>\n            <div className=\"Exchange-swap-section-bottom\">\n              <div>\n                <input\n                  type=\"number\"\n                  placeholder=\"0.0\"\n                  className=\"Exchange-swap-input\"\n                  value={value}\n                  onChange={(e) => setValue(e.target.value)}\n                />\n              </div>\n              <div className=\"PositionEditor-token-symbol\">esMYC</div>\n            </div>\n          </div>\n          <div className=\"VesterDepositModal-info-rows\">\n            <div className=\"Exchange-info-row\">\n              <div className=\"Exchange-info-label\">Wallet</div>\n              <div className=\"align-right\">{formatAmount(balance, 18, 2, true)} esMYC</div>\n            </div>\n            <div className=\"Exchange-info-row\">\n              <div className=\"Exchange-info-label\">Vault Capacity</div>\n              <div className=\"align-right\">\n                <Tooltip\n                  handle={`${formatAmount(nextDepositAmount, 18, 2, true)} / ${formatAmount(\n                    maxVestableAmount,\n                    18,\n                    2,\n                    true\n                  )}`}\n                  position=\"right-bottom\"\n                  renderContent={() => {\n                    return (\n                      <>\n                        Vault Capacity for your Account\n                        <br />\n                        <br />\n                        Deposited: {formatAmount(vestedAmount, 18, 2, true)} esMYC\n                        <br />\n                        Max Capacity: {formatAmount(maxVestableAmount, 18, 2, true)} esMYC\n                        <br />\n                      </>\n                    );\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"Exchange-swap-button-container\">\n            <button className=\"App-cta Exchange-swap-button\" onClick={onClickPrimary} disabled={!isPrimaryEnabled()}>\n              {getPrimaryText()}\n            </button>\n          </div>\n        </Modal>\n      </div>\n    </>\n  );\n}\n\nfunction VesterWithdrawModal(props) {\n  const { isVisible, setIsVisible, chainId, title, library, vesterAddress, setPendingTxns } = props;\n  const [isWithdrawing, setIsWithdrawing] = useState(false);\n\n  const onClickPrimary = () => {\n    setIsWithdrawing(true);\n    const contract = new ethers.Contract(vesterAddress, Vester.abi, library.getSigner());\n\n    callContract(chainId, contract, \"withdraw\", [], {\n      sentMsg: \"Withdraw submitted.\",\n      failMsg: \"Withdraw failed.\",\n      successMsg: \"Withdrawn!\",\n      setPendingTxns,\n    })\n      .then(async (res) => {\n        setIsVisible(false);\n      })\n      .finally(() => {\n        setIsWithdrawing(false);\n      });\n  };\n\n  return (\n    <div className=\"StakeModal\">\n      <Modal isVisible={isVisible} setIsVisible={setIsVisible} label={title}>\n        <div>\n          This will withdraw and unreserve all tokens as well as pause vesting.\n          <br />\n          <br />\n          esMYC tokens that have been converted to MYC will remain as MYC tokens.\n          <br />\n          <br />\n          To claim MYC tokens without withdrawing, use the \"Claim\" button under the Total Rewards section.\n          <br />\n          <br />\n        </div>\n        <div className=\"Exchange-swap-button-container\">\n          <button className=\"App-cta Exchange-swap-button\" onClick={onClickPrimary} disabled={isWithdrawing}>\n            {!isWithdrawing && \"Confirm Withdraw\"}\n            {isWithdrawing && \"Confirming...\"}\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default function StakeV2({\n  setPendingTxns,\n  connectWallet,\n  trackAction,\n  savedSlippageAmount,\n  infoTokens,\n  trackPageWithTraits,\n  analytics,\n}) {\n  const { active, library, account } = useWeb3React();\n  const { chainId } = useChainId();\n\n  const chainName = getChainName(chainId);\n\n  const [isVesterDepositModalVisible, setIsVesterDepositModalVisible] = useState(false);\n  const [vesterDepositTitle, setVesterDepositTitle] = useState(\"\");\n  const [vesterDepositStakeTokenLabel, setVesterDepositStakeTokenLabel] = useState(\"\");\n  const [vesterDepositMaxAmount, setVesterDepositMaxAmount] = useState(\"\");\n  const [vesterDepositBalance, setVesterDepositBalance] = useState(\"\");\n  const [vesterDepositEscrowedBalance, setVesterDepositEscrowedBalance] = useState(\"\");\n  const [vesterDepositVestedAmount, setVesterDepositVestedAmount] = useState(\"\");\n  const [vesterDepositAverageStakedAmount, setVesterDepositAverageStakedAmount] = useState(\"\");\n  const [vesterDepositMaxVestableAmount, setVesterDepositMaxVestableAmount] = useState(\"\");\n  const [vesterDepositValue, setVesterDepositValue] = useState(\"\");\n  const [vesterDepositReserveAmount, setVesterDepositReserveAmount] = useState(\"\");\n  const [vesterDepositMaxReserveAmount, setVesterDepositMaxReserveAmount] = useState(\"\");\n  const [vesterDepositAddress, setVesterDepositAddress] = useState(\"\");\n\n  const [isVesterWithdrawModalVisible, setIsVesterWithdrawModalVisible] = useState(false);\n  const [vesterWithdrawTitle, setVesterWithdrawTitle] = useState(false);\n  const [vesterWithdrawAddress, setVesterWithdrawAddress] = useState(\"\");\n\n  const [isCompoundModalVisible, setIsCompoundModalVisible] = useState(false);\n  const [isClaimModalVisible, setIsClaimModalVisible] = useState(false);\n\n  const rewardRouterAddress = getContract(chainId, \"RewardRouter\");\n  const rewardReaderAddress = getContract(chainId, \"RewardReader\");\n  const readerAddress = getContract(chainId, \"Reader\");\n\n  const vaultAddress = getContract(chainId, \"Vault\");\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n  const mycAddress = getContract(chainId, \"MYC\");\n  const esMycAddress = getContract(chainId, \"ES_MYC\");\n  const bnMycAddress = getContract(chainId, \"BN_MYC\");\n  const mlpAddress = getContract(chainId, \"MLP\");\n\n  const stakedMycTrackerAddress = getContract(chainId, \"StakedMycTracker\");\n  const bonusMycTrackerAddress = getContract(chainId, \"BonusMycTracker\");\n  const feeMycTrackerAddress = getContract(chainId, \"FeeMycTracker\");\n\n  const stakedMlpTrackerAddress = getContract(chainId, \"StakedMlpTracker\");\n  const feeMlpTrackerAddress = getContract(chainId, \"FeeMlpTracker\");\n\n  const mlpManagerAddress = getContract(chainId, \"MlpManager\");\n\n  const mycVesterAddress = getContract(chainId, \"MycVester\");\n  const mlpVesterAddress = getContract(chainId, \"MlpVester\");\n\n  const vesterAddresses = [mycVesterAddress, mlpVesterAddress];\n\n  const nativeTokenSymbol = getConstant(chainId, \"nativeTokenSymbol\");\n  const wrappedTokenSymbol = getConstant(chainId, \"wrappedTokenSymbol\");\n\n  const walletTokens = [mycAddress, esMycAddress, mlpAddress, stakedMycTrackerAddress];\n  const depositTokens = [\n    mycAddress,\n    esMycAddress,\n    stakedMycTrackerAddress,\n    bonusMycTrackerAddress,\n    bnMycAddress,\n    mlpAddress,\n  ];\n  const rewardTrackersForDepositBalances = [\n    stakedMycTrackerAddress,\n    stakedMycTrackerAddress,\n    bonusMycTrackerAddress,\n    feeMycTrackerAddress,\n    feeMycTrackerAddress,\n    feeMlpTrackerAddress,\n  ];\n  const rewardTrackersForStakingInfo = [\n    stakedMycTrackerAddress,\n    bonusMycTrackerAddress,\n    feeMycTrackerAddress,\n    stakedMlpTrackerAddress,\n    feeMlpTrackerAddress,\n  ];\n\n  const { data: walletBalances } = useSWR(\n    [\n      `StakeV2:walletBalances:${active}`,\n      chainId,\n      readerAddress,\n      \"getTokenBalancesWithSupplies\",\n      account || PLACEHOLDER_ACCOUNT,\n    ],\n    {\n      fetcher: fetcher(library, ReaderV2, [walletTokens]),\n    }\n  );\n\n  const { data: depositBalances } = useSWR(\n    [\n      `StakeV2:depositBalances:${active}`,\n      chainId,\n      rewardReaderAddress,\n      \"getDepositBalances\",\n      account || PLACEHOLDER_ACCOUNT,\n    ],\n    {\n      fetcher: fetcher(library, RewardReader, [depositTokens, rewardTrackersForDepositBalances]),\n    }\n  );\n\n  const { data: stakingInfo } = useSWR(\n    [`StakeV2:stakingInfo:${active}`, chainId, rewardReaderAddress, \"getStakingInfo\", account || PLACEHOLDER_ACCOUNT],\n    {\n      fetcher: fetcher(library, RewardReader, [rewardTrackersForStakingInfo]),\n    }\n  );\n\n  const { data: stakedMycSupply } = useSWR(\n    [`StakeV2:stakedMycSupply:${active}`, chainId, mycAddress, \"balanceOf\", stakedMycTrackerAddress],\n    {\n      fetcher: fetcher(library, Token),\n    }\n  );\n\n  const { data: aums } = useSWR([`StakeV2:getAums:${active}`, chainId, mlpManagerAddress, \"getAums\"], {\n    fetcher: fetcher(library, MlpManager),\n  });\n\n  const { data: nativeTokenPrice } = useSWR(\n    [`StakeV2:nativeTokenPrice:${active}`, chainId, vaultAddress, \"getMinPrice\", nativeTokenAddress],\n    {\n      fetcher: fetcher(library, Vault),\n    }\n  );\n\n  const { data: vestingInfo } = useSWR(\n    [`StakeV2:vestingInfo:${active}`, chainId, readerAddress, \"getVestingInfo\", account || PLACEHOLDER_ACCOUNT],\n    {\n      fetcher: fetcher(library, ReaderV2, [vesterAddresses]),\n    }\n  );\n\n  const { data: ethBalance } = useSWR([library, \"getBalance\", account, \"latest\"], {\n    fetcher: (library, method, ...params) => library[method](...params),\n  });\n\n  const { mycPrice } = useMYCPrice(chainId, { arbitrum: chainId === ARBITRUM ? library : undefined }, active);\n\n  const { total: mycSupply } = useTotalMYCSupply();\n\n  let aum;\n  if (aums && aums.length > 0) {\n    aum = aums[0].add(aums[1]).div(2);\n  }\n\n  const { balanceData, supplyData } = getBalanceAndSupplyData(walletBalances);\n  const depositBalanceData = getDepositBalanceData(depositBalances);\n  const stakingData = getStakingData(stakingInfo);\n  const vestingData = getVestingData(vestingInfo);\n\n  const processedData = getProcessedData(\n    balanceData,\n    supplyData,\n    depositBalanceData,\n    stakingData,\n    vestingData,\n    aum,\n    nativeTokenPrice,\n    stakedMycSupply,\n    mycPrice,\n    mycSupply\n  );\n\n  const stakingApr = useStakingApr(mycPrice, nativeTokenPrice);\n\n  let totalRewardTokens;\n  if (processedData && processedData.bnMycInFeeMyc && processedData.bonusMycInFeeMyc) {\n    totalRewardTokens = processedData.bnMycInFeeMyc.add(processedData.bonusMycInFeeMyc);\n  }\n\n  let totalRewardTokensAndMlp;\n  if (totalRewardTokens && processedData && processedData.mlpBalance) {\n    totalRewardTokensAndMlp = totalRewardTokens.add(processedData.mlpBalance);\n  }\n\n  let earnMsg;\n  if (totalRewardTokensAndMlp && totalRewardTokensAndMlp.gt(0)) {\n    earnMsg = (\n      <div>\n        You are earning {nativeTokenSymbol} rewards with{\" \"}\n        {formatKeyAmount(processedData, \"mlpBalance\", MLP_DECIMALS, 2, true)} MLP tokens.\n      </div>\n    );\n  }\n\n  const showMlpCompoundModal = () => {\n    if (ethBalance?.eq(0)) {\n      helperToast.error(\"You don't have any ETH to pay for gas\");\n    } else {\n      setIsCompoundModalVisible(true);\n    }\n  };\n\n  const showMlpClaimModal = () => {\n    if (ethBalance?.eq(0)) {\n      helperToast.error(\"You don't have any ETH to pay for gas\");\n    } else {\n      setIsClaimModalVisible(true);\n    }\n  };\n\n  const showMycVesterDepositModal = () => {\n    if (ethBalance?.eq(0)) {\n      helperToast.error(\"You don't have any ETH to pay for gas\");\n      return;\n    } else if (!vestingData) {\n      helperToast.error(\"Loading vesting data, please wait.\");\n      return;\n    }\n    // let remainingVestableAmount = vestingData.mlpVester.maxVestableAmount.sub(vestingData.mlpVester.vestedAmount);\n    // if (processedData.esMycBalance.lt(remainingVestableAmount)) {\n    // }\n    let remainingVestableAmount = processedData.esMycBalance;\n    let maxVestableAmount = bigNumberify(remainingVestableAmount).add(vestingData.mlpVesterVestedAmount);\n\n    setIsVesterDepositModalVisible(true);\n    setVesterDepositTitle(\"esMYC Vault\");\n    setVesterDepositStakeTokenLabel(\"staked MYC + esMYC + Multiplier Points\");\n    setVesterDepositMaxAmount(remainingVestableAmount);\n    setVesterDepositBalance(processedData.esMycBalance);\n    setVesterDepositEscrowedBalance(vestingData.mlpVester.escrowedBalance);\n    setVesterDepositVestedAmount(vestingData.mlpVester.vestedAmount);\n    setVesterDepositMaxVestableAmount(maxVestableAmount);\n    setVesterDepositAverageStakedAmount(vestingData.mlpVester.averageStakedAmount);\n    setVesterDepositReserveAmount(vestingData.mlpVester.pairAmount);\n    setVesterDepositMaxReserveAmount(totalRewardTokens);\n    setVesterDepositValue(\"\");\n    setVesterDepositAddress(mlpVesterAddress);\n  };\n\n  const showMycVesterWithdrawModal = () => {\n    if (ethBalance?.eq(0)) {\n      helperToast.error(\"You don't have any ETH to pay for gas\");\n      return;\n    } else if (!vestingData || !vestingData.mlpVesterVestedAmount || vestingData.mlpVesterVestedAmount.eq(0)) {\n      helperToast.error(\"You have not deposited any tokens for vesting.\");\n      return;\n    }\n\n    setIsVesterWithdrawModalVisible(true);\n    setVesterWithdrawTitle(\"Withdraw from esMYC Vault\");\n    setVesterWithdrawAddress(mlpVesterAddress);\n  };\n\n  return (\n    <div className=\"StakeV2 Page page-layout default-container\">\n      <VesterDepositModal\n        isVisible={isVesterDepositModalVisible}\n        setIsVisible={setIsVesterDepositModalVisible}\n        chainId={chainId}\n        title={vesterDepositTitle}\n        stakeTokenLabel={vesterDepositStakeTokenLabel}\n        maxAmount={vesterDepositMaxAmount}\n        balance={vesterDepositBalance}\n        escrowedBalance={vesterDepositEscrowedBalance}\n        vestedAmount={vesterDepositVestedAmount}\n        averageStakedAmount={vesterDepositAverageStakedAmount}\n        maxVestableAmount={vesterDepositMaxVestableAmount}\n        reserveAmount={vesterDepositReserveAmount}\n        maxReserveAmount={vesterDepositMaxReserveAmount}\n        value={vesterDepositValue}\n        setValue={setVesterDepositValue}\n        vesterAddress={vesterDepositAddress}\n        setPendingTxns={setPendingTxns}\n      />\n      <VesterWithdrawModal\n        isVisible={isVesterWithdrawModalVisible}\n        setIsVisible={setIsVesterWithdrawModalVisible}\n        vesterAddress={vesterWithdrawAddress}\n        chainId={chainId}\n        title={vesterWithdrawTitle}\n        library={library}\n        setPendingTxns={setPendingTxns}\n      />\n      <CompoundModal\n        active={active}\n        account={account}\n        setPendingTxns={setPendingTxns}\n        isVisible={isCompoundModalVisible}\n        setIsVisible={setIsCompoundModalVisible}\n        rewardRouterAddress={rewardRouterAddress}\n        totalVesterRewards={processedData.totalVesterRewards}\n        wrappedTokenSymbol={wrappedTokenSymbol}\n        nativeTokenSymbol={nativeTokenSymbol}\n        library={library}\n        chainId={chainId}\n        processedData={processedData}\n        vesterAddress={mlpVesterAddress}\n        stakedMlpTrackerAddress={stakedMlpTrackerAddress}\n        esMycAddress={esMycAddress}\n      />\n      <ClaimModal\n        active={active}\n        setPendingTxns={setPendingTxns}\n        connectWallet={connectWallet}\n        library={library}\n        chainId={chainId}\n        isVisible={isClaimModalVisible}\n        setIsVisible={setIsClaimModalVisible}\n        rewardRouterAddress={rewardRouterAddress}\n        wrappedTokenSymbol={wrappedTokenSymbol}\n        nativeTokenSymbol={nativeTokenSymbol}\n        processedData={processedData}\n      />\n\n      <StakeV2Styled.StakeV2Content className=\"StakeV2-content\">\n        <StakeV2Styled.StakeV2Cards className=\"StakeV2-cards\">\n          <StakeV2Styled.StakeV2Card>\n            <div className=\"Page-title-section\">\n              <div className=\"Page-title\">Stake and Earn || Coming Soon</div>\n              <div className=\"Page-description\">\n                Stake your $ARBX and earn rewards.\n                \n              </div>\n              {earnMsg && <div className=\"Page-description\">{earnMsg}</div>}\n            </div>\n            \n            \n          </StakeV2Styled.StakeV2Card>\n        </StakeV2Styled.StakeV2Cards>\n      </StakeV2Styled.StakeV2Content>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}