{"ast":null,"code":"/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array-uint32\n*\n* @example\n* var ctor = require( '@stdlib/array-uint32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n// MODULES //\n\nvar hasUint32ArraySupport = require('@stdlib/assert-has-uint32array-support');\n\nvar builtin = require('./uint32array.js');\n\nvar polyfill = require('./polyfill.js'); // MAIN //\n\n\nvar ctor;\n\nif (hasUint32ArraySupport()) {\n  ctor = builtin;\n} else {\n  ctor = polyfill;\n} // EXPORTS //\n\n\nmodule.exports = ctor;","map":{"version":3,"names":["hasUint32ArraySupport","require","builtin","polyfill","ctor","module","exports"],"sources":["C:/Users/rober/Documents/copiaswaps-client/swaps-client/node_modules/@stdlib/array-uint32/lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array-uint32\n*\n* @example\n* var ctor = require( '@stdlib/array-uint32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( '@stdlib/assert-has-uint32array-support' );\nvar builtin = require( './uint32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,qBAAqB,GAAGC,OAAO,CAAE,wCAAF,CAAnC;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAE,kBAAF,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAE,eAAF,CAAtB,C,CAGA;;;AAEA,IAAIG,IAAJ;;AACA,IAAKJ,qBAAqB,EAA1B,EAA+B;EAC9BI,IAAI,GAAGF,OAAP;AACA,CAFD,MAEO;EACNE,IAAI,GAAGD,QAAP;AACA,C,CAGD;;;AAEAE,MAAM,CAACC,OAAP,GAAiBF,IAAjB"},"metadata":{},"sourceType":"script"}