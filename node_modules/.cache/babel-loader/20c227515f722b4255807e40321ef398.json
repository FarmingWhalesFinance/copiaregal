{"ast":null,"code":"\"use strict\"; // from: https://github.com/MetaMask/jazzicon/blob/master/index.js\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HSLToHex = exports.hexToHSL = exports.colorRotate = void 0;\n\nvar colorRotate = function (hex, degrees) {\n  var hsl = (0, exports.hexToHSL)(hex);\n  var hue = hsl.h;\n  hue = (hue + degrees) % 360;\n  hue = hue < 0 ? 360 + hue : hue;\n  hsl.h = hue;\n  return (0, exports.HSLToHex)(hsl);\n};\n\nexports.colorRotate = colorRotate;\n\nvar hexToHSL = function (hex) {\n  // Convert hex to RGB first\n  var rStr = \"0x\" + hex[1] + hex[2];\n  var gStr = \"0x\" + hex[3] + hex[4];\n  var bStr = \"0x\" + hex[5] + hex[6]; // Then to HSL\n\n  var r = parseInt(rStr) / 255;\n  var g = parseInt(gStr) / 255;\n  var b = parseInt(bStr) / 255;\n  var cmin = Math.min(r, g, b),\n      cmax = Math.max(r, g, b),\n      delta = cmax - cmin,\n      h = 0,\n      s = 0,\n      l = 0;\n  if (delta == 0) h = 0;else if (cmax == r) h = (g - b) / delta % 6;else if (cmax == g) h = (b - r) / delta + 2;else h = (r - g) / delta + 4;\n  h = Math.round(h * 60);\n  if (h < 0) h += 360;\n  l = (cmax + cmin) / 2;\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1);\n  return {\n    h: h,\n    s: s,\n    l: l\n  };\n};\n\nexports.hexToHSL = hexToHSL;\n\nvar HSLToHex = function (hsl) {\n  var h = hsl.h,\n      s = hsl.s,\n      l = hsl.l;\n  s /= 100;\n  l /= 100;\n  var c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs(h / 60 % 2 - 1)),\n      m = l - c / 2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  } // Having obtained RGB, convert channels to hex\n\n\n  var rStr = Math.round((r + m) * 255).toString(16);\n  var gStr = Math.round((g + m) * 255).toString(16);\n  var bStr = Math.round((b + m) * 255).toString(16); // Prepend 0s, if necessary\n\n  if (rStr.length == 1) rStr = \"0\" + rStr;\n  if (gStr.length == 1) gStr = \"0\" + gStr;\n  if (bStr.length == 1) bStr = \"0\" + bStr;\n  return \"#\" + rStr + gStr + bStr;\n};\n\nexports.HSLToHex = HSLToHex;","map":{"version":3,"sources":["../src/colorUtils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// from: https://github.com/MetaMask/jazzicon/blob/master/index.js\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HSLToHex = exports.hexToHSL = exports.colorRotate = void 0;\nvar colorRotate = function (hex, degrees) {\n    var hsl = (0, exports.hexToHSL)(hex);\n    var hue = hsl.h;\n    hue = (hue + degrees) % 360;\n    hue = hue < 0 ? 360 + hue : hue;\n    hsl.h = hue;\n    return (0, exports.HSLToHex)(hsl);\n};\nexports.colorRotate = colorRotate;\nvar hexToHSL = function (hex) {\n    // Convert hex to RGB first\n    var rStr = \"0x\" + hex[1] + hex[2];\n    var gStr = \"0x\" + hex[3] + hex[4];\n    var bStr = \"0x\" + hex[5] + hex[6];\n    // Then to HSL\n    var r = parseInt(rStr) / 255;\n    var g = parseInt(gStr) / 255;\n    var b = parseInt(bStr) / 255;\n    var cmin = Math.min(r, g, b), cmax = Math.max(r, g, b), delta = cmax - cmin, h = 0, s = 0, l = 0;\n    if (delta == 0)\n        h = 0;\n    else if (cmax == r)\n        h = ((g - b) / delta) % 6;\n    else if (cmax == g)\n        h = (b - r) / delta + 2;\n    else\n        h = (r - g) / delta + 4;\n    h = Math.round(h * 60);\n    if (h < 0)\n        h += 360;\n    l = (cmax + cmin) / 2;\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n    return { h: h, s: s, l: l };\n};\nexports.hexToHSL = hexToHSL;\nvar HSLToHex = function (hsl) {\n    var h = hsl.h, s = hsl.s, l = hsl.l;\n    s /= 100;\n    l /= 100;\n    var c = (1 - Math.abs(2 * l - 1)) * s, x = c * (1 - Math.abs(((h / 60) % 2) - 1)), m = l - c / 2, r = 0, g = 0, b = 0;\n    if (0 <= h && h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    }\n    else if (60 <= h && h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    }\n    else if (120 <= h && h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    }\n    else if (180 <= h && h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    }\n    else if (240 <= h && h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    }\n    else if (300 <= h && h < 360) {\n        r = c;\n        g = 0;\n        b = x;\n    }\n    // Having obtained RGB, convert channels to hex\n    var rStr = Math.round((r + m) * 255).toString(16);\n    var gStr = Math.round((g + m) * 255).toString(16);\n    var bStr = Math.round((b + m) * 255).toString(16);\n    // Prepend 0s, if necessary\n    if (rStr.length == 1)\n        rStr = \"0\" + rStr;\n    if (gStr.length == 1)\n        gStr = \"0\" + gStr;\n    if (bStr.length == 1)\n        bStr = \"0\" + bStr;\n    return \"#\" + rStr + gStr + bStr;\n};\nexports.HSLToHex = HSLToHex;\n//# sourceMappingURL=colorUtils.js.map"]},"metadata":{},"sourceType":"script"}