{"ast":null,"code":"import * as tsub from '@segment/tsub';\nexport var tsubMiddleware = function (rules) {\n  return function (_a) {\n    var payload = _a.payload,\n        integration = _a.integration,\n        next = _a.next;\n    var store = new tsub.Store(rules);\n    var rulesToApply = store.getRulesByDestinationName(integration);\n    rulesToApply.forEach(function (rule) {\n      var matchers = rule.matchers,\n          transformers = rule.transformers;\n\n      for (var i = 0; i < matchers.length; i++) {\n        if (tsub.matches(payload.obj, matchers[i])) {\n          payload.obj = tsub.transform(payload.obj, transformers[i]);\n\n          if (payload.obj === null) {\n            return next(null);\n          }\n        }\n      }\n    });\n    next(payload);\n  };\n};","map":{"version":3,"sources":["../../../../src/plugins/routing-middleware/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,IAAZ,MAAsB,eAAtB;AAMA,OAAO,IAAM,cAAc,GACzB,UAAC,KAAD,EAAqB;EACrB,OAAA,UAAC,EAAD,EAA+B;QAA5B,OAAO,GAAA,EAAA,CAAA,O;QAAE,WAAW,GAAA,EAAA,CAAA,W;QAAE,IAAI,GAAA,EAAA,CAAA,I;IAC3B,IAAM,KAAK,GAAG,IAAI,IAAI,CAAC,KAAT,CAAe,KAAf,CAAd;IACA,IAAM,YAAY,GAAG,KAAK,CAAC,yBAAN,CAAgC,WAAhC,CAArB;IAEA,YAAY,CAAC,OAAb,CAAqB,UAAC,IAAD,EAAK;MAChB,IAAA,QAAQ,GAAmB,IAAI,CAAvB,QAAR;MAAA,IAAU,YAAY,GAAK,IAAI,CAAT,YAAtB;;MAER,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;QACxC,IAAI,IAAI,CAAC,OAAL,CAAa,OAAO,CAAC,GAArB,EAA0B,QAAQ,CAAC,CAAD,CAAlC,CAAJ,EAA4C;UAC1C,OAAO,CAAC,GAAR,GAAc,IAAI,CAAC,SAAL,CAAe,OAAO,CAAC,GAAvB,EAA4B,YAAY,CAAC,CAAD,CAAxC,CAAd;;UAEA,IAAI,OAAO,CAAC,GAAR,KAAgB,IAApB,EAA0B;YACxB,OAAO,IAAI,CAAC,IAAD,CAAX;UACD;QACF;MACF;IACF,CAZD;IAcA,IAAI,CAAC,OAAD,CAAJ;EACD,CAnBD;AAmBC,CArBI","sourceRoot":"","sourcesContent":["import * as tsub from '@segment/tsub';\nexport var tsubMiddleware = function (rules) {\n    return function (_a) {\n        var payload = _a.payload, integration = _a.integration, next = _a.next;\n        var store = new tsub.Store(rules);\n        var rulesToApply = store.getRulesByDestinationName(integration);\n        rulesToApply.forEach(function (rule) {\n            var matchers = rule.matchers, transformers = rule.transformers;\n            for (var i = 0; i < matchers.length; i++) {\n                if (tsub.matches(payload.obj, matchers[i])) {\n                    payload.obj = tsub.transform(payload.obj, transformers[i]);\n                    if (payload.obj === null) {\n                        return next(null);\n                    }\n                }\n            }\n        });\n        next(payload);\n    };\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}