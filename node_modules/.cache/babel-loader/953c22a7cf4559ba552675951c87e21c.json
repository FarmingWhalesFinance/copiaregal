{"ast":null,"code":"(function (i, _) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = _() : \"function\" == typeof define && define.amd ? define(_) : (i = i || self, i.JSBI = _());\n})(this, function () {\n  'use strict';\n\n  var i = Math.imul,\n      _ = Math.clz32,\n      t = Math.abs,\n      e = Math.max,\n      g = Math.floor;\n\n  class o extends Array {\n    constructor(i, _) {\n      if (super(i), this.sign = _, i > o.__kMaxLength) throw new RangeError(\"Maximum BigInt size exceeded\");\n    }\n\n    static BigInt(i) {\n      var _ = Number.isFinite;\n\n      if (\"number\" == typeof i) {\n        if (0 === i) return o.__zero();\n        if (o.__isOneDigitInt(i)) return 0 > i ? o.__oneDigit(-i, !0) : o.__oneDigit(i, !1);\n        if (!_(i) || g(i) !== i) throw new RangeError(\"The number \" + i + \" cannot be converted to BigInt because it is not an integer\");\n        return o.__fromDouble(i);\n      }\n\n      if (\"string\" == typeof i) {\n        const _ = o.__fromString(i);\n\n        if (null === _) throw new SyntaxError(\"Cannot convert \" + i + \" to a BigInt\");\n        return _;\n      }\n\n      if (\"boolean\" == typeof i) return !0 === i ? o.__oneDigit(1, !1) : o.__zero();\n\n      if (\"object\" == typeof i) {\n        if (i.constructor === o) return i;\n\n        const _ = o.__toPrimitive(i);\n\n        return o.BigInt(_);\n      }\n\n      throw new TypeError(\"Cannot convert \" + i + \" to a BigInt\");\n    }\n\n    toDebugString() {\n      const i = [\"BigInt[\"];\n\n      for (const _ of this) i.push((_ ? (_ >>> 0).toString(16) : _) + \", \");\n\n      return i.push(\"]\"), i.join(\"\");\n    }\n\n    toString() {\n      let i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      if (2 > i || 36 < i) throw new RangeError(\"toString() radix argument must be between 2 and 36\");\n      return 0 === this.length ? \"0\" : 0 == (i & i - 1) ? o.__toStringBasePowerOfTwo(this, i) : o.__toStringGeneric(this, i, !1);\n    }\n\n    static toNumber(i) {\n      const _ = i.length;\n      if (0 === _) return 0;\n\n      if (1 === _) {\n        const _ = i.__unsignedDigit(0);\n\n        return i.sign ? -_ : _;\n      }\n\n      const t = i.__digit(_ - 1),\n            e = o.__clz30(t),\n            n = 30 * _ - e;\n\n      if (1024 < n) return i.sign ? -Infinity : 1 / 0;\n      let g = n - 1,\n          s = t,\n          l = _ - 1;\n      const r = e + 3;\n      let a = 32 === r ? 0 : s << r;\n      a >>>= 12;\n      const u = r - 12;\n      let d = 12 <= r ? 0 : s << 20 + r,\n          h = 20 + r;\n\n      for (0 < u && 0 < l && (l--, s = i.__digit(l), a |= s >>> 30 - u, d = s << u + 2, h = u + 2); 0 < h && 0 < l;) l--, s = i.__digit(l), d |= 30 <= h ? s << h - 30 : s >>> 30 - h, h -= 30;\n\n      const m = o.__decideRounding(i, h, l, s);\n\n      if ((1 === m || 0 === m && 1 == (1 & d)) && (d = d + 1 >>> 0, 0 === d && (a++, 0 != a >>> 20 && (a = 0, g++, 1023 < g)))) return i.sign ? -Infinity : 1 / 0;\n      const b = i.sign ? -2147483648 : 0;\n      return g = g + 1023 << 20, o.__kBitConversionInts[1] = b | g | a, o.__kBitConversionInts[0] = d, o.__kBitConversionDouble[0];\n    }\n\n    static unaryMinus(i) {\n      if (0 === i.length) return i;\n\n      const _ = i.__copy();\n\n      return _.sign = !i.sign, _;\n    }\n\n    static bitwiseNot(i) {\n      return i.sign ? o.__absoluteSubOne(i).__trim() : o.__absoluteAddOne(i, !0);\n    }\n\n    static exponentiate(i, _) {\n      if (_.sign) throw new RangeError(\"Exponent must be positive\");\n      if (0 === _.length) return o.__oneDigit(1, !1);\n      if (0 === i.length) return i;\n      if (1 === i.length && 1 === i.__digit(0)) return i.sign && 0 == (1 & _.__digit(0)) ? o.unaryMinus(i) : i;\n      if (1 < _.length) throw new RangeError(\"BigInt too big\");\n\n      let t = _.__unsignedDigit(0);\n\n      if (1 === t) return i;\n      if (t >= o.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n\n      if (1 === i.length && 2 === i.__digit(0)) {\n        const _ = 1 + (0 | t / 30),\n              e = i.sign && 0 != (1 & t),\n              n = new o(_, e);\n\n        n.__initializeDigits();\n\n        const g = 1 << t % 30;\n        return n.__setDigit(_ - 1, g), n;\n      }\n\n      let e = null,\n          n = i;\n\n      for (0 != (1 & t) && (e = i), t >>= 1; 0 !== t; t >>= 1) n = o.multiply(n, n), 0 != (1 & t) && (null === e ? e = n : e = o.multiply(e, n));\n\n      return e;\n    }\n\n    static multiply(_, t) {\n      if (0 === _.length) return _;\n      if (0 === t.length) return t;\n      let i = _.length + t.length;\n      30 <= _.__clzmsd() + t.__clzmsd() && i--;\n      const e = new o(i, _.sign !== t.sign);\n\n      e.__initializeDigits();\n\n      for (let n = 0; n < _.length; n++) o.__multiplyAccumulate(t, _.__digit(n), e, n);\n\n      return e.__trim();\n    }\n\n    static divide(i, _) {\n      if (0 === _.length) throw new RangeError(\"Division by zero\");\n      if (0 > o.__absoluteCompare(i, _)) return o.__zero();\n\n      const t = i.sign !== _.sign,\n            e = _.__unsignedDigit(0);\n\n      let n;\n\n      if (1 === _.length && 32767 >= e) {\n        if (1 === e) return t === i.sign ? i : o.unaryMinus(i);\n        n = o.__absoluteDivSmall(i, e, null);\n      } else n = o.__absoluteDivLarge(i, _, !0, !1);\n\n      return n.sign = t, n.__trim();\n    }\n\n    static remainder(i, _) {\n      if (0 === _.length) throw new RangeError(\"Division by zero\");\n      if (0 > o.__absoluteCompare(i, _)) return i;\n\n      const t = _.__unsignedDigit(0);\n\n      if (1 === _.length && 32767 >= t) {\n        if (1 === t) return o.__zero();\n\n        const _ = o.__absoluteModSmall(i, t);\n\n        return 0 === _ ? o.__zero() : o.__oneDigit(_, i.sign);\n      }\n\n      const e = o.__absoluteDivLarge(i, _, !1, !0);\n\n      return e.sign = i.sign, e.__trim();\n    }\n\n    static add(i, _) {\n      const t = i.sign;\n      return t === _.sign ? o.__absoluteAdd(i, _, t) : 0 <= o.__absoluteCompare(i, _) ? o.__absoluteSub(i, _, t) : o.__absoluteSub(_, i, !t);\n    }\n\n    static subtract(i, _) {\n      const t = i.sign;\n      return t === _.sign ? 0 <= o.__absoluteCompare(i, _) ? o.__absoluteSub(i, _, t) : o.__absoluteSub(_, i, !t) : o.__absoluteAdd(i, _, t);\n    }\n\n    static leftShift(i, _) {\n      return 0 === _.length || 0 === i.length ? i : _.sign ? o.__rightShiftByAbsolute(i, _) : o.__leftShiftByAbsolute(i, _);\n    }\n\n    static signedRightShift(i, _) {\n      return 0 === _.length || 0 === i.length ? i : _.sign ? o.__leftShiftByAbsolute(i, _) : o.__rightShiftByAbsolute(i, _);\n    }\n\n    static unsignedRightShift() {\n      throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\");\n    }\n\n    static lessThan(i, _) {\n      return 0 > o.__compareToBigInt(i, _);\n    }\n\n    static lessThanOrEqual(i, _) {\n      return 0 >= o.__compareToBigInt(i, _);\n    }\n\n    static greaterThan(i, _) {\n      return 0 < o.__compareToBigInt(i, _);\n    }\n\n    static greaterThanOrEqual(i, _) {\n      return 0 <= o.__compareToBigInt(i, _);\n    }\n\n    static equal(_, t) {\n      if (_.sign !== t.sign) return !1;\n      if (_.length !== t.length) return !1;\n\n      for (let e = 0; e < _.length; e++) if (_.__digit(e) !== t.__digit(e)) return !1;\n\n      return !0;\n    }\n\n    static notEqual(i, _) {\n      return !o.equal(i, _);\n    }\n\n    static bitwiseAnd(i, _) {\n      if (!i.sign && !_.sign) return o.__absoluteAnd(i, _).__trim();\n\n      if (i.sign && _.sign) {\n        const t = e(i.length, _.length) + 1;\n\n        let n = o.__absoluteSubOne(i, t);\n\n        const g = o.__absoluteSubOne(_);\n\n        return n = o.__absoluteOr(n, g, n), o.__absoluteAddOne(n, !0, n).__trim();\n      }\n\n      return i.sign && ([i, _] = [_, i]), o.__absoluteAndNot(i, o.__absoluteSubOne(_)).__trim();\n    }\n\n    static bitwiseXor(i, _) {\n      if (!i.sign && !_.sign) return o.__absoluteXor(i, _).__trim();\n\n      if (i.sign && _.sign) {\n        const t = e(i.length, _.length),\n              n = o.__absoluteSubOne(i, t),\n              g = o.__absoluteSubOne(_);\n\n        return o.__absoluteXor(n, g, n).__trim();\n      }\n\n      const t = e(i.length, _.length) + 1;\n      i.sign && ([i, _] = [_, i]);\n\n      let n = o.__absoluteSubOne(_, t);\n\n      return n = o.__absoluteXor(n, i, n), o.__absoluteAddOne(n, !0, n).__trim();\n    }\n\n    static bitwiseOr(i, _) {\n      const t = e(i.length, _.length);\n      if (!i.sign && !_.sign) return o.__absoluteOr(i, _).__trim();\n\n      if (i.sign && _.sign) {\n        let e = o.__absoluteSubOne(i, t);\n\n        const n = o.__absoluteSubOne(_);\n\n        return e = o.__absoluteAnd(e, n, e), o.__absoluteAddOne(e, !0, e).__trim();\n      }\n\n      i.sign && ([i, _] = [_, i]);\n\n      let n = o.__absoluteSubOne(_, t);\n\n      return n = o.__absoluteAndNot(n, i, n), o.__absoluteAddOne(n, !0, n).__trim();\n    }\n\n    static asIntN(_, t) {\n      if (0 === t.length) return t;\n      if (_ = g(_), 0 > _) throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");\n      if (0 === _) return o.__zero();\n      if (_ >= o.__kMaxLengthBits) return t;\n      const e = 0 | (_ + 29) / 30;\n      if (t.length < e) return t;\n\n      const s = t.__unsignedDigit(e - 1),\n            l = 1 << (_ - 1) % 30;\n\n      if (t.length === e && s < l) return t;\n      if (!((s & l) === l)) return o.__truncateToNBits(_, t);\n      if (!t.sign) return o.__truncateAndSubFromPowerOfTwo(_, t, !0);\n\n      if (0 == (s & l - 1)) {\n        for (let n = e - 2; 0 <= n; n--) if (0 !== t.__digit(n)) return o.__truncateAndSubFromPowerOfTwo(_, t, !1);\n\n        return t.length === e && s === l ? t : o.__truncateToNBits(_, t);\n      }\n\n      return o.__truncateAndSubFromPowerOfTwo(_, t, !1);\n    }\n\n    static asUintN(i, _) {\n      if (0 === _.length) return _;\n      if (i = g(i), 0 > i) throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");\n      if (0 === i) return o.__zero();\n\n      if (_.sign) {\n        if (i > o.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n        return o.__truncateAndSubFromPowerOfTwo(i, _, !1);\n      }\n\n      if (i >= o.__kMaxLengthBits) return _;\n      const t = 0 | (i + 29) / 30;\n      if (_.length < t) return _;\n      const e = i % 30;\n\n      if (_.length == t) {\n        if (0 === e) return _;\n\n        const i = _.__digit(t - 1);\n\n        if (0 == i >>> e) return _;\n      }\n\n      return o.__truncateToNBits(i, _);\n    }\n\n    static ADD(i, _) {\n      if (i = o.__toPrimitive(i), _ = o.__toPrimitive(_), \"string\" == typeof i) return \"string\" != typeof _ && (_ = _.toString()), i + _;\n      if (\"string\" == typeof _) return i.toString() + _;\n      if (i = o.__toNumeric(i), _ = o.__toNumeric(_), o.__isBigInt(i) && o.__isBigInt(_)) return o.add(i, _);\n      if (\"number\" == typeof i && \"number\" == typeof _) return i + _;\n      throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\");\n    }\n\n    static LT(i, _) {\n      return o.__compare(i, _, 0);\n    }\n\n    static LE(i, _) {\n      return o.__compare(i, _, 1);\n    }\n\n    static GT(i, _) {\n      return o.__compare(i, _, 2);\n    }\n\n    static GE(i, _) {\n      return o.__compare(i, _, 3);\n    }\n\n    static EQ(i, _) {\n      for (;;) {\n        if (o.__isBigInt(i)) return o.__isBigInt(_) ? o.equal(i, _) : o.EQ(_, i);\n\n        if (\"number\" == typeof i) {\n          if (o.__isBigInt(_)) return o.__equalToNumber(_, i);\n          if (\"object\" != typeof _) return i == _;\n          _ = o.__toPrimitive(_);\n        } else if (\"string\" == typeof i) {\n          if (o.__isBigInt(_)) return i = o.__fromString(i), null !== i && o.equal(i, _);\n          if (\"object\" != typeof _) return i == _;\n          _ = o.__toPrimitive(_);\n        } else if (\"boolean\" == typeof i) {\n          if (o.__isBigInt(_)) return o.__equalToNumber(_, +i);\n          if (\"object\" != typeof _) return i == _;\n          _ = o.__toPrimitive(_);\n        } else if (\"symbol\" == typeof i) {\n          if (o.__isBigInt(_)) return !1;\n          if (\"object\" != typeof _) return i == _;\n          _ = o.__toPrimitive(_);\n        } else if (\"object\" == typeof i) {\n          if (\"object\" == typeof _ && _.constructor !== o) return i == _;\n          i = o.__toPrimitive(i);\n        } else return i == _;\n      }\n    }\n\n    static NE(i, _) {\n      return !o.EQ(i, _);\n    }\n\n    static __zero() {\n      return new o(0, !1);\n    }\n\n    static __oneDigit(i, _) {\n      const t = new o(1, _);\n      return t.__setDigit(0, i), t;\n    }\n\n    __copy() {\n      const _ = new o(this.length, this.sign);\n\n      for (let t = 0; t < this.length; t++) _[t] = this[t];\n\n      return _;\n    }\n\n    __trim() {\n      let i = this.length,\n          _ = this[i - 1];\n\n      for (; 0 === _;) i--, _ = this[i - 1], this.pop();\n\n      return 0 === i && (this.sign = !1), this;\n    }\n\n    __initializeDigits() {\n      for (let _ = 0; _ < this.length; _++) this[_] = 0;\n    }\n\n    static __decideRounding(i, _, t, e) {\n      if (0 < _) return -1;\n      let n;\n      if (0 > _) n = -_ - 1;else {\n        if (0 === t) return -1;\n        t--, e = i.__digit(t), n = 29;\n      }\n      let g = 1 << n;\n      if (0 == (e & g)) return -1;\n      if (g -= 1, 0 != (e & g)) return 1;\n\n      for (; 0 < t;) if (t--, 0 !== i.__digit(t)) return 1;\n\n      return 0;\n    }\n\n    static __fromDouble(i) {\n      o.__kBitConversionDouble[0] = i;\n\n      const _ = 2047 & o.__kBitConversionInts[1] >>> 20,\n            t = _ - 1023,\n            e = (0 | t / 30) + 1,\n            n = new o(e, 0 > i);\n\n      let g = 1048575 & o.__kBitConversionInts[1] | 1048576,\n          s = o.__kBitConversionInts[0];\n      const l = 20,\n            r = t % 30;\n      let a,\n          u = 0;\n\n      if (20 > r) {\n        const i = l - r;\n        u = i + 32, a = g >>> i, g = g << 32 - i | s >>> i, s <<= 32 - i;\n      } else if (20 === r) u = 32, a = g, g = s, s = 0;else {\n        const i = r - l;\n        u = 32 - i, a = g << i | s >>> 32 - i, g = s << i, s = 0;\n      }\n\n      n.__setDigit(e - 1, a);\n\n      for (let _ = e - 2; 0 <= _; _--) 0 < u ? (u -= 30, a = g >>> 2, g = g << 30 | s >>> 2, s <<= 30) : a = 0, n.__setDigit(_, a);\n\n      return n.__trim();\n    }\n\n    static __isWhitespace(i) {\n      return !!(13 >= i && 9 <= i) || (159 >= i ? 32 == i : 131071 >= i ? 160 == i || 5760 == i : 196607 >= i ? (i &= 131071, 10 >= i || 40 == i || 41 == i || 47 == i || 95 == i || 4096 == i) : 65279 == i);\n    }\n\n    static __fromString(i) {\n      let _ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      let t = 0;\n      const e = i.length;\n      let n = 0;\n      if (n === e) return o.__zero();\n      let g = i.charCodeAt(n);\n\n      for (; o.__isWhitespace(g);) {\n        if (++n === e) return o.__zero();\n        g = i.charCodeAt(n);\n      }\n\n      if (43 === g) {\n        if (++n === e) return null;\n        g = i.charCodeAt(n), t = 1;\n      } else if (45 === g) {\n        if (++n === e) return null;\n        g = i.charCodeAt(n), t = -1;\n      }\n\n      if (0 === _) {\n        if (_ = 10, 48 === g) {\n          if (++n === e) return o.__zero();\n\n          if (g = i.charCodeAt(n), 88 === g || 120 === g) {\n            if (_ = 16, ++n === e) return null;\n            g = i.charCodeAt(n);\n          } else if (79 === g || 111 === g) {\n            if (_ = 8, ++n === e) return null;\n            g = i.charCodeAt(n);\n          } else if (66 === g || 98 === g) {\n            if (_ = 2, ++n === e) return null;\n            g = i.charCodeAt(n);\n          }\n        }\n      } else if (16 === _ && 48 === g) {\n        if (++n === e) return o.__zero();\n\n        if (g = i.charCodeAt(n), 88 === g || 120 === g) {\n          if (++n === e) return null;\n          g = i.charCodeAt(n);\n        }\n      }\n\n      if (0 != t && 10 !== _) return null;\n\n      for (; 48 === g;) {\n        if (++n === e) return o.__zero();\n        g = i.charCodeAt(n);\n      }\n\n      const s = e - n;\n      let l = o.__kMaxBitsPerChar[_],\n          r = o.__kBitsPerCharTableMultiplier - 1;\n      if (s > 1073741824 / l) return null;\n      const a = l * s + r >>> o.__kBitsPerCharTableShift,\n            u = new o(0 | (a + 29) / 30, !1),\n            h = 10 > _ ? _ : 10,\n            b = 10 < _ ? _ - 10 : 0;\n\n      if (0 == (_ & _ - 1)) {\n        l >>= o.__kBitsPerCharTableShift;\n        const _ = [],\n              t = [];\n        let s = !1;\n\n        do {\n          let o = 0,\n              r = 0;\n\n          for (;;) {\n            let _;\n\n            if (g - 48 >>> 0 < h) _ = g - 48;else if ((32 | g) - 97 >>> 0 < b) _ = (32 | g) - 87;else {\n              s = !0;\n              break;\n            }\n\n            if (r += l, o = o << l | _, ++n === e) {\n              s = !0;\n              break;\n            }\n\n            if (g = i.charCodeAt(n), 30 < r + l) break;\n          }\n\n          _.push(o), t.push(r);\n        } while (!s);\n\n        o.__fillFromParts(u, _, t);\n      } else {\n        u.__initializeDigits();\n\n        let t = !1,\n            s = 0;\n\n        do {\n          let a = 0,\n              D = 1;\n\n          for (;;) {\n            let o;\n            if (g - 48 >>> 0 < h) o = g - 48;else if ((32 | g) - 97 >>> 0 < b) o = (32 | g) - 87;else {\n              t = !0;\n              break;\n            }\n            const l = D * _;\n            if (1073741823 < l) break;\n\n            if (D = l, a = a * _ + o, s++, ++n === e) {\n              t = !0;\n              break;\n            }\n\n            g = i.charCodeAt(n);\n          }\n\n          r = 30 * o.__kBitsPerCharTableMultiplier - 1;\n          const c = 0 | (l * s + r >>> o.__kBitsPerCharTableShift) / 30;\n\n          u.__inplaceMultiplyAdd(D, a, c);\n        } while (!t);\n      }\n\n      if (n !== e) {\n        if (!o.__isWhitespace(g)) return null;\n\n        for (n++; n < e; n++) if (g = i.charCodeAt(n), !o.__isWhitespace(g)) return null;\n      }\n\n      return u.sign = -1 == t, u.__trim();\n    }\n\n    static __fillFromParts(_, t, e) {\n      let n = 0,\n          g = 0,\n          o = 0;\n\n      for (let s = t.length - 1; 0 <= s; s--) {\n        const i = t[s],\n              l = e[s];\n        g |= i << o, o += l, 30 === o ? (_.__setDigit(n++, g), o = 0, g = 0) : 30 < o && (_.__setDigit(n++, 1073741823 & g), o -= 30, g = i >>> l - o);\n      }\n\n      if (0 !== g) {\n        if (n >= _.length) throw new Error(\"implementation bug\");\n\n        _.__setDigit(n++, g);\n      }\n\n      for (; n < _.length; n++) _.__setDigit(n, 0);\n    }\n\n    static __toStringBasePowerOfTwo(_, i) {\n      const t = _.length;\n      let e = i - 1;\n      e = (85 & e >>> 1) + (85 & e), e = (51 & e >>> 2) + (51 & e), e = (15 & e >>> 4) + (15 & e);\n\n      const n = e,\n            g = i - 1,\n            s = _.__digit(t - 1),\n            l = o.__clz30(s);\n\n      let r = 0 | (30 * t - l + n - 1) / n;\n      if (_.sign && r++, 268435456 < r) throw new Error(\"string too long\");\n      const a = Array(r);\n      let u = r - 1,\n          d = 0,\n          h = 0;\n\n      for (let e = 0; e < t - 1; e++) {\n        const i = _.__digit(e),\n              t = (d | i << h) & g;\n\n        a[u--] = o.__kConversionChars[t];\n        const s = n - h;\n\n        for (d = i >>> s, h = 30 - s; h >= n;) a[u--] = o.__kConversionChars[d & g], d >>>= n, h -= n;\n      }\n\n      const m = (d | s << h) & g;\n\n      for (a[u--] = o.__kConversionChars[m], d = s >>> n - h; 0 !== d;) a[u--] = o.__kConversionChars[d & g], d >>>= n;\n\n      if (_.sign && (a[u--] = \"-\"), -1 != u) throw new Error(\"implementation bug\");\n      return a.join(\"\");\n    }\n\n    static __toStringGeneric(_, i, t) {\n      const e = _.length;\n      if (0 === e) return \"\";\n\n      if (1 === e) {\n        let e = _.__unsignedDigit(0).toString(i);\n\n        return !1 === t && _.sign && (e = \"-\" + e), e;\n      }\n\n      const n = 30 * e - o.__clz30(_.__digit(e - 1)),\n            g = o.__kMaxBitsPerChar[i],\n            s = g - 1;\n\n      let l = n * o.__kBitsPerCharTableMultiplier;\n      l += s - 1, l = 0 | l / s;\n      const r = l + 1 >> 1,\n            a = o.exponentiate(o.__oneDigit(i, !1), o.__oneDigit(r, !1));\n      let u, d;\n\n      const h = a.__unsignedDigit(0);\n\n      if (1 === a.length && 32767 >= h) {\n        u = new o(_.length, !1), u.__initializeDigits();\n        let t = 0;\n\n        for (let e = 2 * _.length - 1; 0 <= e; e--) {\n          const i = t << 15 | _.__halfDigit(e);\n\n          u.__setHalfDigit(e, 0 | i / h), t = 0 | i % h;\n        }\n\n        d = t.toString(i);\n      } else {\n        const t = o.__absoluteDivLarge(_, a, !0, !0);\n\n        u = t.quotient;\n\n        const e = t.remainder.__trim();\n\n        d = o.__toStringGeneric(e, i, !0);\n      }\n\n      u.__trim();\n\n      let m = o.__toStringGeneric(u, i, !0);\n\n      for (; d.length < r;) d = \"0\" + d;\n\n      return !1 === t && _.sign && (m = \"-\" + m), m + d;\n    }\n\n    static __unequalSign(i) {\n      return i ? -1 : 1;\n    }\n\n    static __absoluteGreater(i) {\n      return i ? -1 : 1;\n    }\n\n    static __absoluteLess(i) {\n      return i ? 1 : -1;\n    }\n\n    static __compareToBigInt(i, _) {\n      const t = i.sign;\n      if (t !== _.sign) return o.__unequalSign(t);\n\n      const e = o.__absoluteCompare(i, _);\n\n      return 0 < e ? o.__absoluteGreater(t) : 0 > e ? o.__absoluteLess(t) : 0;\n    }\n\n    static __compareToNumber(i, _) {\n      if (o.__isOneDigitInt(_)) {\n        const e = i.sign,\n              n = 0 > _;\n        if (e !== n) return o.__unequalSign(e);\n\n        if (0 === i.length) {\n          if (n) throw new Error(\"implementation bug\");\n          return 0 === _ ? 0 : -1;\n        }\n\n        if (1 < i.length) return o.__absoluteGreater(e);\n\n        const g = t(_),\n              s = i.__unsignedDigit(0);\n\n        return s > g ? o.__absoluteGreater(e) : s < g ? o.__absoluteLess(e) : 0;\n      }\n\n      return o.__compareToDouble(i, _);\n    }\n\n    static __compareToDouble(i, _) {\n      if (_ !== _) return _;\n      if (_ === 1 / 0) return -1;\n      if (_ === -Infinity) return 1;\n      const t = i.sign;\n      if (t !== 0 > _) return o.__unequalSign(t);\n      if (0 === _) throw new Error(\"implementation bug: should be handled elsewhere\");\n      if (0 === i.length) return -1;\n      o.__kBitConversionDouble[0] = _;\n      const e = 2047 & o.__kBitConversionInts[1] >>> 20;\n      if (2047 == e) throw new Error(\"implementation bug: handled elsewhere\");\n      const n = e - 1023;\n      if (0 > n) return o.__absoluteGreater(t);\n      const g = i.length;\n\n      let s = i.__digit(g - 1);\n\n      const l = o.__clz30(s),\n            r = 30 * g - l,\n            a = n + 1;\n\n      if (r < a) return o.__absoluteLess(t);\n      if (r > a) return o.__absoluteGreater(t);\n      let u = 1048576 | 1048575 & o.__kBitConversionInts[1],\n          d = o.__kBitConversionInts[0];\n      const h = 20,\n            m = 29 - l;\n      if (m !== (0 | (r - 1) % 30)) throw new Error(\"implementation bug\");\n      let b,\n          D = 0;\n\n      if (20 > m) {\n        const i = h - m;\n        D = i + 32, b = u >>> i, u = u << 32 - i | d >>> i, d <<= 32 - i;\n      } else if (20 === m) D = 32, b = u, u = d, d = 0;else {\n        const i = m - h;\n        D = 32 - i, b = u << i | d >>> 32 - i, u = d << i, d = 0;\n      }\n\n      if (s >>>= 0, b >>>= 0, s > b) return o.__absoluteGreater(t);\n      if (s < b) return o.__absoluteLess(t);\n\n      for (let e = g - 2; 0 <= e; e--) {\n        0 < D ? (D -= 30, b = u >>> 2, u = u << 30 | d >>> 2, d <<= 30) : b = 0;\n\n        const _ = i.__unsignedDigit(e);\n\n        if (_ > b) return o.__absoluteGreater(t);\n        if (_ < b) return o.__absoluteLess(t);\n      }\n\n      if (0 !== u || 0 !== d) {\n        if (0 === D) throw new Error(\"implementation bug\");\n        return o.__absoluteLess(t);\n      }\n\n      return 0;\n    }\n\n    static __equalToNumber(i, _) {\n      return o.__isOneDigitInt(_) ? 0 === _ ? 0 === i.length : 1 === i.length && i.sign === 0 > _ && i.__unsignedDigit(0) === t(_) : 0 === o.__compareToDouble(i, _);\n    }\n\n    static __comparisonResultToBool(i, _) {\n      return 0 === _ ? 0 > i : 1 === _ ? 0 >= i : 2 === _ ? 0 < i : 3 === _ ? 0 <= i : void 0;\n    }\n\n    static __compare(i, _, t) {\n      if (i = o.__toPrimitive(i), _ = o.__toPrimitive(_), \"string\" == typeof i && \"string\" == typeof _) switch (t) {\n        case 0:\n          return i < _;\n\n        case 1:\n          return i <= _;\n\n        case 2:\n          return i > _;\n\n        case 3:\n          return i >= _;\n      }\n      if (o.__isBigInt(i) && \"string\" == typeof _) return _ = o.__fromString(_), null !== _ && o.__comparisonResultToBool(o.__compareToBigInt(i, _), t);\n      if (\"string\" == typeof i && o.__isBigInt(_)) return i = o.__fromString(i), null !== i && o.__comparisonResultToBool(o.__compareToBigInt(i, _), t);\n\n      if (i = o.__toNumeric(i), _ = o.__toNumeric(_), o.__isBigInt(i)) {\n        if (o.__isBigInt(_)) return o.__comparisonResultToBool(o.__compareToBigInt(i, _), t);\n        if (\"number\" != typeof _) throw new Error(\"implementation bug\");\n        return o.__comparisonResultToBool(o.__compareToNumber(i, _), t);\n      }\n\n      if (\"number\" != typeof i) throw new Error(\"implementation bug\");\n      if (o.__isBigInt(_)) return o.__comparisonResultToBool(o.__compareToNumber(_, i), 2 ^ t);\n      if (\"number\" != typeof _) throw new Error(\"implementation bug\");\n      return 0 === t ? i < _ : 1 === t ? i <= _ : 2 === t ? i > _ : 3 === t ? i >= _ : void 0;\n    }\n\n    __clzmsd() {\n      return o.__clz30(this.__digit(this.length - 1));\n    }\n\n    static __absoluteAdd(_, t, e) {\n      if (_.length < t.length) return o.__absoluteAdd(t, _, e);\n      if (0 === _.length) return _;\n      if (0 === t.length) return _.sign === e ? _ : o.unaryMinus(_);\n      let n = _.length;\n      (0 === _.__clzmsd() || t.length === _.length && 0 === t.__clzmsd()) && n++;\n      const g = new o(n, e);\n      let s = 0,\n          l = 0;\n\n      for (; l < t.length; l++) {\n        const i = _.__digit(l) + t.__digit(l) + s;\n        s = i >>> 30, g.__setDigit(l, 1073741823 & i);\n      }\n\n      for (; l < _.length; l++) {\n        const i = _.__digit(l) + s;\n        s = i >>> 30, g.__setDigit(l, 1073741823 & i);\n      }\n\n      return l < g.length && g.__setDigit(l, s), g.__trim();\n    }\n\n    static __absoluteSub(_, t, e) {\n      if (0 === _.length) return _;\n      if (0 === t.length) return _.sign === e ? _ : o.unaryMinus(_);\n      const n = new o(_.length, e);\n      let g = 0,\n          s = 0;\n\n      for (; s < t.length; s++) {\n        const i = _.__digit(s) - t.__digit(s) - g;\n        g = 1 & i >>> 30, n.__setDigit(s, 1073741823 & i);\n      }\n\n      for (; s < _.length; s++) {\n        const i = _.__digit(s) - g;\n        g = 1 & i >>> 30, n.__setDigit(s, 1073741823 & i);\n      }\n\n      return n.__trim();\n    }\n\n    static __absoluteAddOne(_, i) {\n      let t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      const e = _.length;\n      null === t ? t = new o(e, i) : t.sign = i;\n      let n = 1;\n\n      for (let g = 0; g < e; g++) {\n        const i = _.__digit(g) + n;\n        n = i >>> 30, t.__setDigit(g, 1073741823 & i);\n      }\n\n      return 0 != n && t.__setDigitGrow(e, 1), t;\n    }\n\n    static __absoluteSubOne(_, t) {\n      const e = _.length;\n      t = t || e;\n      const n = new o(t, !1);\n      let g = 1;\n\n      for (let o = 0; o < e; o++) {\n        const i = _.__digit(o) - g;\n        g = 1 & i >>> 30, n.__setDigit(o, 1073741823 & i);\n      }\n\n      if (0 != g) throw new Error(\"implementation bug\");\n\n      for (let g = e; g < t; g++) n.__setDigit(g, 0);\n\n      return n;\n    }\n\n    static __absoluteAnd(_, t) {\n      let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      let n = _.length,\n          g = t.length,\n          s = g;\n\n      if (n < g) {\n        s = n;\n        const i = _,\n              e = n;\n        _ = t, n = g, t = i, g = e;\n      }\n\n      let l = s;\n      null === e ? e = new o(l, !1) : l = e.length;\n      let r = 0;\n\n      for (; r < s; r++) e.__setDigit(r, _.__digit(r) & t.__digit(r));\n\n      for (; r < l; r++) e.__setDigit(r, 0);\n\n      return e;\n    }\n\n    static __absoluteAndNot(_, t) {\n      let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      const n = _.length,\n            g = t.length;\n      let s = g;\n      n < g && (s = n);\n      let l = n;\n      null === e ? e = new o(l, !1) : l = e.length;\n      let r = 0;\n\n      for (; r < s; r++) e.__setDigit(r, _.__digit(r) & ~t.__digit(r));\n\n      for (; r < n; r++) e.__setDigit(r, _.__digit(r));\n\n      for (; r < l; r++) e.__setDigit(r, 0);\n\n      return e;\n    }\n\n    static __absoluteOr(_, t) {\n      let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      let n = _.length,\n          g = t.length,\n          s = g;\n\n      if (n < g) {\n        s = n;\n        const i = _,\n              e = n;\n        _ = t, n = g, t = i, g = e;\n      }\n\n      let l = n;\n      null === e ? e = new o(l, !1) : l = e.length;\n      let r = 0;\n\n      for (; r < s; r++) e.__setDigit(r, _.__digit(r) | t.__digit(r));\n\n      for (; r < n; r++) e.__setDigit(r, _.__digit(r));\n\n      for (; r < l; r++) e.__setDigit(r, 0);\n\n      return e;\n    }\n\n    static __absoluteXor(_, t) {\n      let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      let n = _.length,\n          g = t.length,\n          s = g;\n\n      if (n < g) {\n        s = n;\n        const i = _,\n              e = n;\n        _ = t, n = g, t = i, g = e;\n      }\n\n      let l = n;\n      null === e ? e = new o(l, !1) : l = e.length;\n      let r = 0;\n\n      for (; r < s; r++) e.__setDigit(r, _.__digit(r) ^ t.__digit(r));\n\n      for (; r < n; r++) e.__setDigit(r, _.__digit(r));\n\n      for (; r < l; r++) e.__setDigit(r, 0);\n\n      return e;\n    }\n\n    static __absoluteCompare(_, t) {\n      const e = _.length - t.length;\n      if (0 != e) return e;\n      let n = _.length - 1;\n\n      for (; 0 <= n && _.__digit(n) === t.__digit(n);) n--;\n\n      return 0 > n ? 0 : _.__unsignedDigit(n) > t.__unsignedDigit(n) ? 1 : -1;\n    }\n\n    static __multiplyAccumulate(_, t, e, n) {\n      if (0 === t) return;\n      const g = 32767 & t,\n            s = t >>> 15;\n      let l = 0,\n          r = 0;\n\n      for (let a, u = 0; u < _.length; u++, n++) {\n        a = e.__digit(n);\n\n        const i = _.__digit(u),\n              t = 32767 & i,\n              d = i >>> 15,\n              h = o.__imul(t, g),\n              m = o.__imul(t, s),\n              b = o.__imul(d, g),\n              D = o.__imul(d, s);\n\n        a += r + h + l, l = a >>> 30, a &= 1073741823, a += ((32767 & m) << 15) + ((32767 & b) << 15), l += a >>> 30, r = D + (m >>> 15) + (b >>> 15), e.__setDigit(n, 1073741823 & a);\n      }\n\n      for (; 0 != l || 0 !== r; n++) {\n        let i = e.__digit(n);\n\n        i += l + r, r = 0, l = i >>> 30, e.__setDigit(n, 1073741823 & i);\n      }\n    }\n\n    static __internalMultiplyAdd(_, t, e, g, s) {\n      let l = e,\n          a = 0;\n\n      for (let n = 0; n < g; n++) {\n        const i = _.__digit(n),\n              e = o.__imul(32767 & i, t),\n              g = o.__imul(i >>> 15, t),\n              u = e + ((32767 & g) << 15) + a + l;\n\n        l = u >>> 30, a = g >>> 15, s.__setDigit(n, 1073741823 & u);\n      }\n\n      if (s.length > g) for (s.__setDigit(g++, l + a); g < s.length;) s.__setDigit(g++, 0);else if (0 !== l + a) throw new Error(\"implementation bug\");\n    }\n\n    __inplaceMultiplyAdd(i, _, t) {\n      t > this.length && (t = this.length);\n      const e = 32767 & i,\n            n = i >>> 15;\n      let g = 0,\n          s = _;\n\n      for (let l = 0; l < t; l++) {\n        const i = this.__digit(l),\n              _ = 32767 & i,\n              t = i >>> 15,\n              r = o.__imul(_, e),\n              a = o.__imul(_, n),\n              u = o.__imul(t, e),\n              d = o.__imul(t, n);\n\n        let h = s + r + g;\n        g = h >>> 30, h &= 1073741823, h += ((32767 & a) << 15) + ((32767 & u) << 15), g += h >>> 30, s = d + (a >>> 15) + (u >>> 15), this.__setDigit(l, 1073741823 & h);\n      }\n\n      if (0 != g || 0 !== s) throw new Error(\"implementation bug\");\n    }\n\n    static __absoluteDivSmall(_, t) {\n      let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      null === e && (e = new o(_.length, !1));\n      let n = 0;\n\n      for (let g, o = 2 * _.length - 1; 0 <= o; o -= 2) {\n        g = (n << 15 | _.__halfDigit(o)) >>> 0;\n        const i = 0 | g / t;\n        n = 0 | g % t, g = (n << 15 | _.__halfDigit(o - 1)) >>> 0;\n        const s = 0 | g / t;\n        n = 0 | g % t, e.__setDigit(o >>> 1, i << 15 | s);\n      }\n\n      return e;\n    }\n\n    static __absoluteModSmall(_, t) {\n      let e = 0;\n\n      for (let n = 2 * _.length - 1; 0 <= n; n--) {\n        const i = (e << 15 | _.__halfDigit(n)) >>> 0;\n        e = 0 | i % t;\n      }\n\n      return e;\n    }\n\n    static __absoluteDivLarge(i, _, t, e) {\n      const g = _.__halfDigitLength(),\n            n = _.length,\n            s = i.__halfDigitLength() - g;\n\n      let l = null;\n      t && (l = new o(s + 2 >>> 1, !1), l.__initializeDigits());\n      const r = new o(g + 2 >>> 1, !1);\n\n      r.__initializeDigits();\n\n      const a = o.__clz15(_.__halfDigit(g - 1));\n\n      0 < a && (_ = o.__specialLeftShift(_, a, 0));\n\n      const d = o.__specialLeftShift(i, a, 1),\n            u = _.__halfDigit(g - 1);\n\n      let h = 0;\n\n      for (let a, m = s; 0 <= m; m--) {\n        a = 32767;\n\n        const i = d.__halfDigit(m + g);\n\n        if (i !== u) {\n          const t = (i << 15 | d.__halfDigit(m + g - 1)) >>> 0;\n          a = 0 | t / u;\n          let e = 0 | t % u;\n\n          const n = _.__halfDigit(g - 2),\n                s = d.__halfDigit(m + g - 2);\n\n          for (; o.__imul(a, n) >>> 0 > (e << 16 | s) >>> 0 && (a--, e += u, !(32767 < e)););\n        }\n\n        o.__internalMultiplyAdd(_, a, 0, n, r);\n\n        let e = d.__inplaceSub(r, m, g + 1);\n\n        0 !== e && (e = d.__inplaceAdd(_, m, g), d.__setHalfDigit(m + g, 32767 & d.__halfDigit(m + g) + e), a--), t && (1 & m ? h = a << 15 : l.__setDigit(m >>> 1, h | a));\n      }\n\n      if (e) return d.__inplaceRightShift(a), t ? {\n        quotient: l,\n        remainder: d\n      } : d;\n      if (t) return l;\n      throw new Error(\"unreachable\");\n    }\n\n    static __clz15(i) {\n      return o.__clz30(i) - 15;\n    }\n\n    __inplaceAdd(_, t, e) {\n      let n = 0;\n\n      for (let g = 0; g < e; g++) {\n        const i = this.__halfDigit(t + g) + _.__halfDigit(g) + n;\n        n = i >>> 15, this.__setHalfDigit(t + g, 32767 & i);\n      }\n\n      return n;\n    }\n\n    __inplaceSub(_, t, e) {\n      let n = 0;\n\n      if (1 & t) {\n        t >>= 1;\n\n        let g = this.__digit(t),\n            o = 32767 & g,\n            s = 0;\n\n        for (; s < e - 1 >>> 1; s++) {\n          const i = _.__digit(s),\n                e = (g >>> 15) - (32767 & i) - n;\n\n          n = 1 & e >>> 15, this.__setDigit(t + s, (32767 & e) << 15 | 32767 & o), g = this.__digit(t + s + 1), o = (32767 & g) - (i >>> 15) - n, n = 1 & o >>> 15;\n        }\n\n        const i = _.__digit(s),\n              l = (g >>> 15) - (32767 & i) - n;\n\n        n = 1 & l >>> 15, this.__setDigit(t + s, (32767 & l) << 15 | 32767 & o);\n        if (t + s + 1 >= this.length) throw new RangeError(\"out of bounds\");\n        0 == (1 & e) && (g = this.__digit(t + s + 1), o = (32767 & g) - (i >>> 15) - n, n = 1 & o >>> 15, this.__setDigit(t + _.length, 1073709056 & g | 32767 & o));\n      } else {\n        t >>= 1;\n        let g = 0;\n\n        for (; g < _.length - 1; g++) {\n          const i = this.__digit(t + g),\n                e = _.__digit(g),\n                o = (32767 & i) - (32767 & e) - n;\n\n          n = 1 & o >>> 15;\n          const s = (i >>> 15) - (e >>> 15) - n;\n          n = 1 & s >>> 15, this.__setDigit(t + g, (32767 & s) << 15 | 32767 & o);\n        }\n\n        const i = this.__digit(t + g),\n              o = _.__digit(g),\n              s = (32767 & i) - (32767 & o) - n;\n\n        n = 1 & s >>> 15;\n        let l = 0;\n        0 == (1 & e) && (l = (i >>> 15) - (o >>> 15) - n, n = 1 & l >>> 15), this.__setDigit(t + g, (32767 & l) << 15 | 32767 & s);\n      }\n\n      return n;\n    }\n\n    __inplaceRightShift(_) {\n      if (0 === _) return;\n\n      let t = this.__digit(0) >>> _;\n\n      const e = this.length - 1;\n\n      for (let n = 0; n < e; n++) {\n        const i = this.__digit(n + 1);\n\n        this.__setDigit(n, 1073741823 & i << 30 - _ | t), t = i >>> _;\n      }\n\n      this.__setDigit(e, t);\n    }\n\n    static __specialLeftShift(_, t, e) {\n      const g = _.length,\n            n = new o(g + e, !1);\n\n      if (0 === t) {\n        for (let t = 0; t < g; t++) n.__setDigit(t, _.__digit(t));\n\n        return 0 < e && n.__setDigit(g, 0), n;\n      }\n\n      let s = 0;\n\n      for (let o = 0; o < g; o++) {\n        const i = _.__digit(o);\n\n        n.__setDigit(o, 1073741823 & i << t | s), s = i >>> 30 - t;\n      }\n\n      return 0 < e && n.__setDigit(g, s), n;\n    }\n\n    static __leftShiftByAbsolute(_, i) {\n      const t = o.__toShiftAmount(i);\n\n      if (0 > t) throw new RangeError(\"BigInt too big\");\n      const e = 0 | t / 30,\n            n = t % 30,\n            g = _.length,\n            s = 0 !== n && 0 != _.__digit(g - 1) >>> 30 - n,\n            l = g + e + (s ? 1 : 0),\n            r = new o(l, _.sign);\n\n      if (0 === n) {\n        let t = 0;\n\n        for (; t < e; t++) r.__setDigit(t, 0);\n\n        for (; t < l; t++) r.__setDigit(t, _.__digit(t - e));\n      } else {\n        let t = 0;\n\n        for (let _ = 0; _ < e; _++) r.__setDigit(_, 0);\n\n        for (let o = 0; o < g; o++) {\n          const i = _.__digit(o);\n\n          r.__setDigit(o + e, 1073741823 & i << n | t), t = i >>> 30 - n;\n        }\n\n        if (s) r.__setDigit(g + e, t);else if (0 !== t) throw new Error(\"implementation bug\");\n      }\n\n      return r.__trim();\n    }\n\n    static __rightShiftByAbsolute(_, i) {\n      const t = _.length,\n            e = _.sign,\n            n = o.__toShiftAmount(i);\n\n      if (0 > n) return o.__rightShiftByMaximum(e);\n      const g = 0 | n / 30,\n            s = n % 30;\n      let l = t - g;\n      if (0 >= l) return o.__rightShiftByMaximum(e);\n      let r = !1;\n\n      if (e) {\n        if (0 != (_.__digit(g) & (1 << s) - 1)) r = !0;else for (let t = 0; t < g; t++) if (0 !== _.__digit(t)) {\n          r = !0;\n          break;\n        }\n      }\n\n      if (r && 0 === s) {\n        const i = _.__digit(t - 1);\n\n        0 == ~i && l++;\n      }\n\n      let a = new o(l, e);\n\n      if (0 === s) {\n        a.__setDigit(l - 1, 0);\n\n        for (let e = g; e < t; e++) a.__setDigit(e - g, _.__digit(e));\n      } else {\n        let e = _.__digit(g) >>> s;\n        const n = t - g - 1;\n\n        for (let t = 0; t < n; t++) {\n          const i = _.__digit(t + g + 1);\n\n          a.__setDigit(t, 1073741823 & i << 30 - s | e), e = i >>> s;\n        }\n\n        a.__setDigit(n, e);\n      }\n\n      return r && (a = o.__absoluteAddOne(a, !0, a)), a.__trim();\n    }\n\n    static __rightShiftByMaximum(i) {\n      return i ? o.__oneDigit(1, !0) : o.__zero();\n    }\n\n    static __toShiftAmount(i) {\n      if (1 < i.length) return -1;\n\n      const _ = i.__unsignedDigit(0);\n\n      return _ > o.__kMaxLengthBits ? -1 : _;\n    }\n\n    static __toPrimitive(i) {\n      let _ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"default\";\n\n      if (\"object\" != typeof i) return i;\n      if (i.constructor === o) return i;\n\n      if (\"undefined\" != typeof Symbol && \"symbol\" == typeof Symbol.toPrimitive) {\n        const t = i[Symbol.toPrimitive];\n\n        if (t) {\n          const i = t(_);\n          if (\"object\" != typeof i) return i;\n          throw new TypeError(\"Cannot convert object to primitive value\");\n        }\n      }\n\n      const t = i.valueOf;\n\n      if (t) {\n        const _ = t.call(i);\n\n        if (\"object\" != typeof _) return _;\n      }\n\n      const e = i.toString;\n\n      if (e) {\n        const _ = e.call(i);\n\n        if (\"object\" != typeof _) return _;\n      }\n\n      throw new TypeError(\"Cannot convert object to primitive value\");\n    }\n\n    static __toNumeric(i) {\n      return o.__isBigInt(i) ? i : +i;\n    }\n\n    static __isBigInt(i) {\n      return \"object\" == typeof i && null !== i && i.constructor === o;\n    }\n\n    static __truncateToNBits(i, _) {\n      const t = 0 | (i + 29) / 30,\n            e = new o(t, _.sign),\n            n = t - 1;\n\n      for (let t = 0; t < n; t++) e.__setDigit(t, _.__digit(t));\n\n      let g = _.__digit(n);\n\n      if (0 != i % 30) {\n        const _ = 32 - i % 30;\n\n        g = g << _ >>> _;\n      }\n\n      return e.__setDigit(n, g), e.__trim();\n    }\n\n    static __truncateAndSubFromPowerOfTwo(_, t, e) {\n      var n = Math.min;\n      const g = 0 | (_ + 29) / 30,\n            s = new o(g, e);\n      let l = 0;\n      const r = g - 1;\n      let a = 0;\n\n      for (const i = n(r, t.length); l < i; l++) {\n        const i = 0 - t.__digit(l) - a;\n        a = 1 & i >>> 30, s.__setDigit(l, 1073741823 & i);\n      }\n\n      for (; l < r; l++) s.__setDigit(l, 0 | 1073741823 & -a);\n\n      let u = r < t.length ? t.__digit(r) : 0;\n      const d = _ % 30;\n      let h;\n      if (0 == d) h = 0 - u - a, h &= 1073741823;else {\n        const i = 32 - d;\n        u = u << i >>> i;\n\n        const _ = 1 << 32 - i;\n\n        h = _ - u - a, h &= _ - 1;\n      }\n      return s.__setDigit(r, h), s.__trim();\n    }\n\n    __digit(_) {\n      return this[_];\n    }\n\n    __unsignedDigit(_) {\n      return this[_] >>> 0;\n    }\n\n    __setDigit(_, i) {\n      this[_] = 0 | i;\n    }\n\n    __setDigitGrow(_, i) {\n      this[_] = 0 | i;\n    }\n\n    __halfDigitLength() {\n      const i = this.length;\n      return 32767 >= this.__unsignedDigit(i - 1) ? 2 * i - 1 : 2 * i;\n    }\n\n    __halfDigit(_) {\n      return 32767 & this[_ >>> 1] >>> 15 * (1 & _);\n    }\n\n    __setHalfDigit(_, i) {\n      const t = _ >>> 1,\n            e = this.__digit(t),\n            n = 1 & _ ? 32767 & e | i << 15 : 1073709056 & e | 32767 & i;\n\n      this.__setDigit(t, n);\n    }\n\n    static __digitPow(i, _) {\n      let t = 1;\n\n      for (; 0 < _;) 1 & _ && (t *= i), _ >>>= 1, i *= i;\n\n      return t;\n    }\n\n    static __isOneDigitInt(i) {\n      return (1073741823 & i) === i;\n    }\n\n  }\n\n  return o.__kMaxLength = 33554432, o.__kMaxLengthBits = o.__kMaxLength << 5, o.__kMaxBitsPerChar = [0, 0, 32, 51, 64, 75, 83, 90, 96, 102, 107, 111, 115, 119, 122, 126, 128, 131, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 154, 156, 158, 159, 160, 162, 163, 165, 166], o.__kBitsPerCharTableShift = 5, o.__kBitsPerCharTableMultiplier = 1 << o.__kBitsPerCharTableShift, o.__kConversionChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], o.__kBitConversionBuffer = new ArrayBuffer(8), o.__kBitConversionDouble = new Float64Array(o.__kBitConversionBuffer), o.__kBitConversionInts = new Int32Array(o.__kBitConversionBuffer), o.__clz30 = _ ? function (i) {\n    return _(i) - 2;\n  } : function (i) {\n    var _ = Math.LN2,\n        t = Math.log;\n    return 0 === i ? 30 : 0 | 29 - (0 | t(i >>> 0) / _);\n  }, o.__imul = i || function (i, _) {\n    return 0 | i * _;\n  }, o;\n});","map":{"version":3,"sources":["../lib/jsbi.ts"],"names":["Array","constructor","length","sign","JSBI","BigInt","Number","isFinite","Math","floor","result","arg","primitive","toDebugString","digit","toString","radix","toNumber","xLength","x","value","xMsd","msdLeadingZeros","xBitLength","exponent","currentDigit","digitIndex","shift","mantissaHigh","mantissaHighBitsUnset","mantissaLow","mantissaLowBitsUnset","rounding","signBit","unaryMinus","bitwiseNot","exponentiate","y","expValue","neededDigits","msd","runningSquare","multiply","resultLength","i","divide","resultSign","divisor","quotient","remainder","remainderDigit","add","subtract","leftShift","signedRightShift","unsignedRightShift","lessThan","lessThanOrEqual","greaterThan","greaterThanOrEqual","equal","notEqual","bitwiseAnd","max","y1","bitwiseXor","bitwiseOr","asIntN","n","neededLength","topDigit","compareDigit","asUintN","bitsInTopDigit","ADD","LT","LE","GT","GE","EQ","NE","__zero","__oneDigit","__copy","__trim","newLength","last","__initializeDigits","__decideRounding","topUnconsumedBit","mask","__fromDouble","rawExponent","digits","kMantissaHighTopBit","msdTopBit","remainingMantissaBits","__isWhitespace","c","__fromString","string","cursor","current","chars","bitsPerChar","roundup","bitsMin","__kBitsPerCharTableShift","limDigit","limAlpha","parts","partsBits","done","part","bits","d","charsSoFar","multiplier","m","digitsSoFar","__fillFromParts","bitsInDigit","partBits","__toStringBasePowerOfTwo","charMask","charsRequired","pos","availableBits","newDigit","consumedBits","__toStringGeneric","bitLength","maxBitsPerChar","minBitsPerChar","secondHalfChars","conqueror","secondHalf","input","divisionResult","firstHalf","__unequalSign","leftNegative","__absoluteGreater","bothNegative","__absoluteLess","__compareToBigInt","xSign","__compareToNumber","ySign","yAbs","abs","xDigit","__compareToDouble","yBitLength","compareMantissa","__equalToNumber","__comparisonResultToBool","op","__compare","__clzmsd","__absoluteAdd","carry","r","__absoluteSub","borrow","__absoluteAddOne","inputLength","__absoluteSubOne","__absoluteAnd","yLength","numPairs","tmp","tmpLength","__absoluteAndNot","__absoluteOr","__absoluteXor","__absoluteCompare","diff","__multiplyAccumulate","m2Low","m2High","high","multiplicand","accumulatorIndex","acc","accumulator","m1","m1Low","m1High","rLow","rMid1","rMid2","rHigh","__internalMultiplyAdd","summand","source","rx","ry","__inplaceMultiplyAdd","mLow","mHigh","dLow","dHigh","pLow","pMid1","pMid2","pHigh","__absoluteDivSmall","upperHalf","lowerHalf","__absoluteModSmall","__absoluteDivLarge","n2","dividend","q","wantQuotient","qhatv","u","vn1","halfDigitBuffer","j","qhat","ujn","rhat","vn2","ujn2","__clz15","__inplaceAdd","sum","startIndex","__inplaceSub","halfDigits","r0","sub","subtrahend","r15","__inplaceRightShift","__specialLeftShift","addDigit","__leftShiftByAbsolute","digitShift","bitsShift","grow","__rightShiftByAbsolute","mustRoundDown","__rightShiftByMaximum","__toShiftAmount","__kMaxLengthBits","__toPrimitive","hint","obj","Symbol","exoticToPrim","valueOf","__toNumeric","__isBigInt","__truncateToNBits","drop","__truncateAndSubFromPowerOfTwo","limit","min","msdBitsConsumed","resultMsd","minuendMsd","__digit","__unsignedDigit","__setDigit","__setDigitGrow","__halfDigitLength","len","__halfDigit","__setHalfDigit","previous","updated","__digitPow","base","clz32","log","LN2","imul","a","b","__isOneDigitInt"],"mappings":"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","sourcesContent":["(function(i,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=_():\"function\"==typeof define&&define.amd?define(_):(i=i||self,i.JSBI=_())})(this,function(){'use strict';var i=Math.imul,_=Math.clz32,t=Math.abs,e=Math.max,g=Math.floor;class o extends Array{constructor(i,_){if(super(i),this.sign=_,i>o.__kMaxLength)throw new RangeError(\"Maximum BigInt size exceeded\")}static BigInt(i){var _=Number.isFinite;if(\"number\"==typeof i){if(0===i)return o.__zero();if(o.__isOneDigitInt(i))return 0>i?o.__oneDigit(-i,!0):o.__oneDigit(i,!1);if(!_(i)||g(i)!==i)throw new RangeError(\"The number \"+i+\" cannot be converted to BigInt because it is not an integer\");return o.__fromDouble(i)}if(\"string\"==typeof i){const _=o.__fromString(i);if(null===_)throw new SyntaxError(\"Cannot convert \"+i+\" to a BigInt\");return _}if(\"boolean\"==typeof i)return!0===i?o.__oneDigit(1,!1):o.__zero();if(\"object\"==typeof i){if(i.constructor===o)return i;const _=o.__toPrimitive(i);return o.BigInt(_)}throw new TypeError(\"Cannot convert \"+i+\" to a BigInt\")}toDebugString(){const i=[\"BigInt[\"];for(const _ of this)i.push((_?(_>>>0).toString(16):_)+\", \");return i.push(\"]\"),i.join(\"\")}toString(i=10){if(2>i||36<i)throw new RangeError(\"toString() radix argument must be between 2 and 36\");return 0===this.length?\"0\":0==(i&i-1)?o.__toStringBasePowerOfTwo(this,i):o.__toStringGeneric(this,i,!1)}static toNumber(i){const _=i.length;if(0===_)return 0;if(1===_){const _=i.__unsignedDigit(0);return i.sign?-_:_}const t=i.__digit(_-1),e=o.__clz30(t),n=30*_-e;if(1024<n)return i.sign?-Infinity:1/0;let g=n-1,s=t,l=_-1;const r=e+3;let a=32===r?0:s<<r;a>>>=12;const u=r-12;let d=12<=r?0:s<<20+r,h=20+r;for(0<u&&0<l&&(l--,s=i.__digit(l),a|=s>>>30-u,d=s<<u+2,h=u+2);0<h&&0<l;)l--,s=i.__digit(l),d|=30<=h?s<<h-30:s>>>30-h,h-=30;const m=o.__decideRounding(i,h,l,s);if((1===m||0===m&&1==(1&d))&&(d=d+1>>>0,0===d&&(a++,0!=a>>>20&&(a=0,g++,1023<g))))return i.sign?-Infinity:1/0;const b=i.sign?-2147483648:0;return g=g+1023<<20,o.__kBitConversionInts[1]=b|g|a,o.__kBitConversionInts[0]=d,o.__kBitConversionDouble[0]}static unaryMinus(i){if(0===i.length)return i;const _=i.__copy();return _.sign=!i.sign,_}static bitwiseNot(i){return i.sign?o.__absoluteSubOne(i).__trim():o.__absoluteAddOne(i,!0)}static exponentiate(i,_){if(_.sign)throw new RangeError(\"Exponent must be positive\");if(0===_.length)return o.__oneDigit(1,!1);if(0===i.length)return i;if(1===i.length&&1===i.__digit(0))return i.sign&&0==(1&_.__digit(0))?o.unaryMinus(i):i;if(1<_.length)throw new RangeError(\"BigInt too big\");let t=_.__unsignedDigit(0);if(1===t)return i;if(t>=o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");if(1===i.length&&2===i.__digit(0)){const _=1+(0|t/30),e=i.sign&&0!=(1&t),n=new o(_,e);n.__initializeDigits();const g=1<<t%30;return n.__setDigit(_-1,g),n}let e=null,n=i;for(0!=(1&t)&&(e=i),t>>=1;0!==t;t>>=1)n=o.multiply(n,n),0!=(1&t)&&(null===e?e=n:e=o.multiply(e,n));return e}static multiply(_,t){if(0===_.length)return _;if(0===t.length)return t;let i=_.length+t.length;30<=_.__clzmsd()+t.__clzmsd()&&i--;const e=new o(i,_.sign!==t.sign);e.__initializeDigits();for(let n=0;n<_.length;n++)o.__multiplyAccumulate(t,_.__digit(n),e,n);return e.__trim()}static divide(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return o.__zero();const t=i.sign!==_.sign,e=_.__unsignedDigit(0);let n;if(1===_.length&&32767>=e){if(1===e)return t===i.sign?i:o.unaryMinus(i);n=o.__absoluteDivSmall(i,e,null)}else n=o.__absoluteDivLarge(i,_,!0,!1);return n.sign=t,n.__trim()}static remainder(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return i;const t=_.__unsignedDigit(0);if(1===_.length&&32767>=t){if(1===t)return o.__zero();const _=o.__absoluteModSmall(i,t);return 0===_?o.__zero():o.__oneDigit(_,i.sign)}const e=o.__absoluteDivLarge(i,_,!1,!0);return e.sign=i.sign,e.__trim()}static add(i,_){const t=i.sign;return t===_.sign?o.__absoluteAdd(i,_,t):0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t)}static subtract(i,_){const t=i.sign;return t===_.sign?0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t):o.__absoluteAdd(i,_,t)}static leftShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__rightShiftByAbsolute(i,_):o.__leftShiftByAbsolute(i,_)}static signedRightShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__leftShiftByAbsolute(i,_):o.__rightShiftByAbsolute(i,_)}static unsignedRightShift(){throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\")}static lessThan(i,_){return 0>o.__compareToBigInt(i,_)}static lessThanOrEqual(i,_){return 0>=o.__compareToBigInt(i,_)}static greaterThan(i,_){return 0<o.__compareToBigInt(i,_)}static greaterThanOrEqual(i,_){return 0<=o.__compareToBigInt(i,_)}static equal(_,t){if(_.sign!==t.sign)return!1;if(_.length!==t.length)return!1;for(let e=0;e<_.length;e++)if(_.__digit(e)!==t.__digit(e))return!1;return!0}static notEqual(i,_){return!o.equal(i,_)}static bitwiseAnd(i,_){if(!i.sign&&!_.sign)return o.__absoluteAnd(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length)+1;let n=o.__absoluteSubOne(i,t);const g=o.__absoluteSubOne(_);return n=o.__absoluteOr(n,g,n),o.__absoluteAddOne(n,!0,n).__trim()}return i.sign&&([i,_]=[_,i]),o.__absoluteAndNot(i,o.__absoluteSubOne(_)).__trim()}static bitwiseXor(i,_){if(!i.sign&&!_.sign)return o.__absoluteXor(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length),n=o.__absoluteSubOne(i,t),g=o.__absoluteSubOne(_);return o.__absoluteXor(n,g,n).__trim()}const t=e(i.length,_.length)+1;i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteXor(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static bitwiseOr(i,_){const t=e(i.length,_.length);if(!i.sign&&!_.sign)return o.__absoluteOr(i,_).__trim();if(i.sign&&_.sign){let e=o.__absoluteSubOne(i,t);const n=o.__absoluteSubOne(_);return e=o.__absoluteAnd(e,n,e),o.__absoluteAddOne(e,!0,e).__trim()}i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteAndNot(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static asIntN(_,t){if(0===t.length)return t;if(_=g(_),0>_)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===_)return o.__zero();if(_>=o.__kMaxLengthBits)return t;const e=0|(_+29)/30;if(t.length<e)return t;const s=t.__unsignedDigit(e-1),l=1<<(_-1)%30;if(t.length===e&&s<l)return t;if(!((s&l)===l))return o.__truncateToNBits(_,t);if(!t.sign)return o.__truncateAndSubFromPowerOfTwo(_,t,!0);if(0==(s&l-1)){for(let n=e-2;0<=n;n--)if(0!==t.__digit(n))return o.__truncateAndSubFromPowerOfTwo(_,t,!1);return t.length===e&&s===l?t:o.__truncateToNBits(_,t)}return o.__truncateAndSubFromPowerOfTwo(_,t,!1)}static asUintN(i,_){if(0===_.length)return _;if(i=g(i),0>i)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===i)return o.__zero();if(_.sign){if(i>o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");return o.__truncateAndSubFromPowerOfTwo(i,_,!1)}if(i>=o.__kMaxLengthBits)return _;const t=0|(i+29)/30;if(_.length<t)return _;const e=i%30;if(_.length==t){if(0===e)return _;const i=_.__digit(t-1);if(0==i>>>e)return _}return o.__truncateToNBits(i,_)}static ADD(i,_){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i)return\"string\"!=typeof _&&(_=_.toString()),i+_;if(\"string\"==typeof _)return i.toString()+_;if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)&&o.__isBigInt(_))return o.add(i,_);if(\"number\"==typeof i&&\"number\"==typeof _)return i+_;throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\")}static LT(i,_){return o.__compare(i,_,0)}static LE(i,_){return o.__compare(i,_,1)}static GT(i,_){return o.__compare(i,_,2)}static GE(i,_){return o.__compare(i,_,3)}static EQ(i,_){for(;;){if(o.__isBigInt(i))return o.__isBigInt(_)?o.equal(i,_):o.EQ(_,i);if(\"number\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"string\"==typeof i){if(o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.equal(i,_);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"boolean\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,+i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"symbol\"==typeof i){if(o.__isBigInt(_))return!1;if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"object\"==typeof i){if(\"object\"==typeof _&&_.constructor!==o)return i==_;i=o.__toPrimitive(i)}else return i==_}}static NE(i,_){return!o.EQ(i,_)}static __zero(){return new o(0,!1)}static __oneDigit(i,_){const t=new o(1,_);return t.__setDigit(0,i),t}__copy(){const _=new o(this.length,this.sign);for(let t=0;t<this.length;t++)_[t]=this[t];return _}__trim(){let i=this.length,_=this[i-1];for(;0===_;)i--,_=this[i-1],this.pop();return 0===i&&(this.sign=!1),this}__initializeDigits(){for(let _=0;_<this.length;_++)this[_]=0}static __decideRounding(i,_,t,e){if(0<_)return-1;let n;if(0>_)n=-_-1;else{if(0===t)return-1;t--,e=i.__digit(t),n=29}let g=1<<n;if(0==(e&g))return-1;if(g-=1,0!=(e&g))return 1;for(;0<t;)if(t--,0!==i.__digit(t))return 1;return 0}static __fromDouble(i){o.__kBitConversionDouble[0]=i;const _=2047&o.__kBitConversionInts[1]>>>20,t=_-1023,e=(0|t/30)+1,n=new o(e,0>i);let g=1048575&o.__kBitConversionInts[1]|1048576,s=o.__kBitConversionInts[0];const l=20,r=t%30;let a,u=0;if(20>r){const i=l-r;u=i+32,a=g>>>i,g=g<<32-i|s>>>i,s<<=32-i}else if(20===r)u=32,a=g,g=s,s=0;else{const i=r-l;u=32-i,a=g<<i|s>>>32-i,g=s<<i,s=0}n.__setDigit(e-1,a);for(let _=e-2;0<=_;_--)0<u?(u-=30,a=g>>>2,g=g<<30|s>>>2,s<<=30):a=0,n.__setDigit(_,a);return n.__trim()}static __isWhitespace(i){return!!(13>=i&&9<=i)||(159>=i?32==i:131071>=i?160==i||5760==i:196607>=i?(i&=131071,10>=i||40==i||41==i||47==i||95==i||4096==i):65279==i)}static __fromString(i,_=0){let t=0;const e=i.length;let n=0;if(n===e)return o.__zero();let g=i.charCodeAt(n);for(;o.__isWhitespace(g);){if(++n===e)return o.__zero();g=i.charCodeAt(n)}if(43===g){if(++n===e)return null;g=i.charCodeAt(n),t=1}else if(45===g){if(++n===e)return null;g=i.charCodeAt(n),t=-1}if(0===_){if(_=10,48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(_=16,++n===e)return null;g=i.charCodeAt(n)}else if(79===g||111===g){if(_=8,++n===e)return null;g=i.charCodeAt(n)}else if(66===g||98===g){if(_=2,++n===e)return null;g=i.charCodeAt(n)}}}else if(16===_&&48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(++n===e)return null;g=i.charCodeAt(n)}}if(0!=t&&10!==_)return null;for(;48===g;){if(++n===e)return o.__zero();g=i.charCodeAt(n)}const s=e-n;let l=o.__kMaxBitsPerChar[_],r=o.__kBitsPerCharTableMultiplier-1;if(s>1073741824/l)return null;const a=l*s+r>>>o.__kBitsPerCharTableShift,u=new o(0|(a+29)/30,!1),h=10>_?_:10,b=10<_?_-10:0;if(0==(_&_-1)){l>>=o.__kBitsPerCharTableShift;const _=[],t=[];let s=!1;do{let o=0,r=0;for(;;){let _;if(g-48>>>0<h)_=g-48;else if((32|g)-97>>>0<b)_=(32|g)-87;else{s=!0;break}if(r+=l,o=o<<l|_,++n===e){s=!0;break}if(g=i.charCodeAt(n),30<r+l)break}_.push(o),t.push(r)}while(!s);o.__fillFromParts(u,_,t)}else{u.__initializeDigits();let t=!1,s=0;do{let a=0,D=1;for(;;){let o;if(g-48>>>0<h)o=g-48;else if((32|g)-97>>>0<b)o=(32|g)-87;else{t=!0;break}const l=D*_;if(1073741823<l)break;if(D=l,a=a*_+o,s++,++n===e){t=!0;break}g=i.charCodeAt(n)}r=30*o.__kBitsPerCharTableMultiplier-1;const c=0|(l*s+r>>>o.__kBitsPerCharTableShift)/30;u.__inplaceMultiplyAdd(D,a,c)}while(!t)}if(n!==e){if(!o.__isWhitespace(g))return null;for(n++;n<e;n++)if(g=i.charCodeAt(n),!o.__isWhitespace(g))return null}return u.sign=-1==t,u.__trim()}static __fillFromParts(_,t,e){let n=0,g=0,o=0;for(let s=t.length-1;0<=s;s--){const i=t[s],l=e[s];g|=i<<o,o+=l,30===o?(_.__setDigit(n++,g),o=0,g=0):30<o&&(_.__setDigit(n++,1073741823&g),o-=30,g=i>>>l-o)}if(0!==g){if(n>=_.length)throw new Error(\"implementation bug\");_.__setDigit(n++,g)}for(;n<_.length;n++)_.__setDigit(n,0)}static __toStringBasePowerOfTwo(_,i){const t=_.length;let e=i-1;e=(85&e>>>1)+(85&e),e=(51&e>>>2)+(51&e),e=(15&e>>>4)+(15&e);const n=e,g=i-1,s=_.__digit(t-1),l=o.__clz30(s);let r=0|(30*t-l+n-1)/n;if(_.sign&&r++,268435456<r)throw new Error(\"string too long\");const a=Array(r);let u=r-1,d=0,h=0;for(let e=0;e<t-1;e++){const i=_.__digit(e),t=(d|i<<h)&g;a[u--]=o.__kConversionChars[t];const s=n-h;for(d=i>>>s,h=30-s;h>=n;)a[u--]=o.__kConversionChars[d&g],d>>>=n,h-=n}const m=(d|s<<h)&g;for(a[u--]=o.__kConversionChars[m],d=s>>>n-h;0!==d;)a[u--]=o.__kConversionChars[d&g],d>>>=n;if(_.sign&&(a[u--]=\"-\"),-1!=u)throw new Error(\"implementation bug\");return a.join(\"\")}static __toStringGeneric(_,i,t){const e=_.length;if(0===e)return\"\";if(1===e){let e=_.__unsignedDigit(0).toString(i);return!1===t&&_.sign&&(e=\"-\"+e),e}const n=30*e-o.__clz30(_.__digit(e-1)),g=o.__kMaxBitsPerChar[i],s=g-1;let l=n*o.__kBitsPerCharTableMultiplier;l+=s-1,l=0|l/s;const r=l+1>>1,a=o.exponentiate(o.__oneDigit(i,!1),o.__oneDigit(r,!1));let u,d;const h=a.__unsignedDigit(0);if(1===a.length&&32767>=h){u=new o(_.length,!1),u.__initializeDigits();let t=0;for(let e=2*_.length-1;0<=e;e--){const i=t<<15|_.__halfDigit(e);u.__setHalfDigit(e,0|i/h),t=0|i%h}d=t.toString(i)}else{const t=o.__absoluteDivLarge(_,a,!0,!0);u=t.quotient;const e=t.remainder.__trim();d=o.__toStringGeneric(e,i,!0)}u.__trim();let m=o.__toStringGeneric(u,i,!0);for(;d.length<r;)d=\"0\"+d;return!1===t&&_.sign&&(m=\"-\"+m),m+d}static __unequalSign(i){return i?-1:1}static __absoluteGreater(i){return i?-1:1}static __absoluteLess(i){return i?1:-1}static __compareToBigInt(i,_){const t=i.sign;if(t!==_.sign)return o.__unequalSign(t);const e=o.__absoluteCompare(i,_);return 0<e?o.__absoluteGreater(t):0>e?o.__absoluteLess(t):0}static __compareToNumber(i,_){if(o.__isOneDigitInt(_)){const e=i.sign,n=0>_;if(e!==n)return o.__unequalSign(e);if(0===i.length){if(n)throw new Error(\"implementation bug\");return 0===_?0:-1}if(1<i.length)return o.__absoluteGreater(e);const g=t(_),s=i.__unsignedDigit(0);return s>g?o.__absoluteGreater(e):s<g?o.__absoluteLess(e):0}return o.__compareToDouble(i,_)}static __compareToDouble(i,_){if(_!==_)return _;if(_===1/0)return-1;if(_===-Infinity)return 1;const t=i.sign;if(t!==0>_)return o.__unequalSign(t);if(0===_)throw new Error(\"implementation bug: should be handled elsewhere\");if(0===i.length)return-1;o.__kBitConversionDouble[0]=_;const e=2047&o.__kBitConversionInts[1]>>>20;if(2047==e)throw new Error(\"implementation bug: handled elsewhere\");const n=e-1023;if(0>n)return o.__absoluteGreater(t);const g=i.length;let s=i.__digit(g-1);const l=o.__clz30(s),r=30*g-l,a=n+1;if(r<a)return o.__absoluteLess(t);if(r>a)return o.__absoluteGreater(t);let u=1048576|1048575&o.__kBitConversionInts[1],d=o.__kBitConversionInts[0];const h=20,m=29-l;if(m!==(0|(r-1)%30))throw new Error(\"implementation bug\");let b,D=0;if(20>m){const i=h-m;D=i+32,b=u>>>i,u=u<<32-i|d>>>i,d<<=32-i}else if(20===m)D=32,b=u,u=d,d=0;else{const i=m-h;D=32-i,b=u<<i|d>>>32-i,u=d<<i,d=0}if(s>>>=0,b>>>=0,s>b)return o.__absoluteGreater(t);if(s<b)return o.__absoluteLess(t);for(let e=g-2;0<=e;e--){0<D?(D-=30,b=u>>>2,u=u<<30|d>>>2,d<<=30):b=0;const _=i.__unsignedDigit(e);if(_>b)return o.__absoluteGreater(t);if(_<b)return o.__absoluteLess(t)}if(0!==u||0!==d){if(0===D)throw new Error(\"implementation bug\");return o.__absoluteLess(t)}return 0}static __equalToNumber(i,_){return o.__isOneDigitInt(_)?0===_?0===i.length:1===i.length&&i.sign===0>_&&i.__unsignedDigit(0)===t(_):0===o.__compareToDouble(i,_)}static __comparisonResultToBool(i,_){return 0===_?0>i:1===_?0>=i:2===_?0<i:3===_?0<=i:void 0}static __compare(i,_,t){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i&&\"string\"==typeof _)switch(t){case 0:return i<_;case 1:return i<=_;case 2:return i>_;case 3:return i>=_;}if(o.__isBigInt(i)&&\"string\"==typeof _)return _=o.__fromString(_),null!==_&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"string\"==typeof i&&o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)){if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return o.__comparisonResultToBool(o.__compareToNumber(i,_),t)}if(\"number\"!=typeof i)throw new Error(\"implementation bug\");if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToNumber(_,i),2^t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return 0===t?i<_:1===t?i<=_:2===t?i>_:3===t?i>=_:void 0}__clzmsd(){return o.__clz30(this.__digit(this.length-1))}static __absoluteAdd(_,t,e){if(_.length<t.length)return o.__absoluteAdd(t,_,e);if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);let n=_.length;(0===_.__clzmsd()||t.length===_.length&&0===t.__clzmsd())&&n++;const g=new o(n,e);let s=0,l=0;for(;l<t.length;l++){const i=_.__digit(l)+t.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}for(;l<_.length;l++){const i=_.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}return l<g.length&&g.__setDigit(l,s),g.__trim()}static __absoluteSub(_,t,e){if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);const n=new o(_.length,e);let g=0,s=0;for(;s<t.length;s++){const i=_.__digit(s)-t.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}for(;s<_.length;s++){const i=_.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}return n.__trim()}static __absoluteAddOne(_,i,t=null){const e=_.length;null===t?t=new o(e,i):t.sign=i;let n=1;for(let g=0;g<e;g++){const i=_.__digit(g)+n;n=i>>>30,t.__setDigit(g,1073741823&i)}return 0!=n&&t.__setDigitGrow(e,1),t}static __absoluteSubOne(_,t){const e=_.length;t=t||e;const n=new o(t,!1);let g=1;for(let o=0;o<e;o++){const i=_.__digit(o)-g;g=1&i>>>30,n.__setDigit(o,1073741823&i)}if(0!=g)throw new Error(\"implementation bug\");for(let g=e;g<t;g++)n.__setDigit(g,0);return n}static __absoluteAnd(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=s;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&t.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteAndNot(_,t,e=null){const n=_.length,g=t.length;let s=g;n<g&&(s=n);let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&~t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteOr(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)|t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteXor(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)^t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteCompare(_,t){const e=_.length-t.length;if(0!=e)return e;let n=_.length-1;for(;0<=n&&_.__digit(n)===t.__digit(n);)n--;return 0>n?0:_.__unsignedDigit(n)>t.__unsignedDigit(n)?1:-1}static __multiplyAccumulate(_,t,e,n){if(0===t)return;const g=32767&t,s=t>>>15;let l=0,r=0;for(let a,u=0;u<_.length;u++,n++){a=e.__digit(n);const i=_.__digit(u),t=32767&i,d=i>>>15,h=o.__imul(t,g),m=o.__imul(t,s),b=o.__imul(d,g),D=o.__imul(d,s);a+=r+h+l,l=a>>>30,a&=1073741823,a+=((32767&m)<<15)+((32767&b)<<15),l+=a>>>30,r=D+(m>>>15)+(b>>>15),e.__setDigit(n,1073741823&a)}for(;0!=l||0!==r;n++){let i=e.__digit(n);i+=l+r,r=0,l=i>>>30,e.__setDigit(n,1073741823&i)}}static __internalMultiplyAdd(_,t,e,g,s){let l=e,a=0;for(let n=0;n<g;n++){const i=_.__digit(n),e=o.__imul(32767&i,t),g=o.__imul(i>>>15,t),u=e+((32767&g)<<15)+a+l;l=u>>>30,a=g>>>15,s.__setDigit(n,1073741823&u)}if(s.length>g)for(s.__setDigit(g++,l+a);g<s.length;)s.__setDigit(g++,0);else if(0!==l+a)throw new Error(\"implementation bug\")}__inplaceMultiplyAdd(i,_,t){t>this.length&&(t=this.length);const e=32767&i,n=i>>>15;let g=0,s=_;for(let l=0;l<t;l++){const i=this.__digit(l),_=32767&i,t=i>>>15,r=o.__imul(_,e),a=o.__imul(_,n),u=o.__imul(t,e),d=o.__imul(t,n);let h=s+r+g;g=h>>>30,h&=1073741823,h+=((32767&a)<<15)+((32767&u)<<15),g+=h>>>30,s=d+(a>>>15)+(u>>>15),this.__setDigit(l,1073741823&h)}if(0!=g||0!==s)throw new Error(\"implementation bug\")}static __absoluteDivSmall(_,t,e=null){null===e&&(e=new o(_.length,!1));let n=0;for(let g,o=2*_.length-1;0<=o;o-=2){g=(n<<15|_.__halfDigit(o))>>>0;const i=0|g/t;n=0|g%t,g=(n<<15|_.__halfDigit(o-1))>>>0;const s=0|g/t;n=0|g%t,e.__setDigit(o>>>1,i<<15|s)}return e}static __absoluteModSmall(_,t){let e=0;for(let n=2*_.length-1;0<=n;n--){const i=(e<<15|_.__halfDigit(n))>>>0;e=0|i%t}return e}static __absoluteDivLarge(i,_,t,e){const g=_.__halfDigitLength(),n=_.length,s=i.__halfDigitLength()-g;let l=null;t&&(l=new o(s+2>>>1,!1),l.__initializeDigits());const r=new o(g+2>>>1,!1);r.__initializeDigits();const a=o.__clz15(_.__halfDigit(g-1));0<a&&(_=o.__specialLeftShift(_,a,0));const d=o.__specialLeftShift(i,a,1),u=_.__halfDigit(g-1);let h=0;for(let a,m=s;0<=m;m--){a=32767;const i=d.__halfDigit(m+g);if(i!==u){const t=(i<<15|d.__halfDigit(m+g-1))>>>0;a=0|t/u;let e=0|t%u;const n=_.__halfDigit(g-2),s=d.__halfDigit(m+g-2);for(;o.__imul(a,n)>>>0>(e<<16|s)>>>0&&(a--,e+=u,!(32767<e)););}o.__internalMultiplyAdd(_,a,0,n,r);let e=d.__inplaceSub(r,m,g+1);0!==e&&(e=d.__inplaceAdd(_,m,g),d.__setHalfDigit(m+g,32767&d.__halfDigit(m+g)+e),a--),t&&(1&m?h=a<<15:l.__setDigit(m>>>1,h|a))}if(e)return d.__inplaceRightShift(a),t?{quotient:l,remainder:d}:d;if(t)return l;throw new Error(\"unreachable\")}static __clz15(i){return o.__clz30(i)-15}__inplaceAdd(_,t,e){let n=0;for(let g=0;g<e;g++){const i=this.__halfDigit(t+g)+_.__halfDigit(g)+n;n=i>>>15,this.__setHalfDigit(t+g,32767&i)}return n}__inplaceSub(_,t,e){let n=0;if(1&t){t>>=1;let g=this.__digit(t),o=32767&g,s=0;for(;s<e-1>>>1;s++){const i=_.__digit(s),e=(g>>>15)-(32767&i)-n;n=1&e>>>15,this.__setDigit(t+s,(32767&e)<<15|32767&o),g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15}const i=_.__digit(s),l=(g>>>15)-(32767&i)-n;n=1&l>>>15,this.__setDigit(t+s,(32767&l)<<15|32767&o);if(t+s+1>=this.length)throw new RangeError(\"out of bounds\");0==(1&e)&&(g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15,this.__setDigit(t+_.length,1073709056&g|32767&o))}else{t>>=1;let g=0;for(;g<_.length-1;g++){const i=this.__digit(t+g),e=_.__digit(g),o=(32767&i)-(32767&e)-n;n=1&o>>>15;const s=(i>>>15)-(e>>>15)-n;n=1&s>>>15,this.__setDigit(t+g,(32767&s)<<15|32767&o)}const i=this.__digit(t+g),o=_.__digit(g),s=(32767&i)-(32767&o)-n;n=1&s>>>15;let l=0;0==(1&e)&&(l=(i>>>15)-(o>>>15)-n,n=1&l>>>15),this.__setDigit(t+g,(32767&l)<<15|32767&s)}return n}__inplaceRightShift(_){if(0===_)return;let t=this.__digit(0)>>>_;const e=this.length-1;for(let n=0;n<e;n++){const i=this.__digit(n+1);this.__setDigit(n,1073741823&i<<30-_|t),t=i>>>_}this.__setDigit(e,t)}static __specialLeftShift(_,t,e){const g=_.length,n=new o(g+e,!1);if(0===t){for(let t=0;t<g;t++)n.__setDigit(t,_.__digit(t));return 0<e&&n.__setDigit(g,0),n}let s=0;for(let o=0;o<g;o++){const i=_.__digit(o);n.__setDigit(o,1073741823&i<<t|s),s=i>>>30-t}return 0<e&&n.__setDigit(g,s),n}static __leftShiftByAbsolute(_,i){const t=o.__toShiftAmount(i);if(0>t)throw new RangeError(\"BigInt too big\");const e=0|t/30,n=t%30,g=_.length,s=0!==n&&0!=_.__digit(g-1)>>>30-n,l=g+e+(s?1:0),r=new o(l,_.sign);if(0===n){let t=0;for(;t<e;t++)r.__setDigit(t,0);for(;t<l;t++)r.__setDigit(t,_.__digit(t-e))}else{let t=0;for(let _=0;_<e;_++)r.__setDigit(_,0);for(let o=0;o<g;o++){const i=_.__digit(o);r.__setDigit(o+e,1073741823&i<<n|t),t=i>>>30-n}if(s)r.__setDigit(g+e,t);else if(0!==t)throw new Error(\"implementation bug\")}return r.__trim()}static __rightShiftByAbsolute(_,i){const t=_.length,e=_.sign,n=o.__toShiftAmount(i);if(0>n)return o.__rightShiftByMaximum(e);const g=0|n/30,s=n%30;let l=t-g;if(0>=l)return o.__rightShiftByMaximum(e);let r=!1;if(e){if(0!=(_.__digit(g)&(1<<s)-1))r=!0;else for(let t=0;t<g;t++)if(0!==_.__digit(t)){r=!0;break}}if(r&&0===s){const i=_.__digit(t-1);0==~i&&l++}let a=new o(l,e);if(0===s){a.__setDigit(l-1,0);for(let e=g;e<t;e++)a.__setDigit(e-g,_.__digit(e))}else{let e=_.__digit(g)>>>s;const n=t-g-1;for(let t=0;t<n;t++){const i=_.__digit(t+g+1);a.__setDigit(t,1073741823&i<<30-s|e),e=i>>>s}a.__setDigit(n,e)}return r&&(a=o.__absoluteAddOne(a,!0,a)),a.__trim()}static __rightShiftByMaximum(i){return i?o.__oneDigit(1,!0):o.__zero()}static __toShiftAmount(i){if(1<i.length)return-1;const _=i.__unsignedDigit(0);return _>o.__kMaxLengthBits?-1:_}static __toPrimitive(i,_=\"default\"){if(\"object\"!=typeof i)return i;if(i.constructor===o)return i;if(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol.toPrimitive){const t=i[Symbol.toPrimitive];if(t){const i=t(_);if(\"object\"!=typeof i)return i;throw new TypeError(\"Cannot convert object to primitive value\")}}const t=i.valueOf;if(t){const _=t.call(i);if(\"object\"!=typeof _)return _}const e=i.toString;if(e){const _=e.call(i);if(\"object\"!=typeof _)return _}throw new TypeError(\"Cannot convert object to primitive value\")}static __toNumeric(i){return o.__isBigInt(i)?i:+i}static __isBigInt(i){return\"object\"==typeof i&&null!==i&&i.constructor===o}static __truncateToNBits(i,_){const t=0|(i+29)/30,e=new o(t,_.sign),n=t-1;for(let t=0;t<n;t++)e.__setDigit(t,_.__digit(t));let g=_.__digit(n);if(0!=i%30){const _=32-i%30;g=g<<_>>>_}return e.__setDigit(n,g),e.__trim()}static __truncateAndSubFromPowerOfTwo(_,t,e){var n=Math.min;const g=0|(_+29)/30,s=new o(g,e);let l=0;const r=g-1;let a=0;for(const i=n(r,t.length);l<i;l++){const i=0-t.__digit(l)-a;a=1&i>>>30,s.__setDigit(l,1073741823&i)}for(;l<r;l++)s.__setDigit(l,0|1073741823&-a);let u=r<t.length?t.__digit(r):0;const d=_%30;let h;if(0==d)h=0-u-a,h&=1073741823;else{const i=32-d;u=u<<i>>>i;const _=1<<32-i;h=_-u-a,h&=_-1}return s.__setDigit(r,h),s.__trim()}__digit(_){return this[_]}__unsignedDigit(_){return this[_]>>>0}__setDigit(_,i){this[_]=0|i}__setDigitGrow(_,i){this[_]=0|i}__halfDigitLength(){const i=this.length;return 32767>=this.__unsignedDigit(i-1)?2*i-1:2*i}__halfDigit(_){return 32767&this[_>>>1]>>>15*(1&_)}__setHalfDigit(_,i){const t=_>>>1,e=this.__digit(t),n=1&_?32767&e|i<<15:1073709056&e|32767&i;this.__setDigit(t,n)}static __digitPow(i,_){let t=1;for(;0<_;)1&_&&(t*=i),_>>>=1,i*=i;return t}static __isOneDigitInt(i){return(1073741823&i)===i}}return o.__kMaxLength=33554432,o.__kMaxLengthBits=o.__kMaxLength<<5,o.__kMaxBitsPerChar=[0,0,32,51,64,75,83,90,96,102,107,111,115,119,122,126,128,131,134,136,139,141,143,145,147,149,151,153,154,156,158,159,160,162,163,165,166],o.__kBitsPerCharTableShift=5,o.__kBitsPerCharTableMultiplier=1<<o.__kBitsPerCharTableShift,o.__kConversionChars=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],o.__kBitConversionBuffer=new ArrayBuffer(8),o.__kBitConversionDouble=new Float64Array(o.__kBitConversionBuffer),o.__kBitConversionInts=new Int32Array(o.__kBitConversionBuffer),o.__clz30=_?function(i){return _(i)-2}:function(i){var _=Math.LN2,t=Math.log;return 0===i?30:0|29-(0|t(i>>>0)/_)},o.__imul=i||function(i,_){return 0|i*_},o});\n//# sourceMappingURL=jsbi-umd.js.map\n"]},"metadata":{},"sourceType":"script"}