{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\swaps-client\\\\src\\\\views\\\\OrdersOverview\\\\OrdersOverview.js\",\n    _s = $RefreshSig$();\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport cx from \"classnames\";\nimport { NavLink } from \"react-router-dom\";\nimport { getContract } from \"../../Addresses\";\nimport { useAllOrders, useAllOrdersStats, usePositionsForOrders } from \"../../Api\";\nimport { USD_DECIMALS, DECREASE, INCREASE, SWAP, useChainId, formatAmount, shortenAddress, getTokenInfo, getExchangeRateDisplay, getExchangeRate, shouldInvertTriggerRatio, formatDateTime, getOrderKey } from \"../../Helpers\";\nimport * as Api from \"../../Api\";\nimport { useInfoTokens } from \"src/hooks/useInfoTokens\";\nimport \"./OrdersOverview.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OrdersOverview() {\n  _s();\n\n  const {\n    chainId\n  } = useChainId();\n  const {\n    library,\n    account,\n    active\n  } = useWeb3React();\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n  const {\n    infoTokens\n  } = useInfoTokens(library, chainId, active, undefined, undefined);\n  const orders = useAllOrders(chainId, library);\n  const stats = useAllOrdersStats(chainId);\n  const positionsForOrders = usePositionsForOrders(chainId, library, orders.filter(order => order.type === DECREASE));\n  let openTotal;\n  let executedTotal;\n  let cancelledTotal;\n\n  if (stats) {\n    openTotal = stats.openDecrease + stats.openIncrease + stats.openSwap;\n    executedTotal = stats.executedDecrease + stats.executedIncrease + stats.executedSwap;\n    cancelledTotal = stats.cancelledDecrease + stats.cancelledIncrease + stats.cancelledSwap;\n  }\n\n  const NEAR_TRESHOLD = 98;\n\n  const executeOrder = (evt, order) => {\n    evt.preventDefault();\n    const params = [chainId, library, order.account, order.index, account];\n    let method;\n\n    if (order.type === \"Swap\") {\n      method = \"executeSwapOrder\";\n    } else if (order.type === \"Increase\") {\n      method = \"executeIncreaseOrder\";\n    } else {\n      method = \"executeDecreaseOrder\";\n    }\n\n    return Api[method](...params);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Orders-overview\",\n    children: [stats && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Orders-overview-stats\",\n      children: [\"Total active: \", openTotal, \", executed: \", executedTotal, \", cancelled: \", cancelledTotal, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), \"Increase active: \", stats.openIncrease, \", executed: \", stats.executedIncrease, \", cancelled:\", \" \", stats.cancelledIncrease, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), \"Decrease active: \", stats.openDecrease, \", executed: \", stats.executedDecrease, \", cancelled:\", \" \", stats.cancelledDecrease, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), \"Swap active: \", stats.openSwap, \", executed: \", stats.executedSwap, \", cancelled: \", stats.cancelledSwap, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"positive\",\n        children: \"Price conditions are met\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"orange\"\n        },\n        children: \"Close to execution price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"negative\",\n        children: \"Can't execute because of an error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"Orders-overview-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            children: \"Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mark Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Diff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => {\n          const {\n            type\n          } = order;\n          const key = getOrderKey(order);\n\n          if (type === SWAP) {\n            const fromToken = getTokenInfo(infoTokens, order.path[0], true, nativeTokenAddress);\n            const toTokenAddress = order.path[order.path.length - 1];\n            const toToken = getTokenInfo(infoTokens, toTokenAddress, order.shoudUnwrap, nativeTokenAddress);\n            let markExchangeRate;\n            let prefix;\n            let shouldExecute;\n            let nearExecute;\n            let diffPercent;\n            let invalidToken = false;\n            let error;\n\n            if (fromToken && toToken) {\n              const invert = shouldInvertTriggerRatio(fromToken, toToken);\n              markExchangeRate = getExchangeRate(fromToken, toToken);\n              prefix = order.triggerAboveThreshold && !invert || !order.triggerAboveThreshold && invert ? \"> \" : \"< \";\n              shouldExecute = markExchangeRate && markExchangeRate.lt(order.triggerRatio);\n              nearExecute = markExchangeRate && markExchangeRate.lt(order.triggerRatio.mul(100).div(NEAR_TRESHOLD));\n\n              if (markExchangeRate) {\n                const diff = order.triggerRatio.gt(markExchangeRate) ? order.triggerRatio.sub(markExchangeRate) : markExchangeRate.sub(order.triggerRatio);\n                diffPercent = diff.mul(10000).div(markExchangeRate);\n              }\n            } else {\n              invalidToken = true;\n              error = `Invalid token fromToken: \"${order.path0}\" toToken: \"${toTokenAddress}\"`;\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Swap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"2\",\n                children: !invalidToken && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [formatAmount(order.amountIn, fromToken.decimals, 4, true), \" \", fromToken.symbol, \"\\xA0for\\xA0\", formatAmount(order.minOut, toToken.decimals, 4, true), \" \", toToken.symbol]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: cx({\n                  positive: shouldExecute,\n                  near: !shouldExecute && nearExecute\n                }),\n                children: [!invalidToken && prefix, getExchangeRateDisplay(order.triggerRatio, fromToken, toToken)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: cx({\n                  positive: shouldExecute,\n                  near: !shouldExecute && nearExecute\n                }),\n                children: getExchangeRateDisplay(markExchangeRate, fromToken, toToken)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: cx({\n                  positive: shouldExecute,\n                  near: !shouldExecute && nearExecute\n                }),\n                children: [formatAmount(diffPercent, 2, 2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: `/actions/${order.account}`,\n                  children: shortenAddress(order.account)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDateTime(order.createdTimestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"negative\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"Orders-overview-action\",\n                  onClick: evt => executeOrder(evt, order),\n                  children: \"Execute\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this);\n          } else {\n            const indexToken = getTokenInfo(infoTokens, order.indexToken, true, nativeTokenAddress);\n            const collateralToken = getTokenInfo(infoTokens, order.collateralToken, true, nativeTokenAddress);\n            const purchaseToken = getTokenInfo(infoTokens, order.purchaseToken);\n            let markPrice;\n            let error;\n\n            if (indexToken && collateralToken && (order.type === DECREASE || purchaseToken)) {\n              markPrice = order.triggerAboveThreshold ? indexToken.minPrice : indexToken.maxPrice;\n            } else {\n              error = `Invalid token indexToken: \"${order.indexToken}\" collateralToken: \"${order.collateralToken}\"`;\n\n              if (order.type === \"increase\") {\n                error += ` purchaseToken: ${order.purchaseToken}`;\n              }\n            }\n\n            let shouldExecute;\n            let nearExecute;\n            let diffPercent;\n\n            if (markPrice) {\n              shouldExecute = order.triggerAboveThreshold ? markPrice.gt(order.triggerPrice) : markPrice.lt(order.triggerPrice);\n              nearExecute = order.triggerAboveThreshold ? markPrice.gt(order.triggerPrice.mul(NEAR_TRESHOLD).div(100)) : markPrice.lt(order.triggerPrice.mul(100).div(NEAR_TRESHOLD));\n              const diff = markPrice.gt(order.triggerPrice) ? markPrice.sub(order.triggerPrice) : order.triggerPrice.sub(markPrice);\n              diffPercent = diff.mul(10000).div(markPrice);\n            }\n\n            if (!error && type === DECREASE) {\n              if (positionsForOrders && key in positionsForOrders) {\n                const position = positionsForOrders[key];\n\n                if (!position) {\n                  error = \"No position\";\n                } else if (order.sizeDelta.gt(position[0])) {\n                  error = `Order size exceeds position`;\n                } else if (order.sizeDelta.eq(0)) {\n                  error = \"Order size is 0\";\n                }\n              }\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [order.isLong ? \"Long\" : \"Short\", \" \", indexToken && indexToken.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [type === INCREASE ? \"+\" : \"-\", \"$\", formatAmount(order.sizeDelta, USD_DECIMALS, 2, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: cx({\n                  positive: shouldExecute,\n                  near: !shouldExecute && nearExecute\n                }),\n                children: [order.triggerAboveThreshold ? \"> \" : \"< \", formatAmount(order.triggerPrice, USD_DECIMALS, 2, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: cx({\n                  positive: shouldExecute,\n                  near: !shouldExecute && nearExecute\n                }),\n                children: [\"$\", formatAmount(markPrice, USD_DECIMALS, 2, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: cx({\n                  positive: shouldExecute,\n                  near: !shouldExecute && nearExecute\n                }),\n                children: [formatAmount(diffPercent, 2, 2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: `/actions/${order.account}`,\n                  children: shortenAddress(order.account, 12)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDateTime(order.createdTimestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"negative\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"Orders-overview-action\",\n                  onClick: evt => executeOrder(evt, order),\n                  children: \"Execute\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrdersOverview, \"EyilW0lc0RIs0X/lWMsTsV9bkVw=\", false, function () {\n  return [useChainId, useWeb3React, useInfoTokens, useAllOrders, useAllOrdersStats, usePositionsForOrders];\n});\n\n_c = OrdersOverview;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersOverview\");","map":{"version":3,"names":["useWeb3React","cx","NavLink","getContract","useAllOrders","useAllOrdersStats","usePositionsForOrders","USD_DECIMALS","DECREASE","INCREASE","SWAP","useChainId","formatAmount","shortenAddress","getTokenInfo","getExchangeRateDisplay","getExchangeRate","shouldInvertTriggerRatio","formatDateTime","getOrderKey","Api","useInfoTokens","OrdersOverview","chainId","library","account","active","nativeTokenAddress","infoTokens","undefined","orders","stats","positionsForOrders","filter","order","type","openTotal","executedTotal","cancelledTotal","openDecrease","openIncrease","openSwap","executedDecrease","executedIncrease","executedSwap","cancelledDecrease","cancelledIncrease","cancelledSwap","NEAR_TRESHOLD","executeOrder","evt","preventDefault","params","index","method","color","map","key","fromToken","path","toTokenAddress","length","toToken","shoudUnwrap","markExchangeRate","prefix","shouldExecute","nearExecute","diffPercent","invalidToken","error","invert","triggerAboveThreshold","lt","triggerRatio","mul","div","diff","gt","sub","path0","amountIn","decimals","symbol","minOut","positive","near","createdTimestamp","indexToken","collateralToken","purchaseToken","markPrice","minPrice","maxPrice","triggerPrice","position","sizeDelta","eq","isLong"],"sources":["C:/Users/rober/Documents/swaps-client/src/views/OrdersOverview/OrdersOverview.js"],"sourcesContent":["import { useWeb3React } from \"@web3-react/core\";\nimport cx from \"classnames\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport { getContract } from \"../../Addresses\";\nimport { useAllOrders, useAllOrdersStats, usePositionsForOrders } from \"../../Api\";\nimport {\n  USD_DECIMALS,\n  DECREASE,\n  INCREASE,\n  SWAP,\n  useChainId,\n  formatAmount,\n  shortenAddress,\n  getTokenInfo,\n  getExchangeRateDisplay,\n  getExchangeRate,\n  shouldInvertTriggerRatio,\n  formatDateTime,\n  getOrderKey,\n} from \"../../Helpers\";\n\nimport * as Api from \"../../Api\"\nimport { useInfoTokens } from \"src/hooks/useInfoTokens\";\n\nimport \"./OrdersOverview.css\";\n\nexport default function OrdersOverview() {\n  const { chainId } = useChainId();\n  const { library, account, active } = useWeb3React();\n\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n\n  const { infoTokens } = useInfoTokens(library, chainId, active, undefined, undefined);\n\n  const orders = useAllOrders(chainId, library);\n  const stats = useAllOrdersStats(chainId);\n\n  const positionsForOrders = usePositionsForOrders(\n    chainId,\n    library,\n    orders.filter((order) => order.type === DECREASE)\n  );\n\n  let openTotal;\n  let executedTotal;\n  let cancelledTotal;\n\n  if (stats) {\n    openTotal = stats.openDecrease + stats.openIncrease + stats.openSwap;\n    executedTotal = stats.executedDecrease + stats.executedIncrease + stats.executedSwap;\n    cancelledTotal = stats.cancelledDecrease + stats.cancelledIncrease + stats.cancelledSwap;\n  }\n\n  const NEAR_TRESHOLD = 98;\n\n  const executeOrder = (evt, order) => {\n    evt.preventDefault();\n\n    const params = [chainId, library, order.account, order.index, account];\n    let method;\n    if (order.type === \"Swap\") {\n      method = \"executeSwapOrder\";\n    } else if (order.type === \"Increase\") {\n      method = \"executeIncreaseOrder\";\n    } else {\n      method = \"executeDecreaseOrder\";\n    }\n    return Api[method](...params);\n  };\n\n  return (\n    <div className=\"Orders-overview\">\n      {stats && (\n        <p className=\"Orders-overview-stats\">\n          Total active: {openTotal}, executed: {executedTotal}, cancelled: {cancelledTotal}\n          <br />\n          Increase active: {stats.openIncrease}, executed: {stats.executedIncrease}, cancelled:{\" \"}\n          {stats.cancelledIncrease}\n          <br />\n          Decrease active: {stats.openDecrease}, executed: {stats.executedDecrease}, cancelled:{\" \"}\n          {stats.cancelledDecrease}\n          <br />\n          Swap active: {stats.openSwap}, executed: {stats.executedSwap}, cancelled: {stats.cancelledSwap}\n          <br />\n        </p>\n      )}\n      <p>\n        <span className=\"positive\">Price conditions are met</span>\n        <br />\n        <span style={{ color: \"orange\" }}>Close to execution price</span>\n        <br />\n        <span className=\"negative\">Can't execute because of an error</span>\n      </p>\n      <table className=\"Orders-overview-table\">\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th colSpan=\"2\">Order</th>\n            <th>Price</th>\n            <th>Mark Price</th>\n            <th>Diff</th>\n            <th>Account</th>\n            <th>Created At</th>\n            <th>Index</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders.map((order) => {\n            const { type } = order;\n            const key = getOrderKey(order);\n            if (type === SWAP) {\n              const fromToken = getTokenInfo(infoTokens, order.path[0], true, nativeTokenAddress);\n              const toTokenAddress = order.path[order.path.length - 1];\n              const toToken = getTokenInfo(infoTokens, toTokenAddress, order.shoudUnwrap, nativeTokenAddress);\n\n              let markExchangeRate;\n              let prefix;\n              let shouldExecute;\n              let nearExecute;\n              let diffPercent;\n              let invalidToken = false;\n              let error;\n              if (fromToken && toToken) {\n                const invert = shouldInvertTriggerRatio(fromToken, toToken);\n                markExchangeRate = getExchangeRate(fromToken, toToken);\n                prefix =\n                  (order.triggerAboveThreshold && !invert) || (!order.triggerAboveThreshold && invert) ? \"> \" : \"< \";\n                shouldExecute = markExchangeRate && markExchangeRate.lt(order.triggerRatio);\n                nearExecute = markExchangeRate && markExchangeRate.lt(order.triggerRatio.mul(100).div(NEAR_TRESHOLD));\n\n                if (markExchangeRate) {\n                  const diff = order.triggerRatio.gt(markExchangeRate)\n                    ? order.triggerRatio.sub(markExchangeRate)\n                    : markExchangeRate.sub(order.triggerRatio);\n                  diffPercent = diff.mul(10000).div(markExchangeRate);\n                }\n              } else {\n                invalidToken = true;\n                error = `Invalid token fromToken: \"${order.path0}\" toToken: \"${toTokenAddress}\"`;\n              }\n\n              return (\n                <tr key={key}>\n                  <td>Swap</td>\n                  <td colSpan=\"2\">\n                    {!invalidToken && (\n                      <>\n                        {formatAmount(order.amountIn, fromToken.decimals, 4, true)} {fromToken.symbol}\n                        &nbsp;for&nbsp;\n                        {formatAmount(order.minOut, toToken.decimals, 4, true)} {toToken.symbol}\n                      </>\n                    )}\n                  </td>\n                  <td className={cx({ positive: shouldExecute, near: !shouldExecute && nearExecute })}>\n                    {!invalidToken && prefix}\n                    {getExchangeRateDisplay(order.triggerRatio, fromToken, toToken)}\n                  </td>\n                  <td className={cx({ positive: shouldExecute, near: !shouldExecute && nearExecute })}>\n                    {getExchangeRateDisplay(markExchangeRate, fromToken, toToken)}\n                  </td>\n                  <td className={cx({ positive: shouldExecute, near: !shouldExecute && nearExecute })}>\n                    {formatAmount(diffPercent, 2, 2)}%\n                  </td>\n                  <td>\n                    <NavLink to={`/actions/${order.account}`}>{shortenAddress(order.account)}</NavLink>\n                  </td>\n                  <td>{formatDateTime(order.createdTimestamp)}</td>\n                  <td>{order.index}</td>\n                  <td className=\"negative\">{error}</td>\n                  <td>\n                    <button className=\"Orders-overview-action\" onClick={(evt) => executeOrder(evt, order)}>\n                      Execute\n                    </button>\n                  </td>\n                </tr>\n              );\n            } else {\n              const indexToken = getTokenInfo(infoTokens, order.indexToken, true, nativeTokenAddress);\n              const collateralToken = getTokenInfo(infoTokens, order.collateralToken, true, nativeTokenAddress);\n              const purchaseToken = getTokenInfo(infoTokens, order.purchaseToken);\n\n              let markPrice;\n              let error;\n              if (indexToken && collateralToken && (order.type === DECREASE || purchaseToken)) {\n                markPrice = order.triggerAboveThreshold ? indexToken.minPrice : indexToken.maxPrice;\n              } else {\n                error = `Invalid token indexToken: \"${order.indexToken}\" collateralToken: \"${order.collateralToken}\"`;\n                if (order.type === \"increase\") {\n                  error += ` purchaseToken: ${order.purchaseToken}`;\n                }\n              }\n\n              let shouldExecute;\n              let nearExecute;\n              let diffPercent;\n              if (markPrice) {\n                shouldExecute = order.triggerAboveThreshold\n                  ? markPrice.gt(order.triggerPrice)\n                  : markPrice.lt(order.triggerPrice);\n\n                nearExecute = order.triggerAboveThreshold\n                  ? markPrice.gt(order.triggerPrice.mul(NEAR_TRESHOLD).div(100))\n                  : markPrice.lt(order.triggerPrice.mul(100).div(NEAR_TRESHOLD));\n\n                const diff = markPrice.gt(order.triggerPrice)\n                  ? markPrice.sub(order.triggerPrice)\n                  : order.triggerPrice.sub(markPrice);\n                diffPercent = diff.mul(10000).div(markPrice);\n              }\n\n              if (!error && type === DECREASE) {\n                if (positionsForOrders && key in positionsForOrders) {\n                  const position = positionsForOrders[key];\n                  if (!position) {\n                    error = \"No position\";\n                  } else if (order.sizeDelta.gt(position[0])) {\n                    error = `Order size exceeds position`;\n                  } else if (order.sizeDelta.eq(0)) {\n                    error = \"Order size is 0\";\n                  }\n                }\n              }\n\n              return (\n                <tr key={key}>\n                  <td>{order.type}</td>\n                  <td>\n                    {order.isLong ? \"Long\" : \"Short\"} {indexToken && indexToken.symbol}\n                  </td>\n                  <td>\n                    {type === INCREASE ? \"+\" : \"-\"}${formatAmount(order.sizeDelta, USD_DECIMALS, 2, true)}\n                  </td>\n                  <td className={cx({ positive: shouldExecute, near: !shouldExecute && nearExecute })}>\n                    {order.triggerAboveThreshold ? \"> \" : \"< \"}\n                    {formatAmount(order.triggerPrice, USD_DECIMALS, 2, true)}\n                  </td>\n                  <td className={cx({ positive: shouldExecute, near: !shouldExecute && nearExecute })}>\n                    ${formatAmount(markPrice, USD_DECIMALS, 2, true)}\n                  </td>\n                  <td className={cx({ positive: shouldExecute, near: !shouldExecute && nearExecute })}>\n                    {formatAmount(diffPercent, 2, 2)}%\n                  </td>\n                  <td>\n                    <NavLink to={`/actions/${order.account}`}>{shortenAddress(order.account, 12)}</NavLink>\n                  </td>\n                  <td>{formatDateTime(order.createdTimestamp)}</td>\n                  <td>{order.index}</td>\n                  <td className=\"negative\">{error}</td>\n                  <td>\n                    <button className=\"Orders-overview-action\" onClick={(evt) => executeOrder(evt, order)}>\n                      Execute\n                    </button>\n                  </td>\n                </tr>\n              );\n            }\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,qBAA1C,QAAuE,WAAvE;AACA,SACEC,YADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,YANF,EAOEC,cAPF,EAQEC,YARF,EASEC,sBATF,EAUEC,eAVF,EAWEC,wBAXF,EAYEC,cAZF,EAaEC,WAbF,QAcO,eAdP;AAgBA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AAEA,OAAO,sBAAP;;;AAEA,eAAe,SAASC,cAAT,GAA0B;EAAA;;EACvC,MAAM;IAAEC;EAAF,IAAcZ,UAAU,EAA9B;EACA,MAAM;IAAEa,OAAF;IAAWC,OAAX;IAAoBC;EAApB,IAA+B1B,YAAY,EAAjD;EAEA,MAAM2B,kBAAkB,GAAGxB,WAAW,CAACoB,OAAD,EAAU,cAAV,CAAtC;EAEA,MAAM;IAAEK;EAAF,IAAiBP,aAAa,CAACG,OAAD,EAAUD,OAAV,EAAmBG,MAAnB,EAA2BG,SAA3B,EAAsCA,SAAtC,CAApC;EAEA,MAAMC,MAAM,GAAG1B,YAAY,CAACmB,OAAD,EAAUC,OAAV,CAA3B;EACA,MAAMO,KAAK,GAAG1B,iBAAiB,CAACkB,OAAD,CAA/B;EAEA,MAAMS,kBAAkB,GAAG1B,qBAAqB,CAC9CiB,OAD8C,EAE9CC,OAF8C,EAG9CM,MAAM,CAACG,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACC,IAAN,KAAe3B,QAAxC,CAH8C,CAAhD;EAMA,IAAI4B,SAAJ;EACA,IAAIC,aAAJ;EACA,IAAIC,cAAJ;;EAEA,IAAIP,KAAJ,EAAW;IACTK,SAAS,GAAGL,KAAK,CAACQ,YAAN,GAAqBR,KAAK,CAACS,YAA3B,GAA0CT,KAAK,CAACU,QAA5D;IACAJ,aAAa,GAAGN,KAAK,CAACW,gBAAN,GAAyBX,KAAK,CAACY,gBAA/B,GAAkDZ,KAAK,CAACa,YAAxE;IACAN,cAAc,GAAGP,KAAK,CAACc,iBAAN,GAA0Bd,KAAK,CAACe,iBAAhC,GAAoDf,KAAK,CAACgB,aAA3E;EACD;;EAED,MAAMC,aAAa,GAAG,EAAtB;;EAEA,MAAMC,YAAY,GAAG,CAACC,GAAD,EAAMhB,KAAN,KAAgB;IACnCgB,GAAG,CAACC,cAAJ;IAEA,MAAMC,MAAM,GAAG,CAAC7B,OAAD,EAAUC,OAAV,EAAmBU,KAAK,CAACT,OAAzB,EAAkCS,KAAK,CAACmB,KAAxC,EAA+C5B,OAA/C,CAAf;IACA,IAAI6B,MAAJ;;IACA,IAAIpB,KAAK,CAACC,IAAN,KAAe,MAAnB,EAA2B;MACzBmB,MAAM,GAAG,kBAAT;IACD,CAFD,MAEO,IAAIpB,KAAK,CAACC,IAAN,KAAe,UAAnB,EAA+B;MACpCmB,MAAM,GAAG,sBAAT;IACD,CAFM,MAEA;MACLA,MAAM,GAAG,sBAAT;IACD;;IACD,OAAOlC,GAAG,CAACkC,MAAD,CAAH,CAAY,GAAGF,MAAf,CAAP;EACD,CAbD;;EAeA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,WACGrB,KAAK,iBACJ;MAAG,SAAS,EAAC,uBAAb;MAAA,6BACiBK,SADjB,kBACwCC,aADxC,mBACoEC,cADpE,eAEE;QAAA;QAAA;QAAA;MAAA,QAFF,uBAGoBP,KAAK,CAACS,YAH1B,kBAGoDT,KAAK,CAACY,gBAH1D,kBAGwF,GAHxF,EAIGZ,KAAK,CAACe,iBAJT,eAKE;QAAA;QAAA;QAAA;MAAA,QALF,uBAMoBf,KAAK,CAACQ,YAN1B,kBAMoDR,KAAK,CAACW,gBAN1D,kBAMwF,GANxF,EAOGX,KAAK,CAACc,iBAPT,eAQE;QAAA;QAAA;QAAA;MAAA,QARF,mBASgBd,KAAK,CAACU,QATtB,kBAS4CV,KAAK,CAACa,YATlD,mBAS6Eb,KAAK,CAACgB,aATnF,eAUE;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAeE;MAAA,wBACE;QAAM,SAAS,EAAC,UAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAM,KAAK,EAAE;UAAEQ,KAAK,EAAE;QAAT,CAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAM,SAAS,EAAC,UAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAfF,eAsBE;MAAO,SAAS,EAAC,uBAAjB;MAAA,wBACE;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAI,OAAO,EAAC,GAAZ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALF,eAME;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QANF,eAOE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF,eAQE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QARF,eASE;YAAA;YAAA;YAAA;UAAA,QATF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAcE;QAAA,UACGzB,MAAM,CAAC0B,GAAP,CAAYtB,KAAD,IAAW;UACrB,MAAM;YAAEC;UAAF,IAAWD,KAAjB;UACA,MAAMuB,GAAG,GAAGtC,WAAW,CAACe,KAAD,CAAvB;;UACA,IAAIC,IAAI,KAAKzB,IAAb,EAAmB;YACjB,MAAMgD,SAAS,GAAG5C,YAAY,CAACc,UAAD,EAAaM,KAAK,CAACyB,IAAN,CAAW,CAAX,CAAb,EAA4B,IAA5B,EAAkChC,kBAAlC,CAA9B;YACA,MAAMiC,cAAc,GAAG1B,KAAK,CAACyB,IAAN,CAAWzB,KAAK,CAACyB,IAAN,CAAWE,MAAX,GAAoB,CAA/B,CAAvB;YACA,MAAMC,OAAO,GAAGhD,YAAY,CAACc,UAAD,EAAagC,cAAb,EAA6B1B,KAAK,CAAC6B,WAAnC,EAAgDpC,kBAAhD,CAA5B;YAEA,IAAIqC,gBAAJ;YACA,IAAIC,MAAJ;YACA,IAAIC,aAAJ;YACA,IAAIC,WAAJ;YACA,IAAIC,WAAJ;YACA,IAAIC,YAAY,GAAG,KAAnB;YACA,IAAIC,KAAJ;;YACA,IAAIZ,SAAS,IAAII,OAAjB,EAA0B;cACxB,MAAMS,MAAM,GAAGtD,wBAAwB,CAACyC,SAAD,EAAYI,OAAZ,CAAvC;cACAE,gBAAgB,GAAGhD,eAAe,CAAC0C,SAAD,EAAYI,OAAZ,CAAlC;cACAG,MAAM,GACH/B,KAAK,CAACsC,qBAAN,IAA+B,CAACD,MAAjC,IAA6C,CAACrC,KAAK,CAACsC,qBAAP,IAAgCD,MAA7E,GAAuF,IAAvF,GAA8F,IADhG;cAEAL,aAAa,GAAGF,gBAAgB,IAAIA,gBAAgB,CAACS,EAAjB,CAAoBvC,KAAK,CAACwC,YAA1B,CAApC;cACAP,WAAW,GAAGH,gBAAgB,IAAIA,gBAAgB,CAACS,EAAjB,CAAoBvC,KAAK,CAACwC,YAAN,CAAmBC,GAAnB,CAAuB,GAAvB,EAA4BC,GAA5B,CAAgC5B,aAAhC,CAApB,CAAlC;;cAEA,IAAIgB,gBAAJ,EAAsB;gBACpB,MAAMa,IAAI,GAAG3C,KAAK,CAACwC,YAAN,CAAmBI,EAAnB,CAAsBd,gBAAtB,IACT9B,KAAK,CAACwC,YAAN,CAAmBK,GAAnB,CAAuBf,gBAAvB,CADS,GAETA,gBAAgB,CAACe,GAAjB,CAAqB7C,KAAK,CAACwC,YAA3B,CAFJ;gBAGAN,WAAW,GAAGS,IAAI,CAACF,GAAL,CAAS,KAAT,EAAgBC,GAAhB,CAAoBZ,gBAApB,CAAd;cACD;YACF,CAdD,MAcO;cACLK,YAAY,GAAG,IAAf;cACAC,KAAK,GAAI,6BAA4BpC,KAAK,CAAC8C,KAAM,eAAcpB,cAAe,GAA9E;YACD;;YAED,oBACE;cAAA,wBACE;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAI,OAAO,EAAC,GAAZ;gBAAA,UACG,CAACS,YAAD,iBACC;kBAAA,WACGzD,YAAY,CAACsB,KAAK,CAAC+C,QAAP,EAAiBvB,SAAS,CAACwB,QAA3B,EAAqC,CAArC,EAAwC,IAAxC,CADf,OAC+DxB,SAAS,CAACyB,MADzE,iBAGGvE,YAAY,CAACsB,KAAK,CAACkD,MAAP,EAAetB,OAAO,CAACoB,QAAvB,EAAiC,CAAjC,EAAoC,IAApC,CAHf,OAG2DpB,OAAO,CAACqB,MAHnE;gBAAA;cAFJ;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAWE;gBAAI,SAAS,EAAElF,EAAE,CAAC;kBAAEoF,QAAQ,EAAEnB,aAAZ;kBAA2BoB,IAAI,EAAE,CAACpB,aAAD,IAAkBC;gBAAnD,CAAD,CAAjB;gBAAA,WACG,CAACE,YAAD,IAAiBJ,MADpB,EAEGlD,sBAAsB,CAACmB,KAAK,CAACwC,YAAP,EAAqBhB,SAArB,EAAgCI,OAAhC,CAFzB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAXF,eAeE;gBAAI,SAAS,EAAE7D,EAAE,CAAC;kBAAEoF,QAAQ,EAAEnB,aAAZ;kBAA2BoB,IAAI,EAAE,CAACpB,aAAD,IAAkBC;gBAAnD,CAAD,CAAjB;gBAAA,UACGpD,sBAAsB,CAACiD,gBAAD,EAAmBN,SAAnB,EAA8BI,OAA9B;cADzB;gBAAA;gBAAA;gBAAA;cAAA,QAfF,eAkBE;gBAAI,SAAS,EAAE7D,EAAE,CAAC;kBAAEoF,QAAQ,EAAEnB,aAAZ;kBAA2BoB,IAAI,EAAE,CAACpB,aAAD,IAAkBC;gBAAnD,CAAD,CAAjB;gBAAA,WACGvD,YAAY,CAACwD,WAAD,EAAc,CAAd,EAAiB,CAAjB,CADf;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAlBF,eAqBE;gBAAA,uBACE,QAAC,OAAD;kBAAS,EAAE,EAAG,YAAWlC,KAAK,CAACT,OAAQ,EAAvC;kBAAA,UAA2CZ,cAAc,CAACqB,KAAK,CAACT,OAAP;gBAAzD;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QArBF,eAwBE;gBAAA,UAAKP,cAAc,CAACgB,KAAK,CAACqD,gBAAP;cAAnB;gBAAA;gBAAA;gBAAA;cAAA,QAxBF,eAyBE;gBAAA,UAAKrD,KAAK,CAACmB;cAAX;gBAAA;gBAAA;gBAAA;cAAA,QAzBF,eA0BE;gBAAI,SAAS,EAAC,UAAd;gBAAA,UAA0BiB;cAA1B;gBAAA;gBAAA;gBAAA;cAAA,QA1BF,eA2BE;gBAAA,uBACE;kBAAQ,SAAS,EAAC,wBAAlB;kBAA2C,OAAO,EAAGpB,GAAD,IAASD,YAAY,CAACC,GAAD,EAAMhB,KAAN,CAAzE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QA3BF;YAAA,GAASuB,GAAT;cAAA;cAAA;cAAA;YAAA,QADF;UAmCD,CAlED,MAkEO;YACL,MAAM+B,UAAU,GAAG1E,YAAY,CAACc,UAAD,EAAaM,KAAK,CAACsD,UAAnB,EAA+B,IAA/B,EAAqC7D,kBAArC,CAA/B;YACA,MAAM8D,eAAe,GAAG3E,YAAY,CAACc,UAAD,EAAaM,KAAK,CAACuD,eAAnB,EAAoC,IAApC,EAA0C9D,kBAA1C,CAApC;YACA,MAAM+D,aAAa,GAAG5E,YAAY,CAACc,UAAD,EAAaM,KAAK,CAACwD,aAAnB,CAAlC;YAEA,IAAIC,SAAJ;YACA,IAAIrB,KAAJ;;YACA,IAAIkB,UAAU,IAAIC,eAAd,KAAkCvD,KAAK,CAACC,IAAN,KAAe3B,QAAf,IAA2BkF,aAA7D,CAAJ,EAAiF;cAC/EC,SAAS,GAAGzD,KAAK,CAACsC,qBAAN,GAA8BgB,UAAU,CAACI,QAAzC,GAAoDJ,UAAU,CAACK,QAA3E;YACD,CAFD,MAEO;cACLvB,KAAK,GAAI,8BAA6BpC,KAAK,CAACsD,UAAW,uBAAsBtD,KAAK,CAACuD,eAAgB,GAAnG;;cACA,IAAIvD,KAAK,CAACC,IAAN,KAAe,UAAnB,EAA+B;gBAC7BmC,KAAK,IAAK,mBAAkBpC,KAAK,CAACwD,aAAc,EAAhD;cACD;YACF;;YAED,IAAIxB,aAAJ;YACA,IAAIC,WAAJ;YACA,IAAIC,WAAJ;;YACA,IAAIuB,SAAJ,EAAe;cACbzB,aAAa,GAAGhC,KAAK,CAACsC,qBAAN,GACZmB,SAAS,CAACb,EAAV,CAAa5C,KAAK,CAAC4D,YAAnB,CADY,GAEZH,SAAS,CAAClB,EAAV,CAAavC,KAAK,CAAC4D,YAAnB,CAFJ;cAIA3B,WAAW,GAAGjC,KAAK,CAACsC,qBAAN,GACVmB,SAAS,CAACb,EAAV,CAAa5C,KAAK,CAAC4D,YAAN,CAAmBnB,GAAnB,CAAuB3B,aAAvB,EAAsC4B,GAAtC,CAA0C,GAA1C,CAAb,CADU,GAEVe,SAAS,CAAClB,EAAV,CAAavC,KAAK,CAAC4D,YAAN,CAAmBnB,GAAnB,CAAuB,GAAvB,EAA4BC,GAA5B,CAAgC5B,aAAhC,CAAb,CAFJ;cAIA,MAAM6B,IAAI,GAAGc,SAAS,CAACb,EAAV,CAAa5C,KAAK,CAAC4D,YAAnB,IACTH,SAAS,CAACZ,GAAV,CAAc7C,KAAK,CAAC4D,YAApB,CADS,GAET5D,KAAK,CAAC4D,YAAN,CAAmBf,GAAnB,CAAuBY,SAAvB,CAFJ;cAGAvB,WAAW,GAAGS,IAAI,CAACF,GAAL,CAAS,KAAT,EAAgBC,GAAhB,CAAoBe,SAApB,CAAd;YACD;;YAED,IAAI,CAACrB,KAAD,IAAUnC,IAAI,KAAK3B,QAAvB,EAAiC;cAC/B,IAAIwB,kBAAkB,IAAIyB,GAAG,IAAIzB,kBAAjC,EAAqD;gBACnD,MAAM+D,QAAQ,GAAG/D,kBAAkB,CAACyB,GAAD,CAAnC;;gBACA,IAAI,CAACsC,QAAL,EAAe;kBACbzB,KAAK,GAAG,aAAR;gBACD,CAFD,MAEO,IAAIpC,KAAK,CAAC8D,SAAN,CAAgBlB,EAAhB,CAAmBiB,QAAQ,CAAC,CAAD,CAA3B,CAAJ,EAAqC;kBAC1CzB,KAAK,GAAI,6BAAT;gBACD,CAFM,MAEA,IAAIpC,KAAK,CAAC8D,SAAN,CAAgBC,EAAhB,CAAmB,CAAnB,CAAJ,EAA2B;kBAChC3B,KAAK,GAAG,iBAAR;gBACD;cACF;YACF;;YAED,oBACE;cAAA,wBACE;gBAAA,UAAKpC,KAAK,CAACC;cAAX;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAA,WACGD,KAAK,CAACgE,MAAN,GAAe,MAAf,GAAwB,OAD3B,OACqCV,UAAU,IAAIA,UAAU,CAACL,MAD9D;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAKE;gBAAA,WACGhD,IAAI,KAAK1B,QAAT,GAAoB,GAApB,GAA0B,GAD7B,OACmCG,YAAY,CAACsB,KAAK,CAAC8D,SAAP,EAAkBzF,YAAlB,EAAgC,CAAhC,EAAmC,IAAnC,CAD/C;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QALF,eAQE;gBAAI,SAAS,EAAEN,EAAE,CAAC;kBAAEoF,QAAQ,EAAEnB,aAAZ;kBAA2BoB,IAAI,EAAE,CAACpB,aAAD,IAAkBC;gBAAnD,CAAD,CAAjB;gBAAA,WACGjC,KAAK,CAACsC,qBAAN,GAA8B,IAA9B,GAAqC,IADxC,EAEG5D,YAAY,CAACsB,KAAK,CAAC4D,YAAP,EAAqBvF,YAArB,EAAmC,CAAnC,EAAsC,IAAtC,CAFf;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QARF,eAYE;gBAAI,SAAS,EAAEN,EAAE,CAAC;kBAAEoF,QAAQ,EAAEnB,aAAZ;kBAA2BoB,IAAI,EAAE,CAACpB,aAAD,IAAkBC;gBAAnD,CAAD,CAAjB;gBAAA,gBACIvD,YAAY,CAAC+E,SAAD,EAAYpF,YAAZ,EAA0B,CAA1B,EAA6B,IAA7B,CADhB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAZF,eAeE;gBAAI,SAAS,EAAEN,EAAE,CAAC;kBAAEoF,QAAQ,EAAEnB,aAAZ;kBAA2BoB,IAAI,EAAE,CAACpB,aAAD,IAAkBC;gBAAnD,CAAD,CAAjB;gBAAA,WACGvD,YAAY,CAACwD,WAAD,EAAc,CAAd,EAAiB,CAAjB,CADf;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAfF,eAkBE;gBAAA,uBACE,QAAC,OAAD;kBAAS,EAAE,EAAG,YAAWlC,KAAK,CAACT,OAAQ,EAAvC;kBAAA,UAA2CZ,cAAc,CAACqB,KAAK,CAACT,OAAP,EAAgB,EAAhB;gBAAzD;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAlBF,eAqBE;gBAAA,UAAKP,cAAc,CAACgB,KAAK,CAACqD,gBAAP;cAAnB;gBAAA;gBAAA;gBAAA;cAAA,QArBF,eAsBE;gBAAA,UAAKrD,KAAK,CAACmB;cAAX;gBAAA;gBAAA;gBAAA;cAAA,QAtBF,eAuBE;gBAAI,SAAS,EAAC,UAAd;gBAAA,UAA0BiB;cAA1B;gBAAA;gBAAA;gBAAA;cAAA,QAvBF,eAwBE;gBAAA,uBACE;kBAAQ,SAAS,EAAC,wBAAlB;kBAA2C,OAAO,EAAGpB,GAAD,IAASD,YAAY,CAACC,GAAD,EAAMhB,KAAN,CAAzE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAxBF;YAAA,GAASuB,GAAT;cAAA;cAAA;cAAA;YAAA,QADF;UAgCD;QACF,CArJA;MADH;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA,QAtBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgMD;;GA5OuBnC,c;UACFX,U,EACiBX,Y,EAIdqB,a,EAERjB,Y,EACDC,iB,EAEaC,qB;;;KAXLgB,c"},"metadata":{},"sourceType":"module"}