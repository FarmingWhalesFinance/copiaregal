{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { groupBy } from '../../lib/group-by';\nimport { ON_REMOVE_FROM_FUTURE } from '../../lib/priority-queue';\nimport { PersistedPriorityQueue } from '../../lib/priority-queue/persisted';\nimport { isOnline } from '../connection';\nimport { Context, ContextCancelation } from '../context';\nimport { Emitter } from '@segment/analytics-core';\nimport { createTaskGroup } from '../task/task-group';\nimport { attempt, ensure } from './delivery';\nimport { inspectorHost } from '../inspector';\n\nvar EventQueue =\n/** @class */\nfunction (_super) {\n  __extends(EventQueue, _super);\n\n  function EventQueue(priorityQueue) {\n    var _this = _super.call(this) || this;\n    /**\n     * All event deliveries get suspended until all the tasks in this task group are complete.\n     * For example: a middleware that augments the event object should be loaded safely as a\n     * critical task, this way, event queue will wait for it to be ready before sending events.\n     *\n     * This applies to all the events already in the queue, and the upcoming ones\n     */\n\n\n    _this.criticalTasks = createTaskGroup();\n    _this.plugins = [];\n    _this.failedInitializations = [];\n    _this.flushing = false;\n    _this.queue = priorityQueue !== null && priorityQueue !== void 0 ? priorityQueue : new PersistedPriorityQueue(4, 'event-queue');\n\n    _this.queue.on(ON_REMOVE_FROM_FUTURE, function () {\n      _this.scheduleFlush(0);\n    });\n\n    return _this;\n  }\n\n  EventQueue.prototype.register = function (ctx, plugin, instance) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.resolve(plugin.load(ctx, instance)).then(function () {\n              _this.plugins.push(plugin);\n            }).catch(function (err) {\n              if (plugin.type === 'destination') {\n                _this.failedInitializations.push(plugin.name);\n\n                console.warn(plugin.name, err);\n                ctx.log('warn', 'Failed to load destination', {\n                  plugin: plugin.name,\n                  error: err\n                });\n                return;\n              }\n\n              throw err;\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  EventQueue.prototype.deregister = function (ctx, plugin, instance) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n\n            if (!plugin.unload) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , Promise.resolve(plugin.unload(ctx, instance))];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            this.plugins = this.plugins.filter(function (p) {\n              return p.name !== plugin.name;\n            });\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _a.sent();\n            ctx.log('warn', 'Failed to unload destination', {\n              plugin: plugin.name,\n              error: e_1\n            });\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  EventQueue.prototype.dispatch = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var willDeliver;\n      return __generator(this, function (_a) {\n        ctx.log('debug', 'Dispatching');\n        ctx.stats.increment('message_dispatched');\n        this.queue.push(ctx);\n        willDeliver = this.subscribeToDelivery(ctx);\n        this.scheduleFlush(0);\n        return [2\n        /*return*/\n        , willDeliver];\n      });\n    });\n  };\n\n  EventQueue.prototype.subscribeToDelivery = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve) {\n          var onDeliver = function (flushed, delivered) {\n            if (flushed.isSame(ctx)) {\n              _this.off('flush', onDeliver);\n\n              if (delivered) {\n                resolve(flushed);\n              } else {\n                resolve(flushed);\n              }\n            }\n          };\n\n          _this.on('flush', onDeliver);\n        })];\n      });\n    });\n  };\n\n  EventQueue.prototype.dispatchSingle = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        ctx.log('debug', 'Dispatching');\n        ctx.stats.increment('message_dispatched');\n        this.queue.updateAttempts(ctx);\n        ctx.attempts = 1;\n        return [2\n        /*return*/\n        , this.deliver(ctx).catch(function (err) {\n          if (err instanceof ContextCancelation && err.retry === false) {\n            ctx.setFailedDelivery({\n              reason: err\n            });\n            return ctx;\n          }\n\n          var accepted = _this.enqueuRetry(err, ctx);\n\n          if (!accepted) {\n            ctx.setFailedDelivery({\n              reason: err\n            });\n            return ctx;\n          }\n\n          return _this.subscribeToDelivery(ctx);\n        })];\n      });\n    });\n  };\n\n  EventQueue.prototype.isEmpty = function () {\n    return this.queue.length === 0;\n  };\n\n  EventQueue.prototype.scheduleFlush = function (timeout) {\n    var _this = this;\n\n    if (timeout === void 0) {\n      timeout = 500;\n    }\n\n    if (this.flushing) {\n      return;\n    }\n\n    this.flushing = true;\n    setTimeout(function () {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      _this.flush().then(function () {\n        setTimeout(function () {\n          _this.flushing = false;\n\n          if (_this.queue.length) {\n            _this.scheduleFlush(0);\n          }\n        }, 0);\n      });\n    }, timeout);\n  };\n\n  EventQueue.prototype.deliver = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var start, done, err_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.criticalTasks.done()];\n\n          case 1:\n            _a.sent();\n\n            start = Date.now();\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this.flushOne(ctx)];\n\n          case 3:\n            ctx = _a.sent();\n            done = Date.now() - start;\n            ctx.stats.gauge('delivered', done);\n            ctx.log('debug', 'Delivered', ctx.event);\n            return [2\n            /*return*/\n            , ctx];\n\n          case 4:\n            err_1 = _a.sent();\n            ctx.log('error', 'Failed to deliver', err_1);\n            ctx.stats.increment('delivery_failed');\n            throw err_1;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  EventQueue.prototype.enqueuRetry = function (err, ctx) {\n    var notRetriable = err instanceof ContextCancelation && err.retry === false;\n    var retriable = !notRetriable;\n\n    if (retriable) {\n      var accepted = this.queue.pushWithBackoff(ctx);\n      return accepted;\n    }\n\n    return false;\n  };\n\n  EventQueue.prototype.flush = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var ctx, err_2, accepted;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.queue.length === 0 || !isOnline()) {\n              return [2\n              /*return*/\n              , []];\n            }\n\n            ctx = this.queue.pop();\n\n            if (!ctx) {\n              return [2\n              /*return*/\n              , []];\n            }\n\n            ctx.attempts = this.queue.getAttempts(ctx);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.deliver(ctx)];\n\n          case 2:\n            ctx = _a.sent();\n            this.emit('flush', ctx, true);\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_2 = _a.sent();\n            accepted = this.enqueuRetry(err_2, ctx);\n\n            if (!accepted) {\n              ctx.setFailedDelivery({\n                reason: err_2\n              });\n              this.emit('flush', ctx, false);\n            }\n\n            return [2\n            /*return*/\n            , []];\n\n          case 4:\n            return [2\n            /*return*/\n            , [ctx]];\n        }\n      });\n    });\n  };\n\n  EventQueue.prototype.isReady = function () {\n    // return this.plugins.every((p) => p.isLoaded())\n    // should we wait for every plugin to load?\n    return true;\n  };\n\n  EventQueue.prototype.availableExtensions = function (denyList) {\n    var available = this.plugins.filter(function (p) {\n      var _a; // Only filter out destination plugins or the Segment.io plugin\n\n\n      if (p.type !== 'destination' && p.name !== 'Segment.io') {\n        return true;\n      } // Explicit integration option takes precedence, `All: false` does not apply to Segment.io\n\n\n      return (_a = denyList[p.name]) !== null && _a !== void 0 ? _a : (p.name === 'Segment.io' ? true : denyList.All) !== false;\n    });\n\n    var _a = groupBy(available, 'type'),\n        _b = _a.before,\n        before = _b === void 0 ? [] : _b,\n        _c = _a.enrichment,\n        enrichment = _c === void 0 ? [] : _c,\n        _d = _a.destination,\n        destination = _d === void 0 ? [] : _d,\n        _e = _a.after,\n        after = _e === void 0 ? [] : _e;\n\n    return {\n      before: before,\n      enrichment: enrichment,\n      destinations: destination,\n      after: after\n    };\n  };\n\n  EventQueue.prototype.flushOne = function (ctx) {\n    var _a, _b, _c, _d;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _e, before, enrichment, _i, before_1, beforeWare, temp, _f, enrichment_1, enrichmentWare, temp, _g, destinations, after, afterCalls;\n\n      return __generator(this, function (_h) {\n        switch (_h.label) {\n          case 0:\n            if (!this.isReady()) {\n              throw new Error('Not ready');\n            }\n\n            _e = this.availableExtensions((_a = ctx.event.integrations) !== null && _a !== void 0 ? _a : {}), before = _e.before, enrichment = _e.enrichment;\n            _i = 0, before_1 = before;\n            _h.label = 1;\n\n          case 1:\n            if (!(_i < before_1.length)) return [3\n            /*break*/\n            , 4];\n            beforeWare = before_1[_i];\n            return [4\n            /*yield*/\n            , ensure(ctx, beforeWare)];\n\n          case 2:\n            temp = _h.sent();\n\n            if (temp instanceof Context) {\n              ctx = temp;\n            }\n\n            _h.label = 3;\n\n          case 3:\n            _i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 4:\n            _f = 0, enrichment_1 = enrichment;\n            _h.label = 5;\n\n          case 5:\n            if (!(_f < enrichment_1.length)) return [3\n            /*break*/\n            , 8];\n            enrichmentWare = enrichment_1[_f];\n            return [4\n            /*yield*/\n            , attempt(ctx, enrichmentWare)];\n\n          case 6:\n            temp = _h.sent();\n\n            if (temp instanceof Context) {\n              ctx = temp;\n            }\n\n            _h.label = 7;\n\n          case 7:\n            _f++;\n            return [3\n            /*break*/\n            , 5];\n\n          case 8:\n            (_b = inspectorHost.enriched) === null || _b === void 0 ? void 0 : _b.call(inspectorHost, ctx);\n            _g = this.availableExtensions((_c = ctx.event.integrations) !== null && _c !== void 0 ? _c : {}), destinations = _g.destinations, after = _g.after;\n            return [4\n            /*yield*/\n            , new Promise(function (resolve, reject) {\n              setTimeout(function () {\n                var attempts = destinations.map(function (destination) {\n                  return attempt(ctx, destination);\n                });\n                Promise.all(attempts).then(resolve).catch(reject);\n              }, 0);\n            })];\n\n          case 9:\n            _h.sent();\n\n            ctx.stats.increment('message_delivered'); // FIXME: Resolve browsers destinations that the event was sent to\n\n            (_d = inspectorHost.delivered) === null || _d === void 0 ? void 0 : _d.call(inspectorHost, ctx, ['segment.io']);\n            afterCalls = after.map(function (after) {\n              return attempt(ctx, after);\n            });\n            return [4\n            /*yield*/\n            , Promise.all(afterCalls)];\n\n          case 10:\n            _h.sent();\n\n            return [2\n            /*return*/\n            , ctx];\n        }\n      });\n    });\n  };\n\n  return EventQueue;\n}(Emitter);\n\nexport { EventQueue };","map":{"version":3,"sources":["../../../../src/core/queue/event-queue.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\nimport { groupBy } from '../../lib/group-by';\nimport { ON_REMOVE_FROM_FUTURE } from '../../lib/priority-queue';\nimport { PersistedPriorityQueue } from '../../lib/priority-queue/persisted';\nimport { isOnline } from '../connection';\nimport { Context, ContextCancelation } from '../context';\nimport { Emitter } from '@segment/analytics-core';\nimport { createTaskGroup } from '../task/task-group';\nimport { attempt, ensure } from './delivery';\nimport { inspectorHost } from '../inspector';\nvar EventQueue = /** @class */ (function (_super) {\n    __extends(EventQueue, _super);\n    function EventQueue(priorityQueue) {\n        var _this = _super.call(this) || this;\n        /**\n         * All event deliveries get suspended until all the tasks in this task group are complete.\n         * For example: a middleware that augments the event object should be loaded safely as a\n         * critical task, this way, event queue will wait for it to be ready before sending events.\n         *\n         * This applies to all the events already in the queue, and the upcoming ones\n         */\n        _this.criticalTasks = createTaskGroup();\n        _this.plugins = [];\n        _this.failedInitializations = [];\n        _this.flushing = false;\n        _this.queue = priorityQueue !== null && priorityQueue !== void 0 ? priorityQueue : new PersistedPriorityQueue(4, 'event-queue');\n        _this.queue.on(ON_REMOVE_FROM_FUTURE, function () {\n            _this.scheduleFlush(0);\n        });\n        return _this;\n    }\n    EventQueue.prototype.register = function (ctx, plugin, instance) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.resolve(plugin.load(ctx, instance))\n                            .then(function () {\n                            _this.plugins.push(plugin);\n                        })\n                            .catch(function (err) {\n                            if (plugin.type === 'destination') {\n                                _this.failedInitializations.push(plugin.name);\n                                console.warn(plugin.name, err);\n                                ctx.log('warn', 'Failed to load destination', {\n                                    plugin: plugin.name,\n                                    error: err,\n                                });\n                                return;\n                            }\n                            throw err;\n                        })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    EventQueue.prototype.deregister = function (ctx, plugin, instance) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        if (!plugin.unload) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.resolve(plugin.unload(ctx, instance))];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        this.plugins = this.plugins.filter(function (p) { return p.name !== plugin.name; });\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        ctx.log('warn', 'Failed to unload destination', {\n                            plugin: plugin.name,\n                            error: e_1,\n                        });\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    EventQueue.prototype.dispatch = function (ctx) {\n        return __awaiter(this, void 0, void 0, function () {\n            var willDeliver;\n            return __generator(this, function (_a) {\n                ctx.log('debug', 'Dispatching');\n                ctx.stats.increment('message_dispatched');\n                this.queue.push(ctx);\n                willDeliver = this.subscribeToDelivery(ctx);\n                this.scheduleFlush(0);\n                return [2 /*return*/, willDeliver];\n            });\n        });\n    };\n    EventQueue.prototype.subscribeToDelivery = function (ctx) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve) {\n                        var onDeliver = function (flushed, delivered) {\n                            if (flushed.isSame(ctx)) {\n                                _this.off('flush', onDeliver);\n                                if (delivered) {\n                                    resolve(flushed);\n                                }\n                                else {\n                                    resolve(flushed);\n                                }\n                            }\n                        };\n                        _this.on('flush', onDeliver);\n                    })];\n            });\n        });\n    };\n    EventQueue.prototype.dispatchSingle = function (ctx) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                ctx.log('debug', 'Dispatching');\n                ctx.stats.increment('message_dispatched');\n                this.queue.updateAttempts(ctx);\n                ctx.attempts = 1;\n                return [2 /*return*/, this.deliver(ctx).catch(function (err) {\n                        if (err instanceof ContextCancelation && err.retry === false) {\n                            ctx.setFailedDelivery({ reason: err });\n                            return ctx;\n                        }\n                        var accepted = _this.enqueuRetry(err, ctx);\n                        if (!accepted) {\n                            ctx.setFailedDelivery({ reason: err });\n                            return ctx;\n                        }\n                        return _this.subscribeToDelivery(ctx);\n                    })];\n            });\n        });\n    };\n    EventQueue.prototype.isEmpty = function () {\n        return this.queue.length === 0;\n    };\n    EventQueue.prototype.scheduleFlush = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = 500; }\n        if (this.flushing) {\n            return;\n        }\n        this.flushing = true;\n        setTimeout(function () {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            _this.flush().then(function () {\n                setTimeout(function () {\n                    _this.flushing = false;\n                    if (_this.queue.length) {\n                        _this.scheduleFlush(0);\n                    }\n                }, 0);\n            });\n        }, timeout);\n    };\n    EventQueue.prototype.deliver = function (ctx) {\n        return __awaiter(this, void 0, void 0, function () {\n            var start, done, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.criticalTasks.done()];\n                    case 1:\n                        _a.sent();\n                        start = Date.now();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.flushOne(ctx)];\n                    case 3:\n                        ctx = _a.sent();\n                        done = Date.now() - start;\n                        ctx.stats.gauge('delivered', done);\n                        ctx.log('debug', 'Delivered', ctx.event);\n                        return [2 /*return*/, ctx];\n                    case 4:\n                        err_1 = _a.sent();\n                        ctx.log('error', 'Failed to deliver', err_1);\n                        ctx.stats.increment('delivery_failed');\n                        throw err_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    EventQueue.prototype.enqueuRetry = function (err, ctx) {\n        var notRetriable = err instanceof ContextCancelation && err.retry === false;\n        var retriable = !notRetriable;\n        if (retriable) {\n            var accepted = this.queue.pushWithBackoff(ctx);\n            return accepted;\n        }\n        return false;\n    };\n    EventQueue.prototype.flush = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var ctx, err_2, accepted;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.queue.length === 0 || !isOnline()) {\n                            return [2 /*return*/, []];\n                        }\n                        ctx = this.queue.pop();\n                        if (!ctx) {\n                            return [2 /*return*/, []];\n                        }\n                        ctx.attempts = this.queue.getAttempts(ctx);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.deliver(ctx)];\n                    case 2:\n                        ctx = _a.sent();\n                        this.emit('flush', ctx, true);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_2 = _a.sent();\n                        accepted = this.enqueuRetry(err_2, ctx);\n                        if (!accepted) {\n                            ctx.setFailedDelivery({ reason: err_2 });\n                            this.emit('flush', ctx, false);\n                        }\n                        return [2 /*return*/, []];\n                    case 4: return [2 /*return*/, [ctx]];\n                }\n            });\n        });\n    };\n    EventQueue.prototype.isReady = function () {\n        // return this.plugins.every((p) => p.isLoaded())\n        // should we wait for every plugin to load?\n        return true;\n    };\n    EventQueue.prototype.availableExtensions = function (denyList) {\n        var available = this.plugins.filter(function (p) {\n            var _a;\n            // Only filter out destination plugins or the Segment.io plugin\n            if (p.type !== 'destination' && p.name !== 'Segment.io') {\n                return true;\n            }\n            // Explicit integration option takes precedence, `All: false` does not apply to Segment.io\n            return ((_a = denyList[p.name]) !== null && _a !== void 0 ? _a : (p.name === 'Segment.io' ? true : denyList.All) !== false);\n        });\n        var _a = groupBy(available, 'type'), _b = _a.before, before = _b === void 0 ? [] : _b, _c = _a.enrichment, enrichment = _c === void 0 ? [] : _c, _d = _a.destination, destination = _d === void 0 ? [] : _d, _e = _a.after, after = _e === void 0 ? [] : _e;\n        return {\n            before: before,\n            enrichment: enrichment,\n            destinations: destination,\n            after: after,\n        };\n    };\n    EventQueue.prototype.flushOne = function (ctx) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function () {\n            var _e, before, enrichment, _i, before_1, beforeWare, temp, _f, enrichment_1, enrichmentWare, temp, _g, destinations, after, afterCalls;\n            return __generator(this, function (_h) {\n                switch (_h.label) {\n                    case 0:\n                        if (!this.isReady()) {\n                            throw new Error('Not ready');\n                        }\n                        _e = this.availableExtensions((_a = ctx.event.integrations) !== null && _a !== void 0 ? _a : {}), before = _e.before, enrichment = _e.enrichment;\n                        _i = 0, before_1 = before;\n                        _h.label = 1;\n                    case 1:\n                        if (!(_i < before_1.length)) return [3 /*break*/, 4];\n                        beforeWare = before_1[_i];\n                        return [4 /*yield*/, ensure(ctx, beforeWare)];\n                    case 2:\n                        temp = _h.sent();\n                        if (temp instanceof Context) {\n                            ctx = temp;\n                        }\n                        _h.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4:\n                        _f = 0, enrichment_1 = enrichment;\n                        _h.label = 5;\n                    case 5:\n                        if (!(_f < enrichment_1.length)) return [3 /*break*/, 8];\n                        enrichmentWare = enrichment_1[_f];\n                        return [4 /*yield*/, attempt(ctx, enrichmentWare)];\n                    case 6:\n                        temp = _h.sent();\n                        if (temp instanceof Context) {\n                            ctx = temp;\n                        }\n                        _h.label = 7;\n                    case 7:\n                        _f++;\n                        return [3 /*break*/, 5];\n                    case 8:\n                        (_b = inspectorHost.enriched) === null || _b === void 0 ? void 0 : _b.call(inspectorHost, ctx);\n                        _g = this.availableExtensions((_c = ctx.event.integrations) !== null && _c !== void 0 ? _c : {}), destinations = _g.destinations, after = _g.after;\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                setTimeout(function () {\n                                    var attempts = destinations.map(function (destination) {\n                                        return attempt(ctx, destination);\n                                    });\n                                    Promise.all(attempts).then(resolve).catch(reject);\n                                }, 0);\n                            })];\n                    case 9:\n                        _h.sent();\n                        ctx.stats.increment('message_delivered');\n                        // FIXME: Resolve browsers destinations that the event was sent to\n                        (_d = inspectorHost.delivered) === null || _d === void 0 ? void 0 : _d.call(inspectorHost, ctx, ['segment.io']);\n                        afterCalls = after.map(function (after) { return attempt(ctx, after); });\n                        return [4 /*yield*/, Promise.all(afterCalls)];\n                    case 10:\n                        _h.sent();\n                        return [2 /*return*/, ctx];\n                }\n            });\n        });\n    };\n    return EventQueue;\n}(Emitter));\nexport { EventQueue };\n//# sourceMappingURL=event-queue.js.map"]},"metadata":{},"sourceType":"module"}