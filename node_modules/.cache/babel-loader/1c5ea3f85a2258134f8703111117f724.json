{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\copiaswaps-client\\\\swaps-client\\\\src\\\\components\\\\Exchange\\\\ExchangeTVChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useCallback, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport { createChart } from \"krasulya-lightweight-charts\";\nimport { USD_DECIMALS, SWAP, INCREASE, CHART_PERIODS, formatAmount, formatDateTime, usePrevious, getLiquidationPrice } from \"../../Helpers\";\nimport { getTokens, getToken } from \"../../data/Tokens\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PRICE_LINE_TEXT_WIDTH = 15;\nconst timezoneOffset = -new Date().getTimezoneOffset() * 60;\nexport function getChartToken(swapOption, fromToken, toToken, chainId) {\n  if (!fromToken || !toToken) {\n    return;\n  }\n\n  if (swapOption !== SWAP) {\n    return toToken;\n  }\n\n  if (fromToken.isUsdg && toToken.isUsdg) {\n    return getTokens(chainId).find(t => t.isStable);\n  }\n\n  if (fromToken.isUsdg) {\n    return toToken;\n  }\n\n  if (toToken.isUsdg) {\n    return fromToken;\n  }\n\n  if (fromToken.isStable && toToken.isStable) {\n    return toToken;\n  }\n\n  if (fromToken.isStable) {\n    return toToken;\n  }\n\n  if (toToken.isStable) {\n    return fromToken;\n  }\n\n  return toToken;\n}\n\nconst getSeriesOptions = () => ({\n  // https://github.com/tradingview/lightweight-charts/blob/master/docs/area-series.md\n  lineColor: \"rgba(0, 48, 0, 0.2)\",\n  topColor: \"rgba(49, 69, 131, 0.4)\",\n  bottomColor: \"rgba(42, 64, 103, 0.0)\",\n  lineWidth: 2,\n  priceLineColor: \"rgba(0, 48, 0, 1)\",\n  downColor: \"#FF5621\",\n  wickDownColor: \"#FF5621\",\n  upColor: \"#4FE021\",\n  wickUpColor: \"#4FE021\",\n  borderVisible: false\n});\n\nconst getChartOptions = (width, height) => ({\n  width,\n  height,\n  layout: {\n    backgroundColor: \"rgba(255, 255, 255, 0)\",\n    textColor: \"#ccc\",\n    fontFamily: \"Inter\"\n  },\n  localization: {\n    // https://github.com/tradingview/lightweight-charts/blob/master/docs/customization.md#time-format\n    timeFormatter: businessDayOrTimestamp => {\n      return formatDateTime(businessDayOrTimestamp - timezoneOffset);\n    }\n  },\n  grid: {\n    vertLines: {\n      visible: true,\n      color: \"rgba(0, 48, 0, 0.2)\",\n      style: 2\n    },\n    horzLines: {\n      visible: true,\n      color: \"rgba(0, 48, 0, 0.2)\",\n      style: 2\n    }\n  },\n  // https://github.com/tradingview/lightweight-charts/blob/master/docs/time-scale.md#time-scale\n  timeScale: {\n    rightOffset: 5,\n    borderVisible: false,\n    barSpacing: 5,\n    timeVisible: true,\n    fixLeftEdge: true\n  },\n  // https://github.com/tradingview/lightweight-charts/blob/master/docs/customization.md#price-axis\n  priceScale: {\n    borderVisible: false\n  },\n  crosshair: {\n    horzLine: {\n      color: \"#aaa\"\n    },\n    vertLine: {\n      color: \"#aaa\"\n    },\n    mode: 0\n  }\n});\n\nexport default function ExchangeTVChart(props) {\n  _s();\n\n  const {\n    swapOption,\n    chainId,\n    positions,\n    savedShouldShowPositionLines,\n    orders,\n    sidebarVisible,\n    chartToken,\n    period,\n    priceData,\n    updatePriceData\n  } = props;\n  const [currentChart, setCurrentChart] = useState();\n  const [currentSeries, setCurrentSeries] = useState();\n  const symbol = chartToken ? chartToken.isWrapped ? chartToken.baseSymbol : chartToken.symbol : undefined;\n  const marketName = chartToken ? symbol + \"_USD\" : undefined;\n  const previousMarketName = usePrevious(marketName);\n  const currentOrders = useMemo(() => {\n    if (swapOption === SWAP || !chartToken) {\n      return [];\n    }\n\n    return orders.filter(order => {\n      if (order.type === SWAP) {\n        // we can't show non-stable to non-stable swap orders with existing charts\n        // so to avoid users confusion we'll show only long/short orders\n        return false;\n      }\n\n      const indexToken = getToken(chainId, order.indexToken);\n      return order.indexToken === chartToken.address || chartToken.isNative && indexToken.isWrapped;\n    });\n  }, [orders, chartToken, swapOption, chainId]);\n  const ref = useRef(null);\n  const chartRef = useRef(null);\n  const [chartInited, setChartInited] = useState(false);\n  useEffect(() => {\n    if (marketName !== previousMarketName) {\n      setChartInited(false);\n    }\n  }, [marketName, previousMarketName]);\n  const scaleChart = useCallback(() => {\n    const from = Date.now() / 1000 - 7 * 24 * CHART_PERIODS[period] / 2 + timezoneOffset;\n    const to = Date.now() / 1000 + timezoneOffset;\n    currentChart.timeScale().setVisibleRange({\n      from,\n      to\n    });\n  }, [currentChart, period]);\n  const [hoveredCandlestick, setHoveredCandlestick] = useState();\n  const onCrosshairMove = useCallback(evt => {\n    if (!evt.time) {\n      setHoveredCandlestick(null);\n      return;\n    }\n\n    for (const point of evt.seriesPrices.values()) {\n      setHoveredCandlestick(hoveredCandlestick => {\n        if (hoveredCandlestick && hoveredCandlestick.time === evt.time) {\n          // rerender optimisations\n          return hoveredCandlestick;\n        }\n\n        return {\n          time: evt.time,\n          ...point\n        };\n      });\n      break;\n    }\n  }, [setHoveredCandlestick]);\n  useEffect(() => {\n    if (!ref.current || !priceData || !priceData.length || currentChart) {\n      return;\n    }\n\n    const chart = createChart(chartRef.current, getChartOptions(chartRef.current.offsetWidth, chartRef.current.offsetHeight));\n    chart.subscribeCrosshairMove(onCrosshairMove);\n    const series = chart.addCandlestickSeries(getSeriesOptions());\n    setCurrentChart(chart);\n    setCurrentSeries(series);\n  }, [ref, priceData, currentChart, onCrosshairMove]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updatePriceData(undefined, true);\n    }, 60 * 1000);\n    return () => clearInterval(interval);\n  }, [updatePriceData]);\n  useEffect(() => {\n    if (!currentChart && !(chartRef !== null && chartRef !== void 0 && chartRef.current)) {\n      return;\n    }\n\n    const resizeChart = () => {\n      currentChart === null || currentChart === void 0 ? void 0 : currentChart.resize(chartRef.current.offsetWidth, chartRef.current.offsetHeight);\n    };\n\n    window.addEventListener(\"resize\", resizeChart);\n    return () => window.removeEventListener(\"resize\", resizeChart);\n  }, [currentChart]);\n  useEffect(() => {\n    if (!currentChart && !(chartRef !== null && chartRef !== void 0 && chartRef.current)) {\n      return;\n    }\n\n    const resizeChart = () => {\n      currentChart === null || currentChart === void 0 ? void 0 : currentChart.resize(chartRef.current.offsetWidth, chartRef.current.offsetHeight);\n    };\n\n    let timeout = setTimeout(() => {\n      resizeChart();\n    }, 500);\n    return () => clearTimeout(timeout);\n  }, [currentChart, sidebarVisible]);\n  useEffect(() => {\n    if (currentSeries && priceData && priceData.length) {\n      currentSeries.setData(priceData);\n\n      if (!chartInited) {\n        scaleChart();\n        setChartInited(true);\n      }\n    }\n  }, [priceData, currentSeries, chartInited, scaleChart]);\n  useEffect(() => {\n    const lines = [];\n\n    if (currentSeries && savedShouldShowPositionLines) {\n      if (currentOrders && currentOrders.length > 0) {\n        currentOrders.forEach(order => {\n          const indexToken = getToken(chainId, order.indexToken);\n          let tokenSymbol;\n\n          if (indexToken && indexToken.symbol) {\n            tokenSymbol = indexToken.isWrapped ? indexToken.baseSymbol : indexToken.symbol;\n          }\n\n          const title = `${order.type === INCREASE ? \"Inc.\" : \"Dec.\"} ${tokenSymbol} ${order.isLong ? \"Long\" : \"Short\"}`;\n          const color = \"#3a3e5e\";\n          lines.push(currentSeries.createPriceLine({\n            price: parseFloat(formatAmount(order.triggerPrice, USD_DECIMALS, 2)),\n            color,\n            title: title.padEnd(PRICE_LINE_TEXT_WIDTH, \" \")\n          }));\n        });\n      }\n\n      if (positions && positions.length > 0) {\n        const color = \"#3a3e5e\";\n        positions.forEach(position => {\n          lines.push(currentSeries.createPriceLine({\n            price: parseFloat(formatAmount(position.averagePrice, USD_DECIMALS, 2)),\n            color,\n            title: `Open ${position.indexToken.symbol} ${position.isLong ? \"Long\" : \"Short\"}`.padEnd(PRICE_LINE_TEXT_WIDTH, \" \")\n          }));\n          const liquidationPrice = getLiquidationPrice(position);\n          lines.push(currentSeries.createPriceLine({\n            price: parseFloat(formatAmount(liquidationPrice, USD_DECIMALS, 2)),\n            color,\n            title: `Liq. ${position.indexToken.symbol} ${position.isLong ? \"Long\" : \"Short\"}`.padEnd(PRICE_LINE_TEXT_WIDTH, \" \")\n          }));\n        });\n      }\n    }\n\n    return () => {\n      lines.forEach(line => currentSeries.removePriceLine(line));\n    };\n  }, [currentOrders, positions, currentSeries, chainId, savedShouldShowPositionLines]);\n  const candleStatsHtml = useMemo(() => {\n    if (!priceData) {\n      return null;\n    }\n\n    const candlestick = hoveredCandlestick || priceData[priceData.length - 1];\n\n    if (!candlestick) {\n      return null;\n    }\n\n    const className = cx({\n      \"ExchangeChart-bottom-stats\": true,\n      positive: candlestick.open <= candlestick.close,\n      negative: candlestick.open > candlestick.close,\n      [`length-${String(parseInt(candlestick.close)).length}`]: true\n    });\n    const toFixedNumbers = 2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ExchangeChart-bottom-stats-label\",\n        children: \"O\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ExchangeChart-bottom-stats-value\",\n        children: candlestick.open.toFixed(toFixedNumbers)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ExchangeChart-bottom-stats-label\",\n        children: \"H\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ExchangeChart-bottom-stats-value\",\n        children: candlestick.high.toFixed(toFixedNumbers)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ExchangeChart-bottom-stats-label\",\n        children: \"L\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ExchangeChart-bottom-stats-value\",\n        children: candlestick.low.toFixed(toFixedNumbers)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ExchangeChart-bottom-stats-label\",\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ExchangeChart-bottom-stats-value\",\n        children: candlestick.close.toFixed(toFixedNumbers)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this);\n  }, [hoveredCandlestick, priceData]);\n\n  if (!chartToken) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LightweightChart-container\",\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LightweightChart\",\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CandleStats\",\n        children: candleStatsHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ExchangeTVChart, \"GWrUWan+b3lqMsJXZuBBvQRLvrM=\", false, function () {\n  return [usePrevious];\n});\n\n_c = ExchangeTVChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExchangeTVChart\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","useMemo","cx","createChart","USD_DECIMALS","SWAP","INCREASE","CHART_PERIODS","formatAmount","formatDateTime","usePrevious","getLiquidationPrice","getTokens","getToken","PRICE_LINE_TEXT_WIDTH","timezoneOffset","Date","getTimezoneOffset","getChartToken","swapOption","fromToken","toToken","chainId","isUsdg","find","t","isStable","getSeriesOptions","lineColor","topColor","bottomColor","lineWidth","priceLineColor","downColor","wickDownColor","upColor","wickUpColor","borderVisible","getChartOptions","width","height","layout","backgroundColor","textColor","fontFamily","localization","timeFormatter","businessDayOrTimestamp","grid","vertLines","visible","color","style","horzLines","timeScale","rightOffset","barSpacing","timeVisible","fixLeftEdge","priceScale","crosshair","horzLine","vertLine","mode","ExchangeTVChart","props","positions","savedShouldShowPositionLines","orders","sidebarVisible","chartToken","period","priceData","updatePriceData","currentChart","setCurrentChart","currentSeries","setCurrentSeries","symbol","isWrapped","baseSymbol","undefined","marketName","previousMarketName","currentOrders","filter","order","type","indexToken","address","isNative","ref","chartRef","chartInited","setChartInited","scaleChart","from","now","to","setVisibleRange","hoveredCandlestick","setHoveredCandlestick","onCrosshairMove","evt","time","point","seriesPrices","values","current","length","chart","offsetWidth","offsetHeight","subscribeCrosshairMove","series","addCandlestickSeries","interval","setInterval","clearInterval","resizeChart","resize","window","addEventListener","removeEventListener","timeout","setTimeout","clearTimeout","setData","lines","forEach","tokenSymbol","title","isLong","push","createPriceLine","price","parseFloat","triggerPrice","padEnd","position","averagePrice","liquidationPrice","line","removePriceLine","candleStatsHtml","candlestick","className","positive","open","close","negative","String","parseInt","toFixedNumbers","toFixed","high","low"],"sources":["C:/Users/rober/Documents/copiaswaps-client/swaps-client/src/components/Exchange/ExchangeTVChart.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback, useMemo } from \"react\";\nimport cx from \"classnames\";\n\nimport { createChart } from \"krasulya-lightweight-charts\";\n\nimport {\n  USD_DECIMALS,\n  SWAP,\n  INCREASE,\n  CHART_PERIODS,\n  formatAmount,\n  formatDateTime,\n  usePrevious,\n  getLiquidationPrice,\n} from \"../../Helpers\";\n\nimport { getTokens, getToken } from \"../../data/Tokens\";\n\nconst PRICE_LINE_TEXT_WIDTH = 15;\n\nconst timezoneOffset = -new Date().getTimezoneOffset() * 60;\n\nexport function getChartToken(swapOption, fromToken, toToken, chainId) {\n  if (!fromToken || !toToken) {\n    return;\n  }\n\n  if (swapOption !== SWAP) {\n    return toToken;\n  }\n\n  if (fromToken.isUsdg && toToken.isUsdg) {\n    return getTokens(chainId).find((t) => t.isStable);\n  }\n  if (fromToken.isUsdg) {\n    return toToken;\n  }\n  if (toToken.isUsdg) {\n    return fromToken;\n  }\n\n  if (fromToken.isStable && toToken.isStable) {\n    return toToken;\n  }\n  if (fromToken.isStable) {\n    return toToken;\n  }\n  if (toToken.isStable) {\n    return fromToken;\n  }\n\n  return toToken;\n}\n\nconst getSeriesOptions = () => ({\n  // https://github.com/tradingview/lightweight-charts/blob/master/docs/area-series.md\n  lineColor: \"rgba(0, 48, 0, 0.2)\",\n  topColor: \"rgba(49, 69, 131, 0.4)\",\n  bottomColor: \"rgba(42, 64, 103, 0.0)\",\n  lineWidth: 2,\n  priceLineColor: \"rgba(0, 48, 0, 1)\",\n  downColor: \"#FF5621\",\n  wickDownColor: \"#FF5621\",\n  upColor: \"#4FE021\",\n  wickUpColor: \"#4FE021\",\n  borderVisible: false,\n});\n\nconst getChartOptions = (width, height) => ({\n  width,\n  height,\n  layout: {\n    backgroundColor: \"rgba(255, 255, 255, 0)\",\n    textColor: \"#ccc\",\n    fontFamily: \"Inter\",\n  },\n  localization: {\n    // https://github.com/tradingview/lightweight-charts/blob/master/docs/customization.md#time-format\n    timeFormatter: (businessDayOrTimestamp) => {\n      return formatDateTime(businessDayOrTimestamp - timezoneOffset);\n    },\n  },\n  grid: {\n    vertLines: {\n      visible: true,\n      color: \"rgba(0, 48, 0, 0.2)\",\n      style: 2,\n    },\n    horzLines: {\n      visible: true,\n      color: \"rgba(0, 48, 0, 0.2)\",\n      style: 2,\n    },\n  },\n  // https://github.com/tradingview/lightweight-charts/blob/master/docs/time-scale.md#time-scale\n  timeScale: {\n    rightOffset: 5,\n    borderVisible: false,\n    barSpacing: 5,\n    timeVisible: true,\n    fixLeftEdge: true,\n  },\n  // https://github.com/tradingview/lightweight-charts/blob/master/docs/customization.md#price-axis\n  priceScale: {\n    borderVisible: false,\n  },\n  crosshair: {\n    horzLine: {\n      color: \"#aaa\",\n    },\n    vertLine: {\n      color: \"#aaa\",\n    },\n    mode: 0,\n  },\n});\n\nexport default function ExchangeTVChart(props) {\n  const {\n    swapOption,\n    chainId,\n    positions,\n    savedShouldShowPositionLines,\n    orders,\n    sidebarVisible,\n    chartToken,\n    period,\n    priceData,\n    updatePriceData,\n  } = props;\n  const [currentChart, setCurrentChart] = useState();\n  const [currentSeries, setCurrentSeries] = useState();\n\n  const symbol = chartToken ? (chartToken.isWrapped ? chartToken.baseSymbol : chartToken.symbol) : undefined;\n  const marketName = chartToken ? symbol + \"_USD\" : undefined;\n  const previousMarketName = usePrevious(marketName);\n\n  const currentOrders = useMemo(() => {\n    if (swapOption === SWAP || !chartToken) {\n      return [];\n    }\n\n    return orders.filter((order) => {\n      if (order.type === SWAP) {\n        // we can't show non-stable to non-stable swap orders with existing charts\n        // so to avoid users confusion we'll show only long/short orders\n        return false;\n      }\n\n      const indexToken = getToken(chainId, order.indexToken);\n      return order.indexToken === chartToken.address || (chartToken.isNative && indexToken.isWrapped);\n    });\n  }, [orders, chartToken, swapOption, chainId]);\n\n  const ref = useRef(null);\n  const chartRef = useRef(null);\n\n  const [chartInited, setChartInited] = useState(false);\n  useEffect(() => {\n    if (marketName !== previousMarketName) {\n      setChartInited(false);\n    }\n  }, [marketName, previousMarketName]);\n\n  const scaleChart = useCallback(() => {\n    const from = Date.now() / 1000 - (7 * 24 * CHART_PERIODS[period]) / 2 + timezoneOffset;\n    const to = Date.now() / 1000 + timezoneOffset;\n    currentChart.timeScale().setVisibleRange({ from, to });\n  }, [currentChart, period]);\n\n  const [hoveredCandlestick, setHoveredCandlestick] = useState();\n\n  const onCrosshairMove = useCallback(\n    (evt) => {\n      if (!evt.time) {\n        setHoveredCandlestick(null);\n        return;\n      }\n\n      for (const point of evt.seriesPrices.values()) {\n        setHoveredCandlestick((hoveredCandlestick) => {\n          if (hoveredCandlestick && hoveredCandlestick.time === evt.time) {\n            // rerender optimisations\n            return hoveredCandlestick;\n          }\n          return {\n            time: evt.time,\n            ...point,\n          };\n        });\n        break;\n      }\n    },\n    [setHoveredCandlestick]\n  );\n\n  useEffect(() => {\n    if (!ref.current || !priceData || !priceData.length || currentChart) {\n      return;\n    }\n\n    const chart = createChart(\n      chartRef.current,\n      getChartOptions(chartRef.current.offsetWidth, chartRef.current.offsetHeight)\n    );\n\n    chart.subscribeCrosshairMove(onCrosshairMove);\n\n    const series = chart.addCandlestickSeries(getSeriesOptions());\n\n    setCurrentChart(chart);\n    setCurrentSeries(series);\n  }, [ref, priceData, currentChart, onCrosshairMove]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updatePriceData(undefined, true);\n    }, 60 * 1000);\n    return () => clearInterval(interval);\n  }, [updatePriceData]);\n\n  useEffect(() => {\n    if (!currentChart && !chartRef?.current) {\n      return;\n    }\n    const resizeChart = () => {\n      currentChart?.resize(chartRef.current.offsetWidth, chartRef.current.offsetHeight);\n    };\n    window.addEventListener(\"resize\", resizeChart);\n    return () => window.removeEventListener(\"resize\", resizeChart);\n  }, [currentChart]);\n\n  useEffect(() => {\n    if (!currentChart && !chartRef?.current) {\n      return;\n    }\n    const resizeChart = () => {\n      currentChart?.resize(chartRef.current.offsetWidth, chartRef.current.offsetHeight);\n    };\n    let timeout = setTimeout(() => {\n      resizeChart();\n    }, 500);\n    return () => clearTimeout(timeout);\n  }, [currentChart, sidebarVisible]);\n\n  useEffect(() => {\n    if (currentSeries && priceData && priceData.length) {\n      currentSeries.setData(priceData);\n\n      if (!chartInited) {\n        scaleChart();\n        setChartInited(true);\n      }\n    }\n  }, [priceData, currentSeries, chartInited, scaleChart]);\n\n  useEffect(() => {\n    const lines = [];\n    if (currentSeries && savedShouldShowPositionLines) {\n      if (currentOrders && currentOrders.length > 0) {\n        currentOrders.forEach((order) => {\n          const indexToken = getToken(chainId, order.indexToken);\n          let tokenSymbol;\n          if (indexToken && indexToken.symbol) {\n            tokenSymbol = indexToken.isWrapped ? indexToken.baseSymbol : indexToken.symbol;\n          }\n          const title = `${order.type === INCREASE ? \"Inc.\" : \"Dec.\"} ${tokenSymbol} ${\n            order.isLong ? \"Long\" : \"Short\"\n          }`;\n          const color = \"#3a3e5e\";\n          lines.push(\n            currentSeries.createPriceLine({\n              price: parseFloat(formatAmount(order.triggerPrice, USD_DECIMALS, 2)),\n              color,\n              title: title.padEnd(PRICE_LINE_TEXT_WIDTH, \" \"),\n            })\n          );\n        });\n      }\n      if (positions && positions.length > 0) {\n        const color = \"#3a3e5e\";\n\n        positions.forEach((position) => {\n          lines.push(\n            currentSeries.createPriceLine({\n              price: parseFloat(formatAmount(position.averagePrice, USD_DECIMALS, 2)),\n              color,\n              title: `Open ${position.indexToken.symbol} ${position.isLong ? \"Long\" : \"Short\"}`.padEnd(\n                PRICE_LINE_TEXT_WIDTH,\n                \" \"\n              ),\n            })\n          );\n\n          const liquidationPrice = getLiquidationPrice(position);\n          lines.push(\n            currentSeries.createPriceLine({\n              price: parseFloat(formatAmount(liquidationPrice, USD_DECIMALS, 2)),\n              color,\n              title: `Liq. ${position.indexToken.symbol} ${position.isLong ? \"Long\" : \"Short\"}`.padEnd(\n                PRICE_LINE_TEXT_WIDTH,\n                \" \"\n              ),\n            })\n          );\n        });\n      }\n    }\n    return () => {\n      lines.forEach((line) => currentSeries.removePriceLine(line));\n    };\n  }, [currentOrders, positions, currentSeries, chainId, savedShouldShowPositionLines]);\n\n  const candleStatsHtml = useMemo(() => {\n    if (!priceData) {\n      return null;\n    }\n    const candlestick = hoveredCandlestick || priceData[priceData.length - 1];\n    if (!candlestick) {\n      return null;\n    }\n\n    const className = cx({\n      \"ExchangeChart-bottom-stats\": true,\n      positive: candlestick.open <= candlestick.close,\n      negative: candlestick.open > candlestick.close,\n      [`length-${String(parseInt(candlestick.close)).length}`]: true,\n    });\n\n    const toFixedNumbers = 2;\n\n    return (\n      <div className={className}>\n        <span className=\"ExchangeChart-bottom-stats-label\">O</span>\n        <span className=\"ExchangeChart-bottom-stats-value\">{candlestick.open.toFixed(toFixedNumbers)}</span>\n        <span className=\"ExchangeChart-bottom-stats-label\">H</span>\n        <span className=\"ExchangeChart-bottom-stats-value\">{candlestick.high.toFixed(toFixedNumbers)}</span>\n        <span className=\"ExchangeChart-bottom-stats-label\">L</span>\n        <span className=\"ExchangeChart-bottom-stats-value\">{candlestick.low.toFixed(toFixedNumbers)}</span>\n        <span className=\"ExchangeChart-bottom-stats-label\">C</span>\n        <span className=\"ExchangeChart-bottom-stats-value\">{candlestick.close.toFixed(toFixedNumbers)}</span>\n      </div>\n    );\n  }, [hoveredCandlestick, priceData]);\n\n  if (!chartToken) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"LightweightChart-container\" ref={ref}>\n        <div className=\"LightweightChart\" ref={chartRef}></div>\n        <div className=\"CandleStats\">{candleStatsHtml}</div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}