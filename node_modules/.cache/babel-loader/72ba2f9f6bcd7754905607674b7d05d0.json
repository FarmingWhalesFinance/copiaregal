{"ast":null,"code":"/**\n * Returns an object containing only the properties prefixed by the input\n * string.\n * Ex: prefix('ajs_traits_', { ajs_traits_address: '123 St' })\n * will return { address: '123 St' }\n **/\nexport function pickPrefix(prefix, object) {\n  return Object.keys(object).reduce(function (acc, key) {\n    if (key.startsWith(prefix)) {\n      var field = key.substr(prefix.length);\n      acc[field] = object[key];\n    }\n\n    return acc;\n  }, {});\n}","map":{"version":3,"sources":["../../../../src/core/query-string/pickPrefix.ts"],"names":[],"mappings":"AAEA;;;;;AAKI;AACJ,OAAM,SAAU,UAAV,CACJ,MADI,EAEJ,MAFI,EAEqB;EAEzB,OAAO,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,MAApB,CAA2B,UAAC,GAAD,EAAyB,GAAzB,EAAoC;IACpE,IAAI,GAAG,CAAC,UAAJ,CAAe,MAAf,CAAJ,EAA4B;MAC1B,IAAM,KAAK,GAAG,GAAG,CAAC,MAAJ,CAAW,MAAM,CAAC,MAAlB,CAAd;MACA,GAAG,CAAC,KAAD,CAAH,GAAa,MAAM,CAAC,GAAD,CAAnB;IACD;;IACD,OAAO,GAAP;EACD,CANM,EAMJ,EANI,CAAP;AAOD","sourceRoot":"","sourcesContent":["/**\n * Returns an object containing only the properties prefixed by the input\n * string.\n * Ex: prefix('ajs_traits_', { ajs_traits_address: '123 St' })\n * will return { address: '123 St' }\n **/\nexport function pickPrefix(prefix, object) {\n    return Object.keys(object).reduce(function (acc, key) {\n        if (key.startsWith(prefix)) {\n            var field = key.substr(prefix.length);\n            acc[field] = object[key];\n        }\n        return acc;\n    }, {});\n}\n//# sourceMappingURL=pickPrefix.js.map"]},"metadata":{},"sourceType":"module"}