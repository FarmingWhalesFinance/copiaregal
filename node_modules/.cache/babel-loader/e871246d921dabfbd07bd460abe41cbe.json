{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\copiaswaps-client\\\\swaps-client\\\\src\\\\Api\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$(),\n    _s19 = $RefreshSig$(),\n    _s20 = $RefreshSig$();\n\nimport { ethers } from \"ethers\";\nimport { gql } from \"@apollo/client\";\nimport { useState, useEffect, useMemo, useCallback, useRef } from \"react\";\nimport { Token as UniToken } from \"@uniswap/sdk-core\";\nimport { Pool } from \"@uniswap/v3-sdk\";\nimport useSWR from \"swr\";\nimport OrderBook from \"../abis/OrderBook.json\";\nimport PositionManager from \"../abis/PositionManager.json\";\nimport Vault from \"../abis/Vault.json\";\nimport Router from \"../abis/Router.json\";\nimport LentMyc from \"../abis/LentMyc.json\";\nimport UniPool from \"../abis/UniPool.json\";\nimport Token from \"../abis/Token.json\";\nimport { getContract } from \"../Addresses\";\nimport { getConstant } from \"../Constants\";\nimport { ARBITRUM, ETHEREUM, bigNumberify, getExplorerUrl, setGasPrice, getGasLimit, replaceNativeTokenAddress, getProvider, getOrderKey, fetcher, parseValue, expandDecimals, helperToast, USD_DECIMALS, ETH_DECIMALS, FORTNIGHTS_IN_YEAR, ARBITRUM_GOERLI } from \"../Helpers\";\nimport { getTokenBySymbol } from \"../data/Tokens\";\nimport { nissohGraphClient, arbitrumGraphClient, arbitrumTestnetGraphClient } from \"./common\";\nimport { getServerUrl, getSupplyUrl } from \"src/lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport * from \"./prices\";\nconst {\n  AddressZero\n} = ethers.constants;\n\nfunction getMycGraphClient(chainId) {\n  if (chainId === ARBITRUM) {\n    return arbitrumGraphClient;\n  } else if (chainId === ARBITRUM_GOERLI) {\n    return arbitrumTestnetGraphClient;\n  }\n\n  throw new Error(`Unsupported chain ${chainId}`);\n}\n\nexport function useFees(chainId) {\n  _s();\n\n  const query = gql(`{\n    feeStat(id: \"total\") {\n      swap\n      marginAndLiquidation\n      mint\n      burn\n    }\n  }`);\n  const [res, setRes] = useState();\n  useEffect(() => {\n    getMycGraphClient(chainId).query({\n      query\n    }).then(setRes).catch(console.warn);\n  }, [setRes, query, chainId]);\n  return res ? res.data.feeStat : null;\n}\n\n_s(useFees, \"JJci1Hj1tN9f1u6mHvabLTu/A5Y=\");\n\nexport function useFeesSince(chainId, from, to) {\n  _s2();\n\n  const [res, setRes] = useState();\n  const query = gql(`{\n    feeStats(where: { id_gte: ${from}, id_lt: ${to}, period: daily }) {\n      id\n      marginAndLiquidation\n      swap\n      mint\n      burn\n    },\n  }`);\n  useEffect(() => {\n    if (!from) {\n      return;\n    }\n\n    getMycGraphClient(chainId).query({\n      query\n    }).then(res => {\n      if (res.data.feeStats) {\n        let fees = res.data.feeStats.reduce((sum, stat) => sum.add(stat.mint).add(stat.burn).add(stat.swap).add(stat.marginAndLiquidation), bigNumberify(0));\n        setRes(fees);\n      }\n    }).catch(console.warn);\n  }, [setRes, query, chainId, from]);\n  return res;\n}\n\n_s2(useFeesSince, \"JJci1Hj1tN9f1u6mHvabLTu/A5Y=\");\n\nconst FEE_MULTIPLIER_BASIS_POINTS = 4;\nconst MM_FEE_MULTIPLIER = bigNumberify(6);\nconst MM_SWAPS_FEE_MULTIPLIER = bigNumberify(12);\nexport function useSpreadCaptureVolume(chainId) {\n  _s3();\n\n  // spread capture turned off\n  const to = 1665792441;\n  const query = gql(`{\n    volumeStats(first: 1000, period: daily, orderBy: id, orderDirection: desc, where: { id_lt: ${to} }) {\n      margin\n      liquidation\n      swap\n      mint\n      burn\n    }\n  }`);\n  const [res, setRes] = useState(undefined);\n  useEffect(() => {\n    getMycGraphClient(chainId).query({\n      query\n    }).then(res => {\n      const totalMMFees = res.data.volumeStats.reduce((sum, stat) => sum.add(MM_FEE_MULTIPLIER.mul(stat.mint)).add(MM_FEE_MULTIPLIER.mul(stat.burn)).add(MM_FEE_MULTIPLIER.mul(stat.margin)).add(MM_FEE_MULTIPLIER.mul(stat.liquidation)).add(MM_SWAPS_FEE_MULTIPLIER.mul(stat.swap)), bigNumberify(0));\n      setRes(totalMMFees.div(expandDecimals(1, FEE_MULTIPLIER_BASIS_POINTS)));\n    }).catch(console.warn);\n  }, [setRes, query, chainId]);\n  return res;\n}\n\n_s3(useSpreadCaptureVolume, \"pXvfa0H3RH8pqMb5m6EUNQVS//c=\");\n\nexport function useVolume(chainId) {\n  _s4();\n\n  const query = gql(`{\n    volumeStat(id: \"total\") {\n      margin\n      liquidation\n      swap\n      mint\n      burn\n    }\n  }`);\n  const [res, setRes] = useState();\n  useEffect(() => {\n    getMycGraphClient(chainId).query({\n      query\n    }).then(setRes).catch(console.warn);\n  }, [setRes, query, chainId]);\n  return res ? res.data.volumeStat : null;\n}\n\n_s4(useVolume, \"JJci1Hj1tN9f1u6mHvabLTu/A5Y=\");\n\nexport function useAllOrdersStats(chainId) {\n  _s5();\n\n  const query = gql(`{\n    orderStat(id: \"total\") {\n      openSwap\n      openIncrease\n      openDecrease\n      executedSwap\n      executedIncrease\n      executedDecrease\n      cancelledSwap\n      cancelledIncrease\n      cancelledDecrease\n    }\n  }`);\n  const [res, setRes] = useState();\n  useEffect(() => {\n    getMycGraphClient(chainId).query({\n      query\n    }).then(setRes).catch(console.warn);\n  }, [setRes, query, chainId]);\n  return res ? res.data.orderStat : null;\n}\n\n_s5(useAllOrdersStats, \"JJci1Hj1tN9f1u6mHvabLTu/A5Y=\");\n\nexport function useUserStat(chainId) {\n  _s6();\n\n  const query = gql(`{\n    userStat(id: \"total\") {\n      id\n      uniqueCount\n    }\n  }`);\n  const [res, setRes] = useState();\n  useEffect(() => {\n    getMycGraphClient(chainId).query({\n      query\n    }).then(setRes).catch(console.warn);\n  }, [setRes, query, chainId]);\n  return res ? res.data.userStat : null;\n}\n\n_s6(useUserStat, \"JJci1Hj1tN9f1u6mHvabLTu/A5Y=\");\n\nexport function useLiquidationsData(chainId, account) {\n  _s7();\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    if (account) {\n      const query = gql(`{\n         liquidatedPositions(\n           where: {account: \"${account.toLowerCase()}\"}\n           first: 100\n           orderBy: timestamp\n           orderDirection: desc\n         ) {\n           key\n           timestamp\n           borrowFee\n           loss\n           collateral\n           size\n           markPrice\n           type\n         }\n      }`);\n      const graphClient = getMycGraphClient(chainId);\n      graphClient.query({\n        query\n      }).then(res => {\n        const _data = res.data.liquidatedPositions.map(item => {\n          return { ...item,\n            size: bigNumberify(item.size),\n            collateral: bigNumberify(item.collateral),\n            markPrice: bigNumberify(item.markPrice)\n          };\n        });\n\n        setData(_data);\n      }).catch(console.warn);\n    }\n  }, [setData, chainId, account]);\n  return data;\n}\n\n_s7(useLiquidationsData, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\nexport function useAllPositions(chainId, library) {\n  _s8();\n\n  const count = 1000;\n  const query = gql(`{\n    aggregatedTradeOpens(\n      first: ${count}\n    ) {\n      account\n      initialPosition{\n        indexToken\n        collateralToken\n        isLong\n        sizeDelta\n      }\n      increaseList {\n        sizeDelta\n      }\n      decreaseList {\n        sizeDelta\n      }\n    }\n  }`);\n  const [res, setRes] = useState();\n  useEffect(() => {\n    nissohGraphClient.query({\n      query\n    }).then(setRes).catch(console.warn);\n  }, [setRes, query]);\n  const key = res ? `allPositions${count}__` : false;\n  const {\n    data: positions = []\n  } = useSWR(key, async () => {\n    const provider = getProvider(library, chainId);\n    const vaultAddress = getContract(chainId, \"Vault\");\n    const contract = new ethers.Contract(vaultAddress, Vault.abi, provider);\n    const ret = await Promise.all(res.data.aggregatedTradeOpens.map(async dataItem => {\n      try {\n        const {\n          indexToken,\n          collateralToken,\n          isLong\n        } = dataItem.initialPosition;\n        const positionData = await contract.getPosition(dataItem.account, collateralToken, indexToken, isLong);\n        const position = {\n          size: bigNumberify(positionData[0]),\n          collateral: bigNumberify(positionData[1]),\n          entryFundingRate: bigNumberify(positionData[3]),\n          account: dataItem.account\n        };\n        position.fundingFee = await contract.getFundingFee(collateralToken, position.size, position.entryFundingRate);\n        position.marginFee = position.size.div(1000);\n        position.fee = position.fundingFee.add(position.marginFee);\n        const THRESHOLD = 5000;\n        const collateralDiffPercent = position.fee.mul(10000).div(position.collateral);\n        position.danger = collateralDiffPercent.gt(THRESHOLD);\n        return position;\n      } catch (ex) {\n        console.error(ex);\n      }\n    }));\n    return ret.filter(Boolean);\n  });\n  return positions;\n}\n\n_s8(useAllPositions, \"TMnasbTtydOsaVegwP6ChCugVkU=\", false, function () {\n  return [useSWR];\n});\n\nexport function useAllOrders(chainId, library) {\n  _s9();\n\n  const query = gql(`{\n    orders(\n      first: 1000,\n      orderBy: createdTimestamp,\n      orderDirection: desc,\n      where: {status: \"open\"}\n    ) {\n      type\n      account\n      index\n      status\n      createdTimestamp\n    }\n  }`);\n  const [res, setRes] = useState();\n  useEffect(() => {\n    getMycGraphClient(chainId).query({\n      query\n    }).then(setRes);\n  }, [setRes, query, chainId]);\n  const key = res ? res.data.orders.map(order => `${order.type}-${order.account}-${order.index}`) : null;\n  const {\n    data: orders = []\n  } = useSWR(key, () => {\n    const provider = getProvider(library, chainId);\n    const orderBookAddress = getContract(chainId, \"OrderBook\");\n    const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, provider);\n    return Promise.all(res.data.orders.map(async order => {\n      try {\n        const type = order.type.charAt(0).toUpperCase() + order.type.substring(1);\n        const method = `get${type}Order`;\n        const orderFromChain = await contract[method](order.account, order.index);\n        const ret = {};\n\n        for (const [key, val] of Object.entries(orderFromChain)) {\n          ret[key] = val;\n        }\n\n        if (order.type === \"swap\") {\n          ret.path = [ret.path0, ret.path1, ret.path2].filter(address => address !== AddressZero);\n        }\n\n        ret.type = type;\n        ret.index = order.index;\n        ret.account = order.account;\n        ret.createdTimestamp = order.createdTimestamp;\n        return ret;\n      } catch (ex) {\n        console.error(ex);\n      }\n    }));\n  });\n  return orders.filter(Boolean);\n}\n\n_s9(useAllOrders, \"4zoUyPtB2nF/Vfjn7lqZCwgO1AQ=\", false, function () {\n  return [useSWR];\n});\n\nexport function usePositionsForOrders(chainId, library, orders) {\n  _s10();\n\n  const key = orders ? orders.map(order => getOrderKey(order) + \"____\") : null;\n  const {\n    data: positions = {}\n  } = useSWR(key, async () => {\n    const provider = getProvider(library, chainId);\n    const vaultAddress = getContract(chainId, \"Vault\");\n    const contract = new ethers.Contract(vaultAddress, Vault.abi, provider);\n    const data = await Promise.all(orders.map(async order => {\n      try {\n        const position = await contract.getPosition(order.account, order.collateralToken, order.indexToken, order.isLong);\n\n        if (position[0].eq(0)) {\n          return [null, order];\n        }\n\n        return [position, order];\n      } catch (ex) {\n        console.error(ex);\n      }\n    }));\n    return data.reduce((memo, _ref) => {\n      let [position, order] = _ref;\n      memo[getOrderKey(order)] = position;\n      return memo;\n    }, {});\n  });\n  return positions;\n}\n\n_s10(usePositionsForOrders, \"PoSQOMUiHHAPHjkkd74J+B+mx4s=\", false, function () {\n  return [useSWR];\n});\n\nfunction invariant(condition, errorMsg) {\n  if (!condition) {\n    throw new Error(errorMsg);\n  }\n}\n\nexport function useTrades(chainId, account) {\n  _s11();\n\n  let url = getServerUrl(chainId, \"/actions\");\n\n  if (account && account.length) {\n    url += `&account=${account}`;\n  }\n\n  const {\n    data,\n    mutate: updateTrades\n  } = useSWR(url, {\n    dedupingInterval: 30000,\n    fetcher: function () {\n      return fetch(...arguments).then(res => res.json());\n    }\n  }); // Convert the response to match expected format\n\n  let trades = [];\n\n  if (Array.isArray(data)) {\n    trades = data.map(datum => {\n      if (datum.dataValues) {\n        return {\n          id: datum.dataValues.id.toString(),\n          data: { ...datum.dataValues,\n            params: JSON.stringify(datum.dataValues.params)\n          }\n        };\n      } else {\n        return {\n          id: datum.id,\n          data: { ...datum,\n            params: JSON.stringify(datum.params)\n          }\n        };\n      }\n    });\n  }\n\n  if (trades) {\n    trades.sort((item0, item1) => {\n      const data0 = item0.data;\n      const data1 = item1.data;\n      const time0 = parseInt(data0.timestamp);\n      const time1 = parseInt(data1.timestamp);\n\n      if (time1 > time0) {\n        return 1;\n      }\n\n      if (time1 < time0) {\n        return -1;\n      }\n\n      const block0 = parseInt(data0.blockNumber);\n      const block1 = parseInt(data1.blockNumber);\n\n      if (isNaN(block0) && isNaN(block1)) {\n        return 0;\n      }\n\n      if (isNaN(block0)) {\n        return 1;\n      }\n\n      if (isNaN(block1)) {\n        return -1;\n      }\n\n      if (block1 > block0) {\n        return 1;\n      }\n\n      if (block1 < block0) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n\n  return {\n    trades,\n    updateTrades\n  };\n}\n\n_s11(useTrades, \"RoT2xWJitVNYQ0WF2tm/OUDZjuo=\", false, function () {\n  return [useSWR];\n});\n\nexport function useHasOutdatedUi() {\n  return {\n    data: false\n  };\n}\nexport function useMYCPrice(chainId, libraries, active) {\n  _s12();\n\n  const arbitrumLibrary = libraries && libraries.arbitrum ? libraries.arbitrum : undefined;\n  const {\n    data: mycPriceFromArbitrum,\n    mutate: mutateFromArbitrum\n  } = useMYCPriceFromArbitrum(arbitrumLibrary, active);\n  const {\n    data: mycPriceFromMainnet,\n    mutate: mutateFromMainnet\n  } = useMYCPriceFromMainnet(active);\n  const mycPrice = chainId === ARBITRUM ? mycPriceFromArbitrum : mycPriceFromMainnet;\n  const mutate = useCallback(() => {\n    mutateFromMainnet();\n    mutateFromArbitrum();\n  }, [mutateFromMainnet, mutateFromArbitrum]);\n  return {\n    mycPrice,\n    mycPriceFromArbitrum,\n    mycPriceFromMainnet,\n    mutate\n  };\n}\n\n_s12(useMYCPrice, \"H9FD7ZXg/gxhDkMnQYG2EfLUvCE=\", false, function () {\n  return [useMYCPriceFromArbitrum, useMYCPriceFromMainnet];\n});\n\nexport function useTotalMYCSupply() {\n  _s13();\n\n  const {\n    data: mycSupply,\n    mutate: updateMYCSupply\n  } = useSWR([getSupplyUrl(\"/totalSupply\")], {\n    fetcher: function () {\n      return fetch(...arguments).then(res => res.text());\n    }\n  });\n  const {\n    data: circulatingMycSupply,\n    mutate: updateMYCCirculatingSupply\n  } = useSWR([getSupplyUrl(\"/circulatingSupply\")], {\n    fetcher: function () {\n      return fetch(...arguments).then(res => res.text());\n    }\n  });\n  const mutate = useCallback(() => {\n    updateMYCSupply();\n    updateMYCCirculatingSupply();\n  }, [updateMYCSupply, updateMYCCirculatingSupply]);\n  return {\n    total: mycSupply ? bigNumberify(ethers.utils.parseUnits(mycSupply, 18)) : undefined,\n    circulating: circulatingMycSupply ? bigNumberify(ethers.utils.parseUnits(circulatingMycSupply, 18)) : undefined,\n    mutate\n  };\n}\n\n_s13(useTotalMYCSupply, \"ib5Nc42LtmHbtPq7aw4w5LRJdIo=\", false, function () {\n  return [useSWR, useSWR];\n});\n\nexport function useTotalMYCInLiquidity() {\n  _s14();\n\n  let poolAddressArbitrum = {\n    uniswap: getContract(ARBITRUM, \"UniswapMycEthPool\"),\n    uniswapMycTcr: getContract(ARBITRUM, \"UniswapMycTcrPool\"),\n    balancer: getContract(ARBITRUM, \"BalancerVault\")\n  };\n  let poolAddressMainnet = {\n    uniswap: getContract(ETHEREUM, \"UniswapMycEthPool\"),\n    balancer: getContract(ETHEREUM, \"BalancerVault\") // uniswap: getContract(ETHEREUM, \"UniswapTcrEthPool\"),\n    // sushiswap: getContract(ETHEREUM, \"SushiswapTcrEthPool\"),\n\n  };\n  let totalMYCArbitrum = useRef(bigNumberify(0));\n  let totalMYCMainnet = useRef(bigNumberify(0));\n  const {\n    data: mycInUniswapLiquidityOnArbitrum,\n    mutate: mutateMYCInUniswapLiquidityOnArbitrum\n  } = useSWR([`StakeV2:mycInLiquidity:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"MYC\"), \"balanceOf\", poolAddressArbitrum.uniswap], {\n    fetcher: fetcher(undefined, Token)\n  }); // TODO this pool will slowly get phased out\n\n  const {\n    data: mycTcrInUniswapLiquidityOnArbitrum,\n    mutate: mutateMYCTCRInUniswapLiquidityOnArbitrum\n  } = useSWR([`StakeV2:mycTcrInLiquidity:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"MYC\"), \"balanceOf\", poolAddressArbitrum.uniswapMycTcr], {\n    fetcher: fetcher(undefined, Token)\n  });\n  const {\n    data: mycInBalancerLiquidityOnArbitrum,\n    mutate: mutateMYCInBalancerLiquidityOnArbitrum\n  } = useSWR([`StakeV2:mycBalancerLiquidity:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"MYC\"), \"balanceOf\", poolAddressArbitrum.balancer], {\n    fetcher: fetcher(undefined, Token)\n  }); // const { data: tcrInUniswapLiquidityOnArbitrum, mutate: mutateTCRInUniswapLiquidityOnArbitrum } = useSWR(\n  // [\n  // `StakeV2:tcrInLiquidity:${ARBITRUM}`,\n  // ARBITRUM,\n  // getContract(ARBITRUM, \"TCR\"),\n  // \"balanceOf\",\n  // poolAddressArbitrum.uniswapTcr,\n  // ],\n  // {\n  // fetcher: fetcher(undefined, Token),\n  // }\n  // );\n  // const { data: tcrInBalancerLiquidityOnArbitrum, mutate: mutateTCRInBalancerLiquidityOnArbitrum } = useSWR(\n  // [\n  // `StakeV2:mycBalancerLiquidity:${ARBITRUM}`,\n  // ARBITRUM,\n  // getContract(ARBITRUM, \"TCR\"),\n  // \"balanceOf\",\n  // poolAddressArbitrum.balancer,\n  // ],\n  // {\n  // fetcher: fetcher(undefined, Token),\n  // }\n  // );\n\n  const {\n    data: mycInUniswapLiquidityOnMainnet,\n    mutate: mutateMYCInUniswapLiquidityOnMainnet\n  } = useSWR([`StakeV2:mycInUniswapLiquidity:${ETHEREUM}`, ETHEREUM, getContract(ETHEREUM, \"MYC\"), \"balanceOf\", poolAddressMainnet.uniswap], {\n    fetcher: fetcher(undefined, Token)\n  });\n  const {\n    data: mycInBalancerLiquidityOnMainnet,\n    mutate: mutateMYCInBalancerLiquidityOnMainnet\n  } = useSWR([`StakeV2:mycBalancerLiquidity:${ETHEREUM}`, ETHEREUM, getContract(ETHEREUM, \"MYC\"), \"balanceOf\", poolAddressMainnet.balancer], {\n    fetcher: fetcher(undefined, Token)\n  }); // const { data: tcrInSushiswapLiquidityOnMainnet, mutate: mutateTCRInSushiSwapLiquidityOnMainnet } = useSWR(\n  // [\n  // `StakeV2:tcrInSushiswapLiquidity:${ETHEREUM}`,\n  // ETHEREUM,\n  // getContract(ETHEREUM, \"TCR\"),\n  // \"balanceOf\",\n  // poolAddressMainnet.sushiswap,\n  // ],\n  // {\n  // fetcher: fetcher(undefined, Token),\n  // }\n  // );\n\n  const mutate = useCallback(() => {\n    mutateMYCInUniswapLiquidityOnArbitrum();\n    mutateMYCInBalancerLiquidityOnArbitrum();\n    mutateMYCTCRInUniswapLiquidityOnArbitrum(); // mutateTCRInUniswapLiquidityOnArbitrum();\n    // mutateTCRInBalancerLiquidityOnArbitrum();\n\n    mutateMYCInUniswapLiquidityOnMainnet(); // mutateTCRInSushiSwapLiquidityOnMainnet();\n\n    mutateMYCInBalancerLiquidityOnMainnet();\n  }, [mutateMYCInUniswapLiquidityOnArbitrum, mutateMYCInBalancerLiquidityOnArbitrum, mutateMYCTCRInUniswapLiquidityOnArbitrum, // mutateTCRInUniswapLiquidityOnArbitrum,\n  // mutateTCRInBalancerLiquidityOnArbitrum,\n  mutateMYCInUniswapLiquidityOnMainnet, // mutateTCRInSushiSwapLiquidityOnMainnet,\n  mutateMYCInBalancerLiquidityOnMainnet]);\n\n  if (mycInUniswapLiquidityOnMainnet && mycInBalancerLiquidityOnMainnet && mycTcrInUniswapLiquidityOnArbitrum) {\n    let total = bigNumberify(mycInUniswapLiquidityOnMainnet).add(mycInBalancerLiquidityOnMainnet).add(mycTcrInUniswapLiquidityOnArbitrum);\n    totalMYCMainnet.current = total;\n  }\n\n  if (mycInUniswapLiquidityOnArbitrum && mycInBalancerLiquidityOnArbitrum) {\n    let total = bigNumberify(mycInUniswapLiquidityOnArbitrum).add(mycInBalancerLiquidityOnArbitrum);\n    totalMYCArbitrum.current = total;\n  }\n\n  return {\n    mainnet: totalMYCMainnet.current,\n    arbitrum: totalMYCArbitrum.current,\n    total: totalMYCArbitrum.current.add(totalMYCMainnet.current),\n    mutate\n  };\n}\n\n_s14(useTotalMYCInLiquidity, \"bHXA1mbURUBWQTHinSkjj50lvRY=\", false, function () {\n  return [useSWR, useSWR, useSWR, useSWR, useSWR];\n});\n\nfunction useMYCPriceFromMainnet(active) {\n  _s15();\n\n  const poolAddress = getContract(ETHEREUM, \"UniswapMycEthPool\");\n  const {\n    data: mycEthUniPoolSlot0,\n    mutate: updateTcrEthUniPoolSlot0\n  } = useSWR([`StakeV2:mainnetUniPoolSlot0:${active}`, ETHEREUM, poolAddress, \"slot0\"], {\n    fetcher: fetcher(undefined, UniPool)\n  });\n  const ethPoolAddress = getContract(ETHEREUM, \"UniswapEthUsdcPool\");\n  const {\n    data: ethUsdcUniPoolSlot0,\n    mutate: updateEthUsdcUniPoolSlot0\n  } = useSWR([`StakeV2:mainnetEthPrice:${active}`, ETHEREUM, ethPoolAddress, \"slot0\"], {\n    fetcher: fetcher(undefined, UniPool)\n  });\n  const mycPrice = useMemo(() => {\n    if (mycEthUniPoolSlot0 && ethUsdcUniPoolSlot0) {\n      const ethAddress = getContract(ETHEREUM, \"WETH\");\n      const ETH = new UniToken(ETHEREUM, ethAddress, 18, \"SYMBOL\", \"NAME\");\n      const usdcAddress = getContract(ETHEREUM, \"USDC\");\n      const USDC = new UniToken(ETHEREUM, usdcAddress, 18, \"SYMBOL\", \"NAME\");\n      const ethUsdcPool = new Pool(ETH, USDC, 0, ethUsdcUniPoolSlot0.sqrtPriceX96, 1, ethUsdcUniPoolSlot0.tick);\n      const mycAddress = getContract(ETHEREUM, \"TCR\");\n      const MYC = new UniToken(ETHEREUM, mycAddress, 18, \"SYMBOL\", \"NAME\");\n      const mycEthPool = new Pool(ETH, // tokenA\n      MYC, // tokenB\n      10000, // fee\n      mycEthUniPoolSlot0.sqrtPriceX96, // sqrtRatioX96\n      1, // liquidity\n      mycEthUniPoolSlot0.tick, // tickCurrent\n      []);\n      const ethPrice = ethUsdcPool.priceOf(ETH).toSignificant(6); // USDC is 6 decimals need to parse into 18 + 6 decimal places\n\n      const ethPriceAmount = parseValue(ethPrice, 24);\n      const poolTokenPrice = mycEthPool.priceOf(MYC).toSignificant(6);\n      const poolTokenPriceAmount = parseValue(poolTokenPrice, 18); // here everything is in 10 ** 24 precision\n\n      return poolTokenPriceAmount.mul(ethPriceAmount);\n    }\n  }, [ethUsdcUniPoolSlot0, mycEthUniPoolSlot0]);\n  const mutate = useCallback(() => {\n    updateTcrEthUniPoolSlot0(undefined, true);\n    updateEthUsdcUniPoolSlot0(undefined, true);\n  }, [updateEthUsdcUniPoolSlot0, updateTcrEthUniPoolSlot0]);\n  return {\n    data: mycPrice,\n    mutate\n  };\n}\n\n_s15(useMYCPriceFromMainnet, \"96pLn0y7sh8ZWdstUIj/bKfPSaE=\", false, function () {\n  return [useSWR, useSWR];\n});\n\nfunction useMYCPriceFromArbitrum(library, active) {\n  _s16();\n\n  // liquidity is too low for uniswap on arbitrum can use tcr for now\n  const poolAddress = getContract(ARBITRUM, \"UniswapTcrEthPool\"); // const poolAddress = getContract(ARBITRUM, \"UniswapMycEthPool\");\n\n  const {\n    data: uniPoolSlot0,\n    mutate: updateUniPoolSlot0\n  } = useSWR([`StakeV2:uniPoolSlot0:${active}`, ARBITRUM, poolAddress, \"slot0\"], {\n    fetcher: fetcher(library, UniPool)\n  });\n  const vaultAddress = getContract(ARBITRUM, \"Vault\");\n  const ethAddress = getTokenBySymbol(ARBITRUM, \"WETH\").address;\n  const {\n    data: ethPrice,\n    mutate: updateEthPrice\n  } = useSWR([`StakeV2:ethPrice:${active}`, ARBITRUM, vaultAddress, \"getMinPrice\", ethAddress], {\n    fetcher: fetcher(library, Vault)\n  });\n  const mycPrice = useMemo(() => {\n    if (uniPoolSlot0 && ethPrice) {\n      const tokenA = new UniToken(ARBITRUM, ethAddress, 18, \"SYMBOL\", \"NAME\");\n      const mycAddress = getContract(ARBITRUM, \"MYC\");\n      const tokenB = new UniToken(ARBITRUM, mycAddress, 18, \"SYMBOL\", \"NAME\");\n      const pool = new Pool(tokenA, // tokenA\n      tokenB, // tokenB\n      10000, // fee\n      uniPoolSlot0.sqrtPriceX96, // sqrtRatioX96\n      1, // liquidity\n      uniPoolSlot0.tick, // tickCurrent\n      []);\n      const poolTokenPrice = pool.priceOf(tokenB).toSignificant(6);\n      const poolTokenPriceAmount = parseValue(poolTokenPrice, 18);\n      return poolTokenPriceAmount.mul(ethPrice).div(expandDecimals(1, 18));\n    }\n  }, [ethPrice, uniPoolSlot0, ethAddress]);\n  const mutate = useCallback(() => {\n    updateUniPoolSlot0(undefined, true);\n    updateEthPrice(undefined, true);\n  }, [updateEthPrice, updateUniPoolSlot0]);\n  return {\n    data: mycPrice,\n    mutate\n  };\n}\n\n_s16(useMYCPriceFromArbitrum, \"3GAsolWmG7shWwg+ZJpQRjwVd9g=\", false, function () {\n  return [useSWR, useSWR];\n});\n\nexport async function approvePlugin(chainId, pluginAddress, _ref2) {\n  let {\n    library,\n    pendingTxns,\n    setPendingTxns,\n    sentMsg,\n    failMsg\n  } = _ref2;\n  const routerAddress = getContract(chainId, \"Router\");\n  const contract = new ethers.Contract(routerAddress, Router.abi, library.getSigner());\n  return callContract(chainId, contract, \"approvePlugin\", [pluginAddress], {\n    sentMsg,\n    failMsg,\n    pendingTxns,\n    setPendingTxns\n  });\n}\nexport async function createSwapOrder(chainId, library, path, amountIn, minOut, triggerRatio, nativeTokenAddress) {\n  let opts = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : {};\n  const executionFee = getConstant(chainId, \"SWAP_ORDER_EXECUTION_GAS_FEE\");\n  const triggerAboveThreshold = false;\n  let shouldWrap = false;\n  let shouldUnwrap = false;\n  opts.value = executionFee;\n\n  if (path[0] === AddressZero) {\n    shouldWrap = true;\n    opts.value = opts.value.add(amountIn);\n  }\n\n  if (path[path.length - 1] === AddressZero) {\n    shouldUnwrap = true;\n  }\n\n  path = replaceNativeTokenAddress(path, nativeTokenAddress);\n  const params = [path, amountIn, minOut, triggerRatio, triggerAboveThreshold, executionFee, shouldWrap, shouldUnwrap];\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n  return callContract(chainId, contract, \"createSwapOrder\", params, opts);\n}\nexport async function createIncreaseOrder(chainId, library, nativeTokenAddress, path, amountIn, indexTokenAddress, minOut, sizeDelta, collateralTokenAddress, isLong, triggerPrice) {\n  let opts = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : {};\n  invariant(!isLong || indexTokenAddress === collateralTokenAddress, \"invalid token addresses\");\n  invariant(indexTokenAddress !== AddressZero, \"indexToken is 0\");\n  invariant(collateralTokenAddress !== AddressZero, \"collateralToken is 0\");\n  const fromETH = path[0] === AddressZero;\n  path = replaceNativeTokenAddress(path, nativeTokenAddress);\n  const shouldWrap = fromETH;\n  const triggerAboveThreshold = !isLong;\n  const executionFee = getConstant(chainId, \"INCREASE_ORDER_EXECUTION_GAS_FEE\");\n  const params = [path, amountIn, indexTokenAddress, minOut, sizeDelta, collateralTokenAddress, isLong, triggerPrice, triggerAboveThreshold, executionFee, shouldWrap];\n\n  if (!opts.value) {\n    opts.value = fromETH ? amountIn.add(executionFee) : executionFee;\n  }\n\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n  return callContract(chainId, contract, \"createIncreaseOrder\", params, opts);\n}\nexport async function createDecreaseOrder(chainId, library, indexTokenAddress, sizeDelta, collateralTokenAddress, collateralDelta, isLong, triggerPrice, triggerAboveThreshold) {\n  let opts = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : {};\n  invariant(!isLong || indexTokenAddress === collateralTokenAddress, \"invalid token addresses\");\n  invariant(indexTokenAddress !== AddressZero, \"indexToken is 0\");\n  invariant(collateralTokenAddress !== AddressZero, \"collateralToken is 0\");\n  const executionFee = getConstant(chainId, \"DECREASE_ORDER_EXECUTION_GAS_FEE\");\n  const params = [indexTokenAddress, sizeDelta, collateralTokenAddress, collateralDelta, isLong, triggerPrice, triggerAboveThreshold];\n  opts.value = executionFee;\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n  return callContract(chainId, contract, \"createDecreaseOrder\", params, opts);\n}\nexport async function cancelSwapOrder(chainId, library, index, opts) {\n  const params = [index];\n  const method = \"cancelSwapOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n  return callContract(chainId, contract, method, params, opts);\n}\nexport async function cancelDecreaseOrder(chainId, library, index, opts) {\n  const params = [index];\n  const method = \"cancelDecreaseOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n  return callContract(chainId, contract, method, params, opts);\n}\nexport async function cancelIncreaseOrder(chainId, library, index, opts) {\n  const params = [index];\n  const method = \"cancelIncreaseOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n  return callContract(chainId, contract, method, params, opts);\n}\nexport async function updateDecreaseOrder(chainId, library, index, collateralDelta, sizeDelta, triggerPrice, triggerAboveThreshold, opts) {\n  const params = [index, collateralDelta, sizeDelta, triggerPrice, triggerAboveThreshold];\n  const method = \"updateDecreaseOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n  return callContract(chainId, contract, method, params, opts);\n}\nexport async function updateIncreaseOrder(chainId, library, index, sizeDelta, triggerPrice, triggerAboveThreshold, opts) {\n  const params = [index, sizeDelta, triggerPrice, triggerAboveThreshold];\n  const method = \"updateIncreaseOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n  return callContract(chainId, contract, method, params, opts);\n}\nexport async function updateSwapOrder(chainId, library, index, minOut, triggerRatio, triggerAboveThreshold, opts) {\n  const params = [index, minOut, triggerRatio, triggerAboveThreshold];\n  const method = \"updateSwapOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n  return callContract(chainId, contract, method, params, opts);\n}\nexport async function _executeOrder(chainId, library, method, account, index, feeReceiver, opts) {\n  const params = [account, index, feeReceiver];\n  const positionManagerAddress = getContract(chainId, \"PositionManager\");\n  const contract = new ethers.Contract(positionManagerAddress, PositionManager.abi, library.getSigner());\n  return callContract(chainId, contract, method, params, opts);\n}\nexport function executeSwapOrder(chainId, library, account, index, feeReceiver, opts) {\n  return _executeOrder(chainId, library, \"executeSwapOrder\", account, index, feeReceiver, opts);\n}\nexport function executeIncreaseOrder(chainId, library, account, index, feeReceiver, opts) {\n  return _executeOrder(chainId, library, \"executeIncreaseOrder\", account, index, feeReceiver, opts);\n}\nexport function executeDecreaseOrder(chainId, library, account, index, feeReceiver, opts) {\n  return _executeOrder(chainId, library, \"executeDecreaseOrder\", account, index, feeReceiver, opts);\n}\nconst NOT_ENOUGH_FUNDS = \"NOT_ENOUGH_FUNDS\";\nconst USER_DENIED = \"USER_DENIED\";\nconst SLIPPAGE = \"SLIPPAGE\";\nconst TX_ERROR_PATTERNS = {\n  [NOT_ENOUGH_FUNDS]: [\"not enough funds for gas\", \"failed to execute call with revert code InsufficientGasFunds\"],\n  [USER_DENIED]: [\"User denied transaction signature\"],\n  [SLIPPAGE]: [\"Router: mark price lower than limit\", \"Router: mark price higher than limit\"]\n};\nexport function extractError(ex) {\n  var _ex$data;\n\n  if (!ex) {\n    return [];\n  }\n\n  const message = ((_ex$data = ex.data) === null || _ex$data === void 0 ? void 0 : _ex$data.message) || ex.message;\n\n  if (!message) {\n    return [];\n  }\n\n  for (const [type, patterns] of Object.entries(TX_ERROR_PATTERNS)) {\n    for (const pattern of patterns) {\n      if (message.includes(pattern)) {\n        return [message, type];\n      }\n    }\n  }\n\n  return [message];\n}\n\nfunction ToastifyDebug(props) {\n  _s17();\n\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Toastify-debug\",\n    children: [!open && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Toastify-debug-button\",\n      onClick: () => setOpen(true),\n      children: \"Show error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 9\n    }, this), open && props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1051,\n    columnNumber: 5\n  }, this);\n}\n\n_s17(ToastifyDebug, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = ToastifyDebug;\nexport function useStakingApr(mycPrice, ethPrice) {\n  _s18();\n\n  const [stakingApr, setStakingApr] = useState(null);\n  const {\n    data: currentCycle\n  } = useSWR([`useStakingApr:currentCycle:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"cycle\"], {\n    fetcher: fetcher(undefined, LentMyc)\n  });\n  const cycle = currentCycle === null || currentCycle === void 0 ? void 0 : currentCycle.toNumber();\n  const {\n    data: mycAssetsInStaking\n  } = useSWR(cycle ? [`useStakingApr:mycInStaking:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"totalAssets\"] : null, {\n    fetcher: fetcher(undefined, LentMyc)\n  });\n  const {\n    data: pendingMycDepositsInStaking\n  } = useSWR(cycle ? [`useStakingApr:pendingMycInStaking:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"pendingDeposits\"] : null, {\n    fetcher: fetcher(undefined, LentMyc)\n  });\n  const {\n    data: prev\n  } = useSWR(cycle ? [`useStakingApr:prev:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"cycleCumulativeEthRewards\"] : null, {\n    fetcher: fetcher(undefined, LentMyc, [cycle - 2])\n  });\n  const {\n    data: current\n  } = useSWR(cycle ? [`useStakingApr:current:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"cycleCumulativeEthRewards\"] : null, {\n    fetcher: fetcher(undefined, LentMyc, [cycle - 1])\n  });\n  const {\n    data: cycleAssets\n  } = useSWR(cycle ? [`useStakingApr:cycleAssets:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"cycleSharesAndAssets\"] : null, {\n    fetcher: fetcher(undefined, LentMyc, [cycle - 1])\n  });\n  useEffect(() => {\n    const values = [mycAssetsInStaking, pendingMycDepositsInStaking, ethPrice, mycPrice, current, prev, cycleAssets];\n\n    if (values.every(Boolean)) {\n      const cycleEthRewardsPerShare = current.sub(prev);\n      const cycleSupply = cycleAssets[0];\n      const cycleEthRewards = cycleEthRewardsPerShare.mul(cycleSupply).div(ethers.BigNumber.from(10).pow(18));\n      const ethDistributed = cycleEthRewards;\n      const mycDeposited = mycAssetsInStaking.add(pendingMycDepositsInStaking).div(expandDecimals(1, ETH_DECIMALS));\n      const mycUSDValue = mycDeposited.mul(mycPrice);\n      const ethUSDValue = ethDistributed.mul(ethPrice);\n      const aprPercentageForCycle = ethers.utils.formatUnits(ethUSDValue.div(mycUSDValue));\n      const aprPercentageYearly = parseFloat(aprPercentageForCycle) * FORTNIGHTS_IN_YEAR * 100;\n      setStakingApr(aprPercentageYearly.toFixed(2));\n    }\n  }, [mycAssetsInStaking, pendingMycDepositsInStaking, ethPrice, mycPrice, current, prev, cycleAssets]);\n  return stakingApr;\n}\n\n_s18(useStakingApr, \"BFTHlDFJnRRqA7J87IgzD1lmdcs=\", false, function () {\n  return [useSWR, useSWR, useSWR, useSWR, useSWR, useSWR];\n});\n\nexport function useTotalStaked() {\n  _s19();\n\n  const [totalStakedMyc, setTotalStakedMyc] = useState(null);\n  const {\n    data: mycAssetsInStaking\n  } = useSWR([`DashboardV2:mycInStaking:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"totalAssets\"], {\n    fetcher: fetcher(undefined, LentMyc)\n  });\n  const {\n    data: pendingMycDepositsInStaking\n  } = useSWR([`DashboardV2:pendingMycInStaking:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"pendingDeposits\"], {\n    fetcher: fetcher(undefined, LentMyc)\n  });\n  useEffect(() => {\n    if (mycAssetsInStaking && pendingMycDepositsInStaking && !totalStakedMyc) {\n      const mycDeposited = mycAssetsInStaking.add(pendingMycDepositsInStaking).div(expandDecimals(1, ETH_DECIMALS));\n\n      if (!totalStakedMyc) {\n        setTotalStakedMyc(mycDeposited);\n      }\n    }\n  }, [mycAssetsInStaking, pendingMycDepositsInStaking, totalStakedMyc]);\n  return totalStakedMyc;\n}\n\n_s19(useTotalStaked, \"q4wwXzF/V+b6C6aMbo33P4AOOEo=\", false, function () {\n  return [useSWR, useSWR];\n});\n\nexport async function callContract(chainId, contract, method, params, opts) {\n  try {\n    if (!Array.isArray(params) && typeof params === \"object\" && opts === undefined) {\n      opts = params;\n      params = [];\n    }\n\n    if (!opts) {\n      opts = {};\n    }\n\n    const txnOpts = {};\n\n    if (opts.value) {\n      txnOpts.value = opts.value;\n    }\n\n    txnOpts.gasLimit = opts.gasLimit ? opts.gasLimit : await getGasLimit(contract, method, params, opts.value);\n    await setGasPrice(txnOpts, contract.provider, chainId);\n    const res = await contract[method](...params, txnOpts);\n    const txUrl = getExplorerUrl(chainId) + \"tx/\" + res.hash;\n    const sentMsg = opts.sentMsg || \"Transaction sent.\";\n    helperToast.success( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [sentMsg, \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: txUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"View status.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 7\n    }, this));\n\n    if (opts.setPendingTxns) {\n      const pendingTxn = {\n        hash: res.hash,\n        message: opts.successMsg || \"Transaction completed!\"\n      };\n      opts.setPendingTxns(pendingTxns => [...pendingTxns, pendingTxn]);\n    }\n\n    return res;\n  } catch (e) {\n    let failMsg;\n    const [message, type] = extractError(e);\n\n    switch (type) {\n      case NOT_ENOUGH_FUNDS:\n        failMsg = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"There is not enough ETH in your account on Arbitrum to send this transaction.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://arbitrum.io/bridge-tutorial/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Bridge ETH to Arbitrum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case USER_DENIED:\n        failMsg = \"Transaction was cancelled.\";\n        break;\n\n      case SLIPPAGE:\n        failMsg = 'The mark price has changed, consider increasing your Allowed Slippage by clicking on the \"...\" icon next to your address.';\n        break;\n\n      default:\n        failMsg = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [opts.failMsg || \"Transaction failed.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(ToastifyDebug, {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 11\n        }, this);\n    }\n\n    helperToast.error(failMsg);\n    throw e;\n  }\n}\nexport function useMlpPrices(chainId, currentMlpPrice) {\n  _s20();\n\n  const query = gql(`{\n    mlpStats(\n      first: 1000,\n      orderBy: id,\n      orderDirection: asc,\n      where: { period: daily }\n    ) {\n      id\n      aumInUsdg\n      mlpSupply\n      distributedUsd\n      distributedEth\n    },\n    feeStats (\n      first: 1000,\n      orderBy: id,\n      orderDirection: asc,\n      where: { period: daily }\n    ) {\n      id\n      margin\n      marginAndLiquidation\n      swap\n      liquidation\n      mint\n      burn\n    }\n  }`);\n  const [data, setData] = useState();\n  useEffect(() => {\n    getMycGraphClient(chainId).query({\n      query\n    }).then(setData).catch(console.warn);\n  }, [setData, query, chainId]);\n  let cumulativeDistributedUsdPerMlp = 0;\n  let cumulativeDistributedEthPerMlp = 0;\n  const mlpChartData = useMemo(() => {\n    if (!data) {\n      return null;\n    }\n\n    let prevMlpSupply;\n    let prevAum;\n    const feeStatsById = data.data.feeStats.reduce((o, stat) => ({ ...o,\n      [stat.id]: ethers.BigNumber.from(stat.marginAndLiquidation).add(stat.swap).add(stat.mint).add(stat.burn)\n    }), {});\n    let cumulativeFees = ethers.BigNumber.from(0);\n    let ret = data.data.mlpStats.filter(item => item.id % 86400 === 0).reduce((memo, item, i) => {\n      var _feeStatsById$item$id;\n\n      const last = memo[memo.length - 1];\n      const aum = Number(item.aumInUsdg) / 1e18;\n      const mlpSupply = Number(item.mlpSupply) / 1e18;\n      const distributedUsd = Number(item.distributedUsd) / 1e30;\n      const distributedUsdPerMlp = distributedUsd / mlpSupply || 0;\n      cumulativeDistributedUsdPerMlp += distributedUsdPerMlp;\n      const distributedEth = Number(item.distributedEth) / 1e18;\n      const distributedEthPerMlp = distributedEth / mlpSupply || 0;\n      cumulativeDistributedEthPerMlp += distributedEthPerMlp;\n      const feeStat = (_feeStatsById$item$id = feeStatsById[item.id]) !== null && _feeStatsById$item$id !== void 0 ? _feeStatsById$item$id : ethers.BigNumber.from(0);\n      cumulativeFees = cumulativeFees.add(feeStat);\n      const totalFees = parseFloat(ethers.utils.formatUnits(cumulativeFees, USD_DECIMALS));\n      const mlpPrice = aum / mlpSupply;\n      const mlpPriceWithFees = (totalFees + aum) / mlpSupply;\n      const timestamp = parseInt(item.id);\n      const newItem = {\n        time: timestamp,\n        aum,\n        mlpSupply,\n        value: mlpPrice,\n        mlpPriceWithFees: mlpPriceWithFees,\n        cumulativeDistributedEthPerMlp,\n        cumulativeDistributedUsdPerMlp,\n        distributedUsdPerMlp,\n        distributedEthPerMlp\n      };\n\n      if (i === data.data.mlpStats.length - 1 && currentMlpPrice) {\n        newItem.mlpPriceWithFees = Number.isNaN(mlpPrice) ? parseFloat(ethers.utils.formatUnits(currentMlpPrice, USD_DECIMALS)) : mlpPriceWithFees;\n        newItem.value = parseFloat(ethers.utils.formatUnits(currentMlpPrice, USD_DECIMALS));\n      }\n\n      if (last && last.timestamp === timestamp) {\n        memo[memo.length - 1] = newItem;\n      } else {\n        memo.push(newItem);\n      }\n\n      return memo;\n    }, []).map(item => {\n      let {\n        mlpSupply,\n        aum\n      } = item;\n\n      if (!mlpSupply) {\n        mlpSupply = prevMlpSupply;\n      }\n\n      if (!aum) {\n        aum = prevAum;\n      }\n\n      item.mlpSupplyChange = prevMlpSupply ? (mlpSupply - prevMlpSupply) / prevMlpSupply * 100 : 0;\n      if (item.mlpSupplyChange > 1000) item.mlpSupplyChange = 0;\n      item.aumChange = prevAum ? (aum - prevAum) / prevAum * 100 : 0;\n      if (item.aumChange > 1000) item.aumChange = 0;\n      prevMlpSupply = mlpSupply;\n      prevAum = aum;\n      return item;\n    }); // ret = fillNa(ret);\n\n    return ret;\n  }, [data, currentMlpPrice]);\n  return mlpChartData;\n}\n\n_s20(useMlpPrices, \"0gjpp1HjfwW7dqdicavgBRaVi8s=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ToastifyDebug\");","map":{"version":3,"names":["ethers","gql","useState","useEffect","useMemo","useCallback","useRef","Token","UniToken","Pool","useSWR","OrderBook","PositionManager","Vault","Router","LentMyc","UniPool","getContract","getConstant","ARBITRUM","ETHEREUM","bigNumberify","getExplorerUrl","setGasPrice","getGasLimit","replaceNativeTokenAddress","getProvider","getOrderKey","fetcher","parseValue","expandDecimals","helperToast","USD_DECIMALS","ETH_DECIMALS","FORTNIGHTS_IN_YEAR","ARBITRUM_GOERLI","getTokenBySymbol","nissohGraphClient","arbitrumGraphClient","arbitrumTestnetGraphClient","getServerUrl","getSupplyUrl","AddressZero","constants","getMycGraphClient","chainId","Error","useFees","query","res","setRes","then","catch","console","warn","data","feeStat","useFeesSince","from","to","feeStats","fees","reduce","sum","stat","add","mint","burn","swap","marginAndLiquidation","FEE_MULTIPLIER_BASIS_POINTS","MM_FEE_MULTIPLIER","MM_SWAPS_FEE_MULTIPLIER","useSpreadCaptureVolume","undefined","totalMMFees","volumeStats","mul","margin","liquidation","div","useVolume","volumeStat","useAllOrdersStats","orderStat","useUserStat","userStat","useLiquidationsData","account","setData","toLowerCase","graphClient","_data","liquidatedPositions","map","item","size","collateral","markPrice","useAllPositions","library","count","key","positions","provider","vaultAddress","contract","Contract","abi","ret","Promise","all","aggregatedTradeOpens","dataItem","indexToken","collateralToken","isLong","initialPosition","positionData","getPosition","position","entryFundingRate","fundingFee","getFundingFee","marginFee","fee","THRESHOLD","collateralDiffPercent","danger","gt","ex","error","filter","Boolean","useAllOrders","orders","order","type","index","orderBookAddress","charAt","toUpperCase","substring","method","orderFromChain","val","Object","entries","path","path0","path1","path2","address","createdTimestamp","usePositionsForOrders","eq","memo","invariant","condition","errorMsg","useTrades","url","length","mutate","updateTrades","dedupingInterval","fetch","json","trades","Array","isArray","datum","dataValues","id","toString","params","JSON","stringify","sort","item0","item1","data0","data1","time0","parseInt","timestamp","time1","block0","blockNumber","block1","isNaN","useHasOutdatedUi","useMYCPrice","libraries","active","arbitrumLibrary","arbitrum","mycPriceFromArbitrum","mutateFromArbitrum","useMYCPriceFromArbitrum","mycPriceFromMainnet","mutateFromMainnet","useMYCPriceFromMainnet","mycPrice","useTotalMYCSupply","mycSupply","updateMYCSupply","text","circulatingMycSupply","updateMYCCirculatingSupply","total","utils","parseUnits","circulating","useTotalMYCInLiquidity","poolAddressArbitrum","uniswap","uniswapMycTcr","balancer","poolAddressMainnet","totalMYCArbitrum","totalMYCMainnet","mycInUniswapLiquidityOnArbitrum","mutateMYCInUniswapLiquidityOnArbitrum","mycTcrInUniswapLiquidityOnArbitrum","mutateMYCTCRInUniswapLiquidityOnArbitrum","mycInBalancerLiquidityOnArbitrum","mutateMYCInBalancerLiquidityOnArbitrum","mycInUniswapLiquidityOnMainnet","mutateMYCInUniswapLiquidityOnMainnet","mycInBalancerLiquidityOnMainnet","mutateMYCInBalancerLiquidityOnMainnet","current","mainnet","poolAddress","mycEthUniPoolSlot0","updateTcrEthUniPoolSlot0","ethPoolAddress","ethUsdcUniPoolSlot0","updateEthUsdcUniPoolSlot0","ethAddress","ETH","usdcAddress","USDC","ethUsdcPool","sqrtPriceX96","tick","mycAddress","MYC","mycEthPool","ethPrice","priceOf","toSignificant","ethPriceAmount","poolTokenPrice","poolTokenPriceAmount","uniPoolSlot0","updateUniPoolSlot0","updateEthPrice","tokenA","tokenB","pool","approvePlugin","pluginAddress","pendingTxns","setPendingTxns","sentMsg","failMsg","routerAddress","getSigner","callContract","createSwapOrder","amountIn","minOut","triggerRatio","nativeTokenAddress","opts","executionFee","triggerAboveThreshold","shouldWrap","shouldUnwrap","value","createIncreaseOrder","indexTokenAddress","sizeDelta","collateralTokenAddress","triggerPrice","fromETH","createDecreaseOrder","collateralDelta","cancelSwapOrder","cancelDecreaseOrder","cancelIncreaseOrder","updateDecreaseOrder","updateIncreaseOrder","updateSwapOrder","_executeOrder","feeReceiver","positionManagerAddress","executeSwapOrder","executeIncreaseOrder","executeDecreaseOrder","NOT_ENOUGH_FUNDS","USER_DENIED","SLIPPAGE","TX_ERROR_PATTERNS","extractError","message","patterns","pattern","includes","ToastifyDebug","props","open","setOpen","children","useStakingApr","stakingApr","setStakingApr","currentCycle","cycle","toNumber","mycAssetsInStaking","pendingMycDepositsInStaking","prev","cycleAssets","values","every","cycleEthRewardsPerShare","sub","cycleSupply","cycleEthRewards","BigNumber","pow","ethDistributed","mycDeposited","mycUSDValue","ethUSDValue","aprPercentageForCycle","formatUnits","aprPercentageYearly","parseFloat","toFixed","useTotalStaked","totalStakedMyc","setTotalStakedMyc","txnOpts","gasLimit","txUrl","hash","success","pendingTxn","successMsg","e","useMlpPrices","currentMlpPrice","cumulativeDistributedUsdPerMlp","cumulativeDistributedEthPerMlp","mlpChartData","prevMlpSupply","prevAum","feeStatsById","o","cumulativeFees","mlpStats","i","last","aum","Number","aumInUsdg","mlpSupply","distributedUsd","distributedUsdPerMlp","distributedEth","distributedEthPerMlp","totalFees","mlpPrice","mlpPriceWithFees","newItem","time","push","mlpSupplyChange","aumChange"],"sources":["C:/Users/rober/Documents/copiaswaps-client/swaps-client/src/Api/index.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { gql } from \"@apollo/client\";\nimport { useState, useEffect, useMemo, useCallback, useRef } from \"react\";\nimport { Token as UniToken } from \"@uniswap/sdk-core\";\nimport { Pool } from \"@uniswap/v3-sdk\";\nimport useSWR from \"swr\";\n\nimport OrderBook from \"../abis/OrderBook.json\";\nimport PositionManager from \"../abis/PositionManager.json\";\nimport Vault from \"../abis/Vault.json\";\nimport Router from \"../abis/Router.json\";\nimport LentMyc from \"../abis/LentMyc.json\";\nimport UniPool from \"../abis/UniPool.json\";\nimport Token from \"../abis/Token.json\";\n\nimport { getContract } from \"../Addresses\";\nimport { getConstant } from \"../Constants\";\nimport {\n  ARBITRUM,\n  ETHEREUM,\n  bigNumberify,\n  getExplorerUrl,\n  setGasPrice,\n  getGasLimit,\n  replaceNativeTokenAddress,\n  getProvider,\n  getOrderKey,\n  fetcher,\n  parseValue,\n  expandDecimals,\n  helperToast,\n  USD_DECIMALS,\n  ETH_DECIMALS,\n  FORTNIGHTS_IN_YEAR,\n  ARBITRUM_GOERLI,\n} from \"../Helpers\";\nimport { getTokenBySymbol } from \"../data/Tokens\";\n\nimport { nissohGraphClient, arbitrumGraphClient, arbitrumTestnetGraphClient } from \"./common\";\nimport { getServerUrl, getSupplyUrl } from \"src/lib\";\nexport * from \"./prices\";\n\nconst { AddressZero } = ethers.constants;\n\nfunction getMycGraphClient(chainId) {\n  if (chainId === ARBITRUM) {\n    return arbitrumGraphClient;\n  } else if (chainId === ARBITRUM_GOERLI) {\n    return arbitrumTestnetGraphClient;\n  }\n  throw new Error(`Unsupported chain ${chainId}`);\n}\n\nexport function useFees(chainId) {\n  const query = gql(`{\n    feeStat(id: \"total\") {\n      swap\n      marginAndLiquidation\n      mint\n      burn\n    }\n  }`);\n\n  const [res, setRes] = useState();\n\n  useEffect(() => {\n    getMycGraphClient(chainId).query({ query }).then(setRes).catch(console.warn);\n  }, [setRes, query, chainId]);\n\n  return res ? res.data.feeStat : null;\n}\n\nexport function useFeesSince(chainId, from, to) {\n  const [res, setRes] = useState();\n\n  const query = gql(`{\n    feeStats(where: { id_gte: ${from}, id_lt: ${to}, period: daily }) {\n      id\n      marginAndLiquidation\n      swap\n      mint\n      burn\n    },\n  }`);\n\n  useEffect(() => {\n    if (!from) {\n      return;\n    }\n    getMycGraphClient(chainId)\n      .query({ query })\n      .then((res) => {\n        if (res.data.feeStats) {\n          let fees = res.data.feeStats.reduce(\n            (sum, stat) => sum.add(stat.mint).add(stat.burn).add(stat.swap).add(stat.marginAndLiquidation),\n            bigNumberify(0)\n          );\n          setRes(fees);\n        }\n      })\n      .catch(console.warn);\n  }, [setRes, query, chainId, from]);\n\n  return res;\n}\n\nconst FEE_MULTIPLIER_BASIS_POINTS = 4;\nconst MM_FEE_MULTIPLIER = bigNumberify(6);\nconst MM_SWAPS_FEE_MULTIPLIER = bigNumberify(12);\n\nexport function useSpreadCaptureVolume(chainId) {\n  // spread capture turned off\n  const to = 1665792441;\n  const query = gql(`{\n    volumeStats(first: 1000, period: daily, orderBy: id, orderDirection: desc, where: { id_lt: ${to} }) {\n      margin\n      liquidation\n      swap\n      mint\n      burn\n    }\n  }`);\n\n  const [res, setRes] = useState(undefined);\n\n  useEffect(() => {\n    getMycGraphClient(chainId).query({ query }).then((res) => {\n      const totalMMFees = res.data.volumeStats.reduce((sum, stat) => sum\n        .add(MM_FEE_MULTIPLIER.mul(stat.mint))\n        .add(MM_FEE_MULTIPLIER.mul(stat.burn))\n        .add(MM_FEE_MULTIPLIER.mul(stat.margin))\n        .add(MM_FEE_MULTIPLIER.mul(stat.liquidation))\n        .add(MM_SWAPS_FEE_MULTIPLIER.mul(stat.swap))\n      , bigNumberify(0));\n      setRes(totalMMFees.div(expandDecimals(1, FEE_MULTIPLIER_BASIS_POINTS)))\n    }).catch(console.warn);\n  }, [setRes, query, chainId]);\n\n  return res;\n}\n\nexport function useVolume(chainId) {\n  const query = gql(`{\n    volumeStat(id: \"total\") {\n      margin\n      liquidation\n      swap\n      mint\n      burn\n    }\n  }`);\n\n  const [res, setRes] = useState();\n\n  useEffect(() => {\n    getMycGraphClient(chainId).query({ query }).then(setRes).catch(console.warn);\n  }, [setRes, query, chainId]);\n\n  return res ? res.data.volumeStat : null;\n}\n\nexport function useAllOrdersStats(chainId) {\n  const query = gql(`{\n    orderStat(id: \"total\") {\n      openSwap\n      openIncrease\n      openDecrease\n      executedSwap\n      executedIncrease\n      executedDecrease\n      cancelledSwap\n      cancelledIncrease\n      cancelledDecrease\n    }\n  }`);\n\n  const [res, setRes] = useState();\n\n  useEffect(() => {\n    getMycGraphClient(chainId).query({ query }).then(setRes).catch(console.warn);\n  }, [setRes, query, chainId]);\n\n  return res ? res.data.orderStat : null;\n}\n\nexport function useUserStat(chainId) {\n  const query = gql(`{\n    userStat(id: \"total\") {\n      id\n      uniqueCount\n    }\n  }`);\n\n  const [res, setRes] = useState();\n\n  useEffect(() => {\n    getMycGraphClient(chainId).query({ query }).then(setRes).catch(console.warn);\n  }, [setRes, query, chainId]);\n\n  return res ? res.data.userStat : null;\n}\n\nexport function useLiquidationsData(chainId, account) {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    if (account) {\n      const query = gql(`{\n         liquidatedPositions(\n           where: {account: \"${account.toLowerCase()}\"}\n           first: 100\n           orderBy: timestamp\n           orderDirection: desc\n         ) {\n           key\n           timestamp\n           borrowFee\n           loss\n           collateral\n           size\n           markPrice\n           type\n         }\n      }`);\n      const graphClient = getMycGraphClient(chainId);\n      graphClient\n        .query({ query })\n        .then((res) => {\n          const _data = res.data.liquidatedPositions.map((item) => {\n            return {\n              ...item,\n              size: bigNumberify(item.size),\n              collateral: bigNumberify(item.collateral),\n              markPrice: bigNumberify(item.markPrice),\n            };\n          });\n          setData(_data);\n        })\n        .catch(console.warn);\n    }\n  }, [setData, chainId, account]);\n\n  return data;\n}\n\nexport function useAllPositions(chainId, library) {\n  const count = 1000;\n  const query = gql(`{\n    aggregatedTradeOpens(\n      first: ${count}\n    ) {\n      account\n      initialPosition{\n        indexToken\n        collateralToken\n        isLong\n        sizeDelta\n      }\n      increaseList {\n        sizeDelta\n      }\n      decreaseList {\n        sizeDelta\n      }\n    }\n  }`);\n\n  const [res, setRes] = useState();\n\n  useEffect(() => {\n    nissohGraphClient.query({ query }).then(setRes).catch(console.warn);\n  }, [setRes, query]);\n\n  const key = res ? `allPositions${count}__` : false;\n  const { data: positions = [] } = useSWR(key, async () => {\n    const provider = getProvider(library, chainId);\n    const vaultAddress = getContract(chainId, \"Vault\");\n    const contract = new ethers.Contract(vaultAddress, Vault.abi, provider);\n    const ret = await Promise.all(\n      res.data.aggregatedTradeOpens.map(async (dataItem) => {\n        try {\n          const { indexToken, collateralToken, isLong } = dataItem.initialPosition;\n          const positionData = await contract.getPosition(dataItem.account, collateralToken, indexToken, isLong);\n          const position = {\n            size: bigNumberify(positionData[0]),\n            collateral: bigNumberify(positionData[1]),\n            entryFundingRate: bigNumberify(positionData[3]),\n            account: dataItem.account,\n          };\n          position.fundingFee = await contract.getFundingFee(collateralToken, position.size, position.entryFundingRate);\n          position.marginFee = position.size.div(1000);\n          position.fee = position.fundingFee.add(position.marginFee);\n\n          const THRESHOLD = 5000;\n          const collateralDiffPercent = position.fee.mul(10000).div(position.collateral);\n          position.danger = collateralDiffPercent.gt(THRESHOLD);\n\n          return position;\n        } catch (ex) {\n          console.error(ex);\n        }\n      })\n    );\n\n    return ret.filter(Boolean);\n  });\n\n  return positions;\n}\n\nexport function useAllOrders(chainId, library) {\n  const query = gql(`{\n    orders(\n      first: 1000,\n      orderBy: createdTimestamp,\n      orderDirection: desc,\n      where: {status: \"open\"}\n    ) {\n      type\n      account\n      index\n      status\n      createdTimestamp\n    }\n  }`);\n\n  const [res, setRes] = useState();\n\n  useEffect(() => {\n    getMycGraphClient(chainId).query({ query }).then(setRes);\n  }, [setRes, query, chainId]);\n\n  const key = res ? res.data.orders.map((order) => `${order.type}-${order.account}-${order.index}`) : null;\n  const { data: orders = [] } = useSWR(key, () => {\n    const provider = getProvider(library, chainId);\n    const orderBookAddress = getContract(chainId, \"OrderBook\");\n    const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, provider);\n    return Promise.all(\n      res.data.orders.map(async (order) => {\n        try {\n          const type = order.type.charAt(0).toUpperCase() + order.type.substring(1);\n          const method = `get${type}Order`;\n          const orderFromChain = await contract[method](order.account, order.index);\n          const ret = {};\n          for (const [key, val] of Object.entries(orderFromChain)) {\n            ret[key] = val;\n          }\n          if (order.type === \"swap\") {\n            ret.path = [ret.path0, ret.path1, ret.path2].filter((address) => address !== AddressZero);\n          }\n          ret.type = type;\n          ret.index = order.index;\n          ret.account = order.account;\n          ret.createdTimestamp = order.createdTimestamp;\n          return ret;\n        } catch (ex) {\n          console.error(ex);\n        }\n      })\n    );\n  });\n\n  return orders.filter(Boolean);\n}\n\nexport function usePositionsForOrders(chainId, library, orders) {\n  const key = orders ? orders.map((order) => getOrderKey(order) + \"____\") : null;\n  const { data: positions = {} } = useSWR(key, async () => {\n    const provider = getProvider(library, chainId);\n    const vaultAddress = getContract(chainId, \"Vault\");\n    const contract = new ethers.Contract(vaultAddress, Vault.abi, provider);\n    const data = await Promise.all(\n      orders.map(async (order) => {\n        try {\n          const position = await contract.getPosition(\n            order.account,\n            order.collateralToken,\n            order.indexToken,\n            order.isLong\n          );\n          if (position[0].eq(0)) {\n            return [null, order];\n          }\n          return [position, order];\n        } catch (ex) {\n          console.error(ex);\n        }\n      })\n    );\n    return data.reduce((memo, [position, order]) => {\n      memo[getOrderKey(order)] = position;\n      return memo;\n    }, {});\n  });\n\n  return positions;\n}\n\nfunction invariant(condition, errorMsg) {\n  if (!condition) {\n    throw new Error(errorMsg);\n  }\n}\n\nexport function useTrades(chainId, account) {\n  let url = getServerUrl(chainId, \"/actions\");\n  if (account && account.length) {\n    url += `&account=${account}`;\n  }\n\n  const { data, mutate: updateTrades } = useSWR(url, {\n    dedupingInterval: 30000,\n    fetcher: (...args) => fetch(...args).then((res) => res.json()),\n  });\n\n  // Convert the response to match expected format\n  let trades = [];\n  if (Array.isArray(data)) {\n    trades = data.map((datum) => {\n      if (datum.dataValues) {\n        return {\n          id: datum.dataValues.id.toString(),\n          data: {\n            ...datum.dataValues,\n            params: JSON.stringify(datum.dataValues.params),\n          },\n        };\n      } else {\n        return {\n          id: datum.id,\n          data: {\n            ...datum,\n            params: JSON.stringify(datum.params),\n          },\n        };\n      }\n    });\n  }\n\n  if (trades) {\n    trades.sort((item0, item1) => {\n      const data0 = item0.data;\n      const data1 = item1.data;\n      const time0 = parseInt(data0.timestamp);\n      const time1 = parseInt(data1.timestamp);\n      if (time1 > time0) {\n        return 1;\n      }\n      if (time1 < time0) {\n        return -1;\n      }\n\n      const block0 = parseInt(data0.blockNumber);\n      const block1 = parseInt(data1.blockNumber);\n\n      if (isNaN(block0) && isNaN(block1)) {\n        return 0;\n      }\n\n      if (isNaN(block0)) {\n        return 1;\n      }\n\n      if (isNaN(block1)) {\n        return -1;\n      }\n\n      if (block1 > block0) {\n        return 1;\n      }\n\n      if (block1 < block0) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n\n  return { trades, updateTrades };\n}\n\nexport function useHasOutdatedUi() {\n  return { data: false };\n}\n\nexport function useMYCPrice(chainId, libraries, active) {\n  const arbitrumLibrary = libraries && libraries.arbitrum ? libraries.arbitrum : undefined;\n  const { data: mycPriceFromArbitrum, mutate: mutateFromArbitrum } = useMYCPriceFromArbitrum(arbitrumLibrary, active);\n  const { data: mycPriceFromMainnet, mutate: mutateFromMainnet } = useMYCPriceFromMainnet(active);\n\n  const mycPrice = chainId === ARBITRUM ? mycPriceFromArbitrum : mycPriceFromMainnet;\n\n  const mutate = useCallback(() => {\n    mutateFromMainnet();\n    mutateFromArbitrum();\n  }, [mutateFromMainnet, mutateFromArbitrum]);\n\n  return {\n    mycPrice,\n    mycPriceFromArbitrum,\n    mycPriceFromMainnet,\n    mutate,\n  };\n}\n\nexport function useTotalMYCSupply() {\n  const { data: mycSupply, mutate: updateMYCSupply } = useSWR([getSupplyUrl(\"/totalSupply\")], {\n    fetcher: (...args) => fetch(...args).then((res) => res.text()),\n  });\n\n  const { data: circulatingMycSupply, mutate: updateMYCCirculatingSupply } = useSWR(\n    [getSupplyUrl(\"/circulatingSupply\")],\n    {\n      fetcher: (...args) => fetch(...args).then((res) => res.text()),\n    }\n  );\n\n  const mutate = useCallback(() => {\n    updateMYCSupply();\n    updateMYCCirculatingSupply();\n  }, [updateMYCSupply, updateMYCCirculatingSupply]);\n\n  return {\n    total: mycSupply ? bigNumberify(ethers.utils.parseUnits(mycSupply, 18)) : undefined,\n    circulating: circulatingMycSupply ? bigNumberify(ethers.utils.parseUnits(circulatingMycSupply, 18)) : undefined,\n    mutate,\n  };\n}\n\nexport function useTotalMYCInLiquidity() {\n  let poolAddressArbitrum = {\n    uniswap: getContract(ARBITRUM, \"UniswapMycEthPool\"),\n    uniswapMycTcr: getContract(ARBITRUM, \"UniswapMycTcrPool\"),\n    balancer: getContract(ARBITRUM, \"BalancerVault\"),\n  };\n  let poolAddressMainnet = {\n    uniswap: getContract(ETHEREUM, \"UniswapMycEthPool\"),\n    balancer: getContract(ETHEREUM, \"BalancerVault\"),\n    // uniswap: getContract(ETHEREUM, \"UniswapTcrEthPool\"),\n    // sushiswap: getContract(ETHEREUM, \"SushiswapTcrEthPool\"),\n  };\n  let totalMYCArbitrum = useRef(bigNumberify(0));\n  let totalMYCMainnet = useRef(bigNumberify(0));\n\n  const { data: mycInUniswapLiquidityOnArbitrum, mutate: mutateMYCInUniswapLiquidityOnArbitrum } = useSWR(\n    [\n      `StakeV2:mycInLiquidity:${ARBITRUM}`,\n      ARBITRUM,\n      getContract(ARBITRUM, \"MYC\"),\n      \"balanceOf\",\n      poolAddressArbitrum.uniswap,\n    ],\n    {\n      fetcher: fetcher(undefined, Token),\n    }\n  );\n\n  // TODO this pool will slowly get phased out\n  const { data: mycTcrInUniswapLiquidityOnArbitrum, mutate: mutateMYCTCRInUniswapLiquidityOnArbitrum } = useSWR(\n    [\n      `StakeV2:mycTcrInLiquidity:${ARBITRUM}`,\n      ARBITRUM,\n      getContract(ARBITRUM, \"MYC\"),\n      \"balanceOf\",\n      poolAddressArbitrum.uniswapMycTcr,\n    ],\n    {\n      fetcher: fetcher(undefined, Token),\n    }\n  );\n\n  const { data: mycInBalancerLiquidityOnArbitrum, mutate: mutateMYCInBalancerLiquidityOnArbitrum } = useSWR(\n    [\n      `StakeV2:mycBalancerLiquidity:${ARBITRUM}`,\n      ARBITRUM,\n      getContract(ARBITRUM, \"MYC\"),\n      \"balanceOf\",\n      poolAddressArbitrum.balancer,\n    ],\n    {\n      fetcher: fetcher(undefined, Token),\n    }\n  );\n\n  // const { data: tcrInUniswapLiquidityOnArbitrum, mutate: mutateTCRInUniswapLiquidityOnArbitrum } = useSWR(\n  // [\n  // `StakeV2:tcrInLiquidity:${ARBITRUM}`,\n  // ARBITRUM,\n  // getContract(ARBITRUM, \"TCR\"),\n  // \"balanceOf\",\n  // poolAddressArbitrum.uniswapTcr,\n  // ],\n  // {\n  // fetcher: fetcher(undefined, Token),\n  // }\n  // );\n\n  // const { data: tcrInBalancerLiquidityOnArbitrum, mutate: mutateTCRInBalancerLiquidityOnArbitrum } = useSWR(\n  // [\n  // `StakeV2:mycBalancerLiquidity:${ARBITRUM}`,\n  // ARBITRUM,\n  // getContract(ARBITRUM, \"TCR\"),\n  // \"balanceOf\",\n  // poolAddressArbitrum.balancer,\n  // ],\n  // {\n  // fetcher: fetcher(undefined, Token),\n  // }\n  // );\n\n  const { data: mycInUniswapLiquidityOnMainnet, mutate: mutateMYCInUniswapLiquidityOnMainnet } = useSWR(\n    [\n      `StakeV2:mycInUniswapLiquidity:${ETHEREUM}`,\n      ETHEREUM,\n      getContract(ETHEREUM, \"MYC\"),\n      \"balanceOf\",\n      poolAddressMainnet.uniswap,\n    ],\n    {\n      fetcher: fetcher(undefined, Token),\n    }\n  );\n\n  const { data: mycInBalancerLiquidityOnMainnet, mutate: mutateMYCInBalancerLiquidityOnMainnet } = useSWR(\n    [\n      `StakeV2:mycBalancerLiquidity:${ETHEREUM}`,\n      ETHEREUM,\n      getContract(ETHEREUM, \"MYC\"),\n      \"balanceOf\",\n      poolAddressMainnet.balancer,\n    ],\n    {\n      fetcher: fetcher(undefined, Token),\n    }\n  );\n\n  // const { data: tcrInSushiswapLiquidityOnMainnet, mutate: mutateTCRInSushiSwapLiquidityOnMainnet } = useSWR(\n  // [\n  // `StakeV2:tcrInSushiswapLiquidity:${ETHEREUM}`,\n  // ETHEREUM,\n  // getContract(ETHEREUM, \"TCR\"),\n  // \"balanceOf\",\n  // poolAddressMainnet.sushiswap,\n  // ],\n  // {\n  // fetcher: fetcher(undefined, Token),\n  // }\n  // );\n\n  const mutate = useCallback(() => {\n    mutateMYCInUniswapLiquidityOnArbitrum();\n    mutateMYCInBalancerLiquidityOnArbitrum();\n    mutateMYCTCRInUniswapLiquidityOnArbitrum();\n    // mutateTCRInUniswapLiquidityOnArbitrum();\n    // mutateTCRInBalancerLiquidityOnArbitrum();\n\n    mutateMYCInUniswapLiquidityOnMainnet();\n    // mutateTCRInSushiSwapLiquidityOnMainnet();\n    mutateMYCInBalancerLiquidityOnMainnet();\n  }, [\n    mutateMYCInUniswapLiquidityOnArbitrum,\n    mutateMYCInBalancerLiquidityOnArbitrum,\n    mutateMYCTCRInUniswapLiquidityOnArbitrum,\n    // mutateTCRInUniswapLiquidityOnArbitrum,\n    // mutateTCRInBalancerLiquidityOnArbitrum,\n\n    mutateMYCInUniswapLiquidityOnMainnet,\n    // mutateTCRInSushiSwapLiquidityOnMainnet,\n    mutateMYCInBalancerLiquidityOnMainnet,\n  ]);\n\n  if (mycInUniswapLiquidityOnMainnet && mycInBalancerLiquidityOnMainnet && mycTcrInUniswapLiquidityOnArbitrum) {\n    let total = bigNumberify(mycInUniswapLiquidityOnMainnet)\n      .add(mycInBalancerLiquidityOnMainnet)\n      .add(mycTcrInUniswapLiquidityOnArbitrum);\n    totalMYCMainnet.current = total;\n  }\n\n  if (mycInUniswapLiquidityOnArbitrum && mycInBalancerLiquidityOnArbitrum) {\n    let total = bigNumberify(mycInUniswapLiquidityOnArbitrum).add(mycInBalancerLiquidityOnArbitrum);\n    totalMYCArbitrum.current = total;\n  }\n\n  return {\n    mainnet: totalMYCMainnet.current,\n    arbitrum: totalMYCArbitrum.current,\n    total: totalMYCArbitrum.current.add(totalMYCMainnet.current),\n    mutate,\n  };\n}\n\nfunction useMYCPriceFromMainnet(active) {\n  const poolAddress = getContract(ETHEREUM, \"UniswapMycEthPool\");\n  const { data: mycEthUniPoolSlot0, mutate: updateTcrEthUniPoolSlot0 } = useSWR(\n    [`StakeV2:mainnetUniPoolSlot0:${active}`, ETHEREUM, poolAddress, \"slot0\"],\n    {\n      fetcher: fetcher(undefined, UniPool),\n    }\n  );\n\n  const ethPoolAddress = getContract(ETHEREUM, \"UniswapEthUsdcPool\");\n  const { data: ethUsdcUniPoolSlot0, mutate: updateEthUsdcUniPoolSlot0 } = useSWR(\n    [`StakeV2:mainnetEthPrice:${active}`, ETHEREUM, ethPoolAddress, \"slot0\"],\n    {\n      fetcher: fetcher(undefined, UniPool),\n    }\n  );\n\n  const mycPrice = useMemo(() => {\n    if (mycEthUniPoolSlot0 && ethUsdcUniPoolSlot0) {\n      const ethAddress = getContract(ETHEREUM, \"WETH\");\n      const ETH = new UniToken(ETHEREUM, ethAddress, 18, \"SYMBOL\", \"NAME\");\n\n      const usdcAddress = getContract(ETHEREUM, \"USDC\");\n      const USDC = new UniToken(ETHEREUM, usdcAddress, 18, \"SYMBOL\", \"NAME\");\n\n      const ethUsdcPool = new Pool(ETH, USDC, 0, ethUsdcUniPoolSlot0.sqrtPriceX96, 1, ethUsdcUniPoolSlot0.tick);\n\n      const mycAddress = getContract(ETHEREUM, \"TCR\");\n      const MYC = new UniToken(ETHEREUM, mycAddress, 18, \"SYMBOL\", \"NAME\");\n\n      const mycEthPool = new Pool(\n        ETH, // tokenA\n        MYC, // tokenB\n        10000, // fee\n        mycEthUniPoolSlot0.sqrtPriceX96, // sqrtRatioX96\n        1, // liquidity\n        mycEthUniPoolSlot0.tick, // tickCurrent\n        []\n      );\n\n      const ethPrice = ethUsdcPool.priceOf(ETH).toSignificant(6);\n      // USDC is 6 decimals need to parse into 18 + 6 decimal places\n      const ethPriceAmount = parseValue(ethPrice, 24);\n      const poolTokenPrice = mycEthPool.priceOf(MYC).toSignificant(6);\n      const poolTokenPriceAmount = parseValue(poolTokenPrice, 18);\n      // here everything is in 10 ** 24 precision\n      return poolTokenPriceAmount.mul(ethPriceAmount);\n    }\n  }, [ethUsdcUniPoolSlot0, mycEthUniPoolSlot0]);\n\n  const mutate = useCallback(() => {\n    updateTcrEthUniPoolSlot0(undefined, true);\n    updateEthUsdcUniPoolSlot0(undefined, true);\n  }, [updateEthUsdcUniPoolSlot0, updateTcrEthUniPoolSlot0]);\n\n  return { data: mycPrice, mutate };\n}\n\nfunction useMYCPriceFromArbitrum(library, active) {\n  // liquidity is too low for uniswap on arbitrum can use tcr for now\n  const poolAddress = getContract(ARBITRUM, \"UniswapTcrEthPool\");\n  // const poolAddress = getContract(ARBITRUM, \"UniswapMycEthPool\");\n  const { data: uniPoolSlot0, mutate: updateUniPoolSlot0 } = useSWR(\n    [`StakeV2:uniPoolSlot0:${active}`, ARBITRUM, poolAddress, \"slot0\"],\n    {\n      fetcher: fetcher(library, UniPool),\n    }\n  );\n\n  const vaultAddress = getContract(ARBITRUM, \"Vault\");\n  const ethAddress = getTokenBySymbol(ARBITRUM, \"WETH\").address;\n  const { data: ethPrice, mutate: updateEthPrice } = useSWR(\n    [`StakeV2:ethPrice:${active}`, ARBITRUM, vaultAddress, \"getMinPrice\", ethAddress],\n    {\n      fetcher: fetcher(library, Vault),\n    }\n  );\n\n  const mycPrice = useMemo(() => {\n    if (uniPoolSlot0 && ethPrice) {\n      const tokenA = new UniToken(ARBITRUM, ethAddress, 18, \"SYMBOL\", \"NAME\");\n\n      const mycAddress = getContract(ARBITRUM, \"MYC\");\n      const tokenB = new UniToken(ARBITRUM, mycAddress, 18, \"SYMBOL\", \"NAME\");\n\n      const pool = new Pool(\n        tokenA, // tokenA\n        tokenB, // tokenB\n        10000, // fee\n        uniPoolSlot0.sqrtPriceX96, // sqrtRatioX96\n        1, // liquidity\n        uniPoolSlot0.tick, // tickCurrent\n        []\n      );\n\n      const poolTokenPrice = pool.priceOf(tokenB).toSignificant(6);\n      const poolTokenPriceAmount = parseValue(poolTokenPrice, 18);\n      return poolTokenPriceAmount.mul(ethPrice).div(expandDecimals(1, 18));\n    }\n  }, [ethPrice, uniPoolSlot0, ethAddress]);\n\n  const mutate = useCallback(() => {\n    updateUniPoolSlot0(undefined, true);\n    updateEthPrice(undefined, true);\n  }, [updateEthPrice, updateUniPoolSlot0]);\n\n  return { data: mycPrice, mutate };\n}\n\nexport async function approvePlugin(\n  chainId,\n  pluginAddress,\n  { library, pendingTxns, setPendingTxns, sentMsg, failMsg }\n) {\n  const routerAddress = getContract(chainId, \"Router\");\n  const contract = new ethers.Contract(routerAddress, Router.abi, library.getSigner());\n  return callContract(chainId, contract, \"approvePlugin\", [pluginAddress], {\n    sentMsg,\n    failMsg,\n    pendingTxns,\n    setPendingTxns,\n  });\n}\n\nexport async function createSwapOrder(\n  chainId,\n  library,\n  path,\n  amountIn,\n  minOut,\n  triggerRatio,\n  nativeTokenAddress,\n  opts = {}\n) {\n  const executionFee = getConstant(chainId, \"SWAP_ORDER_EXECUTION_GAS_FEE\");\n  const triggerAboveThreshold = false;\n  let shouldWrap = false;\n  let shouldUnwrap = false;\n  opts.value = executionFee;\n\n  if (path[0] === AddressZero) {\n    shouldWrap = true;\n    opts.value = opts.value.add(amountIn);\n  }\n  if (path[path.length - 1] === AddressZero) {\n    shouldUnwrap = true;\n  }\n  path = replaceNativeTokenAddress(path, nativeTokenAddress);\n\n  const params = [path, amountIn, minOut, triggerRatio, triggerAboveThreshold, executionFee, shouldWrap, shouldUnwrap];\n\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n\n  return callContract(chainId, contract, \"createSwapOrder\", params, opts);\n}\n\nexport async function createIncreaseOrder(\n  chainId,\n  library,\n  nativeTokenAddress,\n  path,\n  amountIn,\n  indexTokenAddress,\n  minOut,\n  sizeDelta,\n  collateralTokenAddress,\n  isLong,\n  triggerPrice,\n  opts = {}\n) {\n  invariant(!isLong || indexTokenAddress === collateralTokenAddress, \"invalid token addresses\");\n  invariant(indexTokenAddress !== AddressZero, \"indexToken is 0\");\n  invariant(collateralTokenAddress !== AddressZero, \"collateralToken is 0\");\n\n  const fromETH = path[0] === AddressZero;\n\n  path = replaceNativeTokenAddress(path, nativeTokenAddress);\n  const shouldWrap = fromETH;\n  const triggerAboveThreshold = !isLong;\n  const executionFee = getConstant(chainId, \"INCREASE_ORDER_EXECUTION_GAS_FEE\");\n\n  const params = [\n    path,\n    amountIn,\n    indexTokenAddress,\n    minOut,\n    sizeDelta,\n    collateralTokenAddress,\n    isLong,\n    triggerPrice,\n    triggerAboveThreshold,\n    executionFee,\n    shouldWrap,\n  ];\n\n  if (!opts.value) {\n    opts.value = fromETH ? amountIn.add(executionFee) : executionFee;\n  }\n\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n\n  return callContract(chainId, contract, \"createIncreaseOrder\", params, opts);\n}\n\nexport async function createDecreaseOrder(\n  chainId,\n  library,\n  indexTokenAddress,\n  sizeDelta,\n  collateralTokenAddress,\n  collateralDelta,\n  isLong,\n  triggerPrice,\n  triggerAboveThreshold,\n  opts = {}\n) {\n  invariant(!isLong || indexTokenAddress === collateralTokenAddress, \"invalid token addresses\");\n  invariant(indexTokenAddress !== AddressZero, \"indexToken is 0\");\n  invariant(collateralTokenAddress !== AddressZero, \"collateralToken is 0\");\n\n  const executionFee = getConstant(chainId, \"DECREASE_ORDER_EXECUTION_GAS_FEE\");\n\n  const params = [\n    indexTokenAddress,\n    sizeDelta,\n    collateralTokenAddress,\n    collateralDelta,\n    isLong,\n    triggerPrice,\n    triggerAboveThreshold,\n  ];\n  opts.value = executionFee;\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n\n  return callContract(chainId, contract, \"createDecreaseOrder\", params, opts);\n}\n\nexport async function cancelSwapOrder(chainId, library, index, opts) {\n  const params = [index];\n  const method = \"cancelSwapOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n\n  return callContract(chainId, contract, method, params, opts);\n}\n\nexport async function cancelDecreaseOrder(chainId, library, index, opts) {\n  const params = [index];\n  const method = \"cancelDecreaseOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n\n  return callContract(chainId, contract, method, params, opts);\n}\n\nexport async function cancelIncreaseOrder(chainId, library, index, opts) {\n  const params = [index];\n  const method = \"cancelIncreaseOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n\n  return callContract(chainId, contract, method, params, opts);\n}\n\nexport async function updateDecreaseOrder(\n  chainId,\n  library,\n  index,\n  collateralDelta,\n  sizeDelta,\n  triggerPrice,\n  triggerAboveThreshold,\n  opts\n) {\n  const params = [index, collateralDelta, sizeDelta, triggerPrice, triggerAboveThreshold];\n  const method = \"updateDecreaseOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n\n  return callContract(chainId, contract, method, params, opts);\n}\n\nexport async function updateIncreaseOrder(\n  chainId,\n  library,\n  index,\n  sizeDelta,\n  triggerPrice,\n  triggerAboveThreshold,\n  opts\n) {\n  const params = [index, sizeDelta, triggerPrice, triggerAboveThreshold];\n  const method = \"updateIncreaseOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n\n  return callContract(chainId, contract, method, params, opts);\n}\n\nexport async function updateSwapOrder(chainId, library, index, minOut, triggerRatio, triggerAboveThreshold, opts) {\n  const params = [index, minOut, triggerRatio, triggerAboveThreshold];\n  const method = \"updateSwapOrder\";\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const contract = new ethers.Contract(orderBookAddress, OrderBook.abi, library.getSigner());\n\n  return callContract(chainId, contract, method, params, opts);\n}\n\nexport async function _executeOrder(chainId, library, method, account, index, feeReceiver, opts) {\n  const params = [account, index, feeReceiver];\n  const positionManagerAddress = getContract(chainId, \"PositionManager\");\n  const contract = new ethers.Contract(positionManagerAddress, PositionManager.abi, library.getSigner());\n  return callContract(chainId, contract, method, params, opts);\n}\n\nexport function executeSwapOrder(chainId, library, account, index, feeReceiver, opts) {\n  return _executeOrder(chainId, library, \"executeSwapOrder\", account, index, feeReceiver, opts);\n}\n\nexport function executeIncreaseOrder(chainId, library, account, index, feeReceiver, opts) {\n  return _executeOrder(chainId, library, \"executeIncreaseOrder\", account, index, feeReceiver, opts);\n}\n\nexport function executeDecreaseOrder(chainId, library, account, index, feeReceiver, opts) {\n  return _executeOrder(chainId, library, \"executeDecreaseOrder\", account, index, feeReceiver, opts);\n}\n\nconst NOT_ENOUGH_FUNDS = \"NOT_ENOUGH_FUNDS\";\nconst USER_DENIED = \"USER_DENIED\";\nconst SLIPPAGE = \"SLIPPAGE\";\nconst TX_ERROR_PATTERNS = {\n  [NOT_ENOUGH_FUNDS]: [\"not enough funds for gas\", \"failed to execute call with revert code InsufficientGasFunds\"],\n  [USER_DENIED]: [\"User denied transaction signature\"],\n  [SLIPPAGE]: [\"Router: mark price lower than limit\", \"Router: mark price higher than limit\"],\n};\nexport function extractError(ex) {\n  if (!ex) {\n    return [];\n  }\n  const message = ex.data?.message || ex.message;\n  if (!message) {\n    return [];\n  }\n  for (const [type, patterns] of Object.entries(TX_ERROR_PATTERNS)) {\n    for (const pattern of patterns) {\n      if (message.includes(pattern)) {\n        return [message, type];\n      }\n    }\n  }\n  return [message];\n}\n\nfunction ToastifyDebug(props) {\n  const [open, setOpen] = useState(false);\n  return (\n    <div className=\"Toastify-debug\">\n      {!open && (\n        <span className=\"Toastify-debug-button\" onClick={() => setOpen(true)}>\n          Show error\n        </span>\n      )}\n      {open && props.children}\n    </div>\n  );\n}\n\nexport function useStakingApr(mycPrice, ethPrice) {\n  const [stakingApr, setStakingApr] = useState(null);\n\n  const { data: currentCycle } = useSWR(\n    [`useStakingApr:currentCycle:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"cycle\"],\n    {\n      fetcher: fetcher(undefined, LentMyc),\n    }\n  );\n\n  const cycle = currentCycle?.toNumber();\n\n  const { data: mycAssetsInStaking } = useSWR(\n    cycle\n      ? [`useStakingApr:mycInStaking:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"totalAssets\"]\n      : null,\n    {\n      fetcher: fetcher(undefined, LentMyc),\n    }\n  );\n\n  const { data: pendingMycDepositsInStaking } = useSWR(\n    cycle\n      ? [`useStakingApr:pendingMycInStaking:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"pendingDeposits\"]\n      : null,\n    {\n      fetcher: fetcher(undefined, LentMyc),\n    }\n  );\n\n  const { data: prev } = useSWR(\n    cycle\n      ? [`useStakingApr:prev:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"cycleCumulativeEthRewards\"]\n      : null,\n    {\n      fetcher: fetcher(undefined, LentMyc, [cycle - 2]),\n    }\n  );\n\n  const { data: current } = useSWR(\n    cycle\n      ? [`useStakingApr:current:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"cycleCumulativeEthRewards\"]\n      : null,\n    {\n      fetcher: fetcher(undefined, LentMyc, [cycle - 1]),\n    }\n  );\n\n  const { data: cycleAssets } = useSWR(\n    cycle\n      ? [`useStakingApr:cycleAssets:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"cycleSharesAndAssets\"]\n      : null,\n    {\n      fetcher: fetcher(undefined, LentMyc, [cycle - 1]),\n    }\n  );\n\n  useEffect(() => {\n    const values = [mycAssetsInStaking, pendingMycDepositsInStaking, ethPrice, mycPrice, current, prev, cycleAssets];\n    if (values.every(Boolean)) {\n      const cycleEthRewardsPerShare = current.sub(prev);\n      const cycleSupply = cycleAssets[0];\n      const cycleEthRewards = cycleEthRewardsPerShare.mul(cycleSupply).div(ethers.BigNumber.from(10).pow(18));\n      const ethDistributed = cycleEthRewards;\n      const mycDeposited = mycAssetsInStaking.add(pendingMycDepositsInStaking).div(expandDecimals(1, ETH_DECIMALS));\n      const mycUSDValue = mycDeposited.mul(mycPrice);\n      const ethUSDValue = ethDistributed.mul(ethPrice);\n\n      const aprPercentageForCycle = ethers.utils.formatUnits(ethUSDValue.div(mycUSDValue));\n      const aprPercentageYearly = parseFloat(aprPercentageForCycle) * FORTNIGHTS_IN_YEAR * 100;\n      setStakingApr(aprPercentageYearly.toFixed(2));\n    }\n  }, [mycAssetsInStaking, pendingMycDepositsInStaking, ethPrice, mycPrice, current, prev, cycleAssets]);\n\n  return stakingApr;\n}\n\nexport function useTotalStaked() {\n  const [totalStakedMyc, setTotalStakedMyc] = useState(null);\n\n  const { data: mycAssetsInStaking } = useSWR(\n    [`DashboardV2:mycInStaking:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"totalAssets\"],\n    {\n      fetcher: fetcher(undefined, LentMyc),\n    }\n  );\n\n  const { data: pendingMycDepositsInStaking } = useSWR(\n    [`DashboardV2:pendingMycInStaking:${ARBITRUM}`, ARBITRUM, getContract(ARBITRUM, \"LentMYC\"), \"pendingDeposits\"],\n    {\n      fetcher: fetcher(undefined, LentMyc),\n    }\n  );\n\n  useEffect(() => {\n    if (mycAssetsInStaking && pendingMycDepositsInStaking && !totalStakedMyc) {\n      const mycDeposited = mycAssetsInStaking.add(pendingMycDepositsInStaking).div(expandDecimals(1, ETH_DECIMALS));\n\n      if (!totalStakedMyc) {\n        setTotalStakedMyc(mycDeposited);\n      }\n    }\n  }, [mycAssetsInStaking, pendingMycDepositsInStaking, totalStakedMyc]);\n\n  return totalStakedMyc;\n}\n\nexport async function callContract(chainId, contract, method, params, opts) {\n  try {\n    if (!Array.isArray(params) && typeof params === \"object\" && opts === undefined) {\n      opts = params;\n      params = [];\n    }\n    if (!opts) {\n      opts = {};\n    }\n\n    const txnOpts = {};\n\n    if (opts.value) {\n      txnOpts.value = opts.value;\n    }\n\n    txnOpts.gasLimit = opts.gasLimit ? opts.gasLimit : await getGasLimit(contract, method, params, opts.value);\n\n    await setGasPrice(txnOpts, contract.provider, chainId);\n\n    const res = await contract[method](...params, txnOpts);\n    const txUrl = getExplorerUrl(chainId) + \"tx/\" + res.hash;\n    const sentMsg = opts.sentMsg || \"Transaction sent.\";\n    helperToast.success(\n      <div>\n        {sentMsg}{\" \"}\n        <a href={txUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n          View status.\n        </a>\n        <br />\n      </div>\n    );\n    if (opts.setPendingTxns) {\n      const pendingTxn = {\n        hash: res.hash,\n        message: opts.successMsg || \"Transaction completed!\",\n      };\n\n      opts.setPendingTxns((pendingTxns) => [...pendingTxns, pendingTxn]);\n    }\n    return res;\n  } catch (e) {\n    let failMsg;\n    const [message, type] = extractError(e);\n    switch (type) {\n      case NOT_ENOUGH_FUNDS:\n        failMsg = (\n          <div>\n            There is not enough ETH in your account on Arbitrum to send this transaction.\n            <br />\n            <br />\n            <a href={\"https://arbitrum.io/bridge-tutorial/\"} target=\"_blank\" rel=\"noopener noreferrer\">\n              Bridge ETH to Arbitrum\n            </a>\n          </div>\n        );\n        break;\n      case USER_DENIED:\n        failMsg = \"Transaction was cancelled.\";\n        break;\n      case SLIPPAGE:\n        failMsg =\n          'The mark price has changed, consider increasing your Allowed Slippage by clicking on the \"...\" icon next to your address.';\n        break;\n      default:\n        failMsg = (\n          <div>\n            {opts.failMsg || \"Transaction failed.\"}\n            <br />\n            {message && <ToastifyDebug>{message}</ToastifyDebug>}\n          </div>\n        );\n    }\n    helperToast.error(failMsg);\n    throw e;\n  }\n}\n\nexport function useMlpPrices(chainId, currentMlpPrice) {\n  const query = gql(`{\n    mlpStats(\n      first: 1000,\n      orderBy: id,\n      orderDirection: asc,\n      where: { period: daily }\n    ) {\n      id\n      aumInUsdg\n      mlpSupply\n      distributedUsd\n      distributedEth\n    },\n    feeStats (\n      first: 1000,\n      orderBy: id,\n      orderDirection: asc,\n      where: { period: daily }\n    ) {\n      id\n      margin\n      marginAndLiquidation\n      swap\n      liquidation\n      mint\n      burn\n    }\n  }`);\n\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    getMycGraphClient(chainId).query({ query }).then(setData).catch(console.warn);\n  }, [setData, query, chainId]);\n\n  let cumulativeDistributedUsdPerMlp = 0;\n  let cumulativeDistributedEthPerMlp = 0;\n  const mlpChartData = useMemo(() => {\n    if (!data) {\n      return null;\n    }\n\n    let prevMlpSupply;\n    let prevAum;\n\n    const feeStatsById = data.data.feeStats.reduce(\n      (o, stat) => ({\n        ...o,\n        [stat.id]: ethers.BigNumber.from(stat.marginAndLiquidation).add(stat.swap).add(stat.mint).add(stat.burn),\n      }),\n      {}\n    );\n\n    let cumulativeFees = ethers.BigNumber.from(0);\n    let ret = data.data.mlpStats\n      .filter((item) => item.id % 86400 === 0)\n      .reduce((memo, item, i) => {\n        const last = memo[memo.length - 1];\n\n        const aum = Number(item.aumInUsdg) / 1e18;\n        const mlpSupply = Number(item.mlpSupply) / 1e18;\n\n        const distributedUsd = Number(item.distributedUsd) / 1e30;\n        const distributedUsdPerMlp = distributedUsd / mlpSupply || 0;\n        cumulativeDistributedUsdPerMlp += distributedUsdPerMlp;\n\n        const distributedEth = Number(item.distributedEth) / 1e18;\n        const distributedEthPerMlp = distributedEth / mlpSupply || 0;\n        cumulativeDistributedEthPerMlp += distributedEthPerMlp;\n\n        const feeStat = feeStatsById[item.id] ?? ethers.BigNumber.from(0);\n        cumulativeFees = cumulativeFees.add(feeStat);\n        const totalFees = parseFloat(ethers.utils.formatUnits(cumulativeFees, USD_DECIMALS));\n\n        const mlpPrice = aum / mlpSupply;\n        const mlpPriceWithFees = (totalFees + aum) / mlpSupply;\n\n        const timestamp = parseInt(item.id);\n\n        const newItem = {\n          time: timestamp,\n          aum,\n          mlpSupply,\n          value: mlpPrice,\n          mlpPriceWithFees: mlpPriceWithFees,\n          cumulativeDistributedEthPerMlp,\n          cumulativeDistributedUsdPerMlp,\n          distributedUsdPerMlp,\n          distributedEthPerMlp,\n        };\n        if (i === data.data.mlpStats.length - 1 && currentMlpPrice) {\n          newItem.mlpPriceWithFees = Number.isNaN(mlpPrice)\n            ? parseFloat(ethers.utils.formatUnits(currentMlpPrice, USD_DECIMALS))\n            : mlpPriceWithFees;\n          newItem.value = parseFloat(ethers.utils.formatUnits(currentMlpPrice, USD_DECIMALS));\n        }\n\n        if (last && last.timestamp === timestamp) {\n          memo[memo.length - 1] = newItem;\n        } else {\n          memo.push(newItem);\n        }\n        return memo;\n      }, [])\n      .map((item) => {\n        let { mlpSupply, aum } = item;\n        if (!mlpSupply) {\n          mlpSupply = prevMlpSupply;\n        }\n        if (!aum) {\n          aum = prevAum;\n        }\n        item.mlpSupplyChange = prevMlpSupply ? ((mlpSupply - prevMlpSupply) / prevMlpSupply) * 100 : 0;\n        if (item.mlpSupplyChange > 1000) item.mlpSupplyChange = 0;\n        item.aumChange = prevAum ? ((aum - prevAum) / prevAum) * 100 : 0;\n        if (item.aumChange > 1000) item.aumChange = 0;\n        prevMlpSupply = mlpSupply;\n        prevAum = aum;\n        return item;\n      });\n\n    // ret = fillNa(ret);\n    return ret;\n  }, [data, currentMlpPrice]);\n\n  return mlpChartData;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}