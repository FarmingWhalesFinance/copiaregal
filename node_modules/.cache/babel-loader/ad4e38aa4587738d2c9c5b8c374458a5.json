{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\copiaswaps-client\\\\swaps-client\\\\src\\\\views\\\\Referrals\\\\ReferralLeaderboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport cx from \"classnames\";\nimport * as Styles from \"./ReferralLeaderboard.styles\";\nimport { USD_DECIMALS, formatAmount } from \"../../Helpers\";\nimport { TIER_DISCOUNT_INFO } from \"../../config/referrals\";\nimport { getTierIdDisplay } from \"../../utils/referrals\";\nimport liveIcon from \"../../img/live.svg\";\nimport { RoundDropdown } from \"../../components/RewardsRoundSelect/RewardsRoundSelect\";\nimport { decodeReferralCode } from \"../../Api/referrals\";\nimport { competitionPodiumContent } from \"./presets\";\nimport { numberToOrdinal } from \"../../utils/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TABLE_HEADINGS = [\"Rank\", \"Referral Code\", \"Tier\", \"Traders Referred\", \"Number of Trades\", \"Total Volume Referred (USD)\", \"Rewards (USD)\"];\nconst COMPETITION_ROUND = 7;\nexport default function ReferralLeaderboard(props) {\n  _s();\n\n  const [isPodiumShown, setIsPodiumShown] = useState(true);\n  const {\n    allRoundsRewardsData,\n    allUsersRoundData,\n    selectedRound,\n    setSelectedRound,\n    rewardsMessage,\n    trackAction,\n    userRoundData\n  } = props;\n\n  const togglePodium = () => {\n    setIsPodiumShown(!isPodiumShown);\n  };\n\n  const modifiedAllRoundsRewardsData = allRoundsRewardsData === null || allRoundsRewardsData === void 0 ? void 0 : allRoundsRewardsData.map(data => {\n    if ((data === null || data === void 0 ? void 0 : data.round) === COMPETITION_ROUND) {\n      return { ...data,\n        customRoundText: \"Competition Round\"\n      };\n    } else {\n      return data;\n    }\n  });\n  const modifiedRewardsMessage = [COMPETITION_ROUND, \"latest\"].includes(selectedRound) ? \"Competition Round\" : rewardsMessage;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Styles.CompetitionRewardsToggle, {\n      onClick: togglePodium,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Referral Competition Rewards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Styles.ChevronDown, {\n        isOpen: isPodiumShown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styles.CompetitionRewardsBanner, {\n      isOpen: isPodiumShown,\n      children: [/*#__PURE__*/_jsxDEV(Styles.PodiumBackground, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Styles.CompetitionRewardsContainer, {\n        className: \"desktop\",\n        children: competitionPodiumContent.map(_ref => {\n          let {\n            icon,\n            prize,\n            eligibility,\n            className,\n            mobileOnly\n          } = _ref;\n          if (!mobileOnly) return /*#__PURE__*/_jsxDEV(Styles.PodiumItem, {\n            className: className,\n            children: [icon && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: icon,\n              alt: \"podium icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: prize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), eligibility]\n          }, prize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Styles.CompetitionRewardsContainer, {\n        className: \"mobile\",\n        children: competitionPodiumContent.map(_ref2 => {\n          let {\n            icon,\n            prize,\n            eligibility,\n            className,\n            desktopOnly\n          } = _ref2;\n          if (!desktopOnly) return /*#__PURE__*/_jsxDEV(Styles.PodiumItem, {\n            className: className,\n            children: [icon && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: icon,\n              alt: \"podium icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: prize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), eligibility]\n          }, prize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserStatsRow, {\n      userRoundData: userRoundData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styles.FlexBetweenContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Styles.LeaderboardTitle, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: liveIcon,\n          alt: \"Live\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"green\",\n          children: \"Live\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 45\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Referrals Leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoundDropdown, {\n        allRoundsRewardsData: modifiedAllRoundsRewardsData,\n        setSelectedRound: setSelectedRound,\n        rewardsMessage: modifiedRewardsMessage,\n        trackAction: trackAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styles.RewardsTableContainer, {\n      className: \"referrals-table\",\n      children: /*#__PURE__*/_jsxDEV(Styles.RewardsTable, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: TABLE_HEADINGS.map(heading => /*#__PURE__*/_jsxDEV(Styles.RewardsTableHeading, {\n              children: heading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allUsersRoundData === null || allUsersRoundData === void 0 ? void 0 : allUsersRoundData.map((row, index) => {\n            if (row.volume.gt(0)) {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                row: row,\n                isUserRow: (row === null || row === void 0 ? void 0 : row.position) === (userRoundData === null || userRoundData === void 0 ? void 0 : userRoundData.position),\n                isTable: true\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 24\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ReferralLeaderboard, \"TWWj4GOAFcfE4sQXk5lUf2az+04=\");\n\n_c = ReferralLeaderboard;\n\nconst TableRow = _ref3 => {\n  let {\n    row,\n    isUserRow,\n    isTable\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Styles.TableRow, {\n    isUserRow: isUserRow,\n    className: cx({\n      highlight: isUserRow,\n      \"no-border\": !isTable\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Styles.TableCell, {\n      children: numberToOrdinal(row.position)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Styles.TableCell, {\n      children: row.referralCode ? decodeReferralCode(row.referralCode) : `-`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Styles.TableCell, {\n      className: \"tier\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: `Tier ${getTierIdDisplay(row.tier)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${TIER_DISCOUNT_INFO[row.tier]}% discount`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 59\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Styles.TableCell, {\n      children: row.tradersReferred\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Styles.TableCell, {\n      children: row.numberOfTrades\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Styles.TableCell, {\n      children: [\"$\", formatAmount(row.volume, USD_DECIMALS, 2, true, \"0.00\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Styles.TableCell, {\n      children: [\"$\", formatAmount(row.totalRewardUsd, USD_DECIMALS, 2, true, \"0.00\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = TableRow;\n\nconst UserStatsRow = _ref4 => {\n  let {\n    userRoundData\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your rewards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Styles.RewardsTableContainer, {\n      children: userRoundData !== null && userRoundData !== void 0 && userRoundData.position ? /*#__PURE__*/_jsxDEV(Styles.RewardsTable, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: TABLE_HEADINGS.map(heading => /*#__PURE__*/_jsxDEV(Styles.RewardsTableHeading, {\n              children: heading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            row: userRoundData,\n            isUserRow: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Styles.NoData, {\n        children: \"No rewards data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = UserStatsRow;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ReferralLeaderboard\");\n$RefreshReg$(_c2, \"TableRow\");\n$RefreshReg$(_c3, \"UserStatsRow\");","map":{"version":3,"names":["useState","cx","Styles","USD_DECIMALS","formatAmount","TIER_DISCOUNT_INFO","getTierIdDisplay","RoundDropdown","decodeReferralCode","competitionPodiumContent","numberToOrdinal","TABLE_HEADINGS","COMPETITION_ROUND","ReferralLeaderboard","props","isPodiumShown","setIsPodiumShown","allRoundsRewardsData","allUsersRoundData","selectedRound","setSelectedRound","rewardsMessage","trackAction","userRoundData","togglePodium","modifiedAllRoundsRewardsData","map","data","round","customRoundText","modifiedRewardsMessage","includes","icon","prize","eligibility","className","mobileOnly","desktopOnly","liveIcon","heading","row","index","volume","gt","position","TableRow","isUserRow","isTable","highlight","referralCode","tier","tradersReferred","numberOfTrades","totalRewardUsd","UserStatsRow"],"sources":["C:/Users/rober/Documents/copiaswaps-client/swaps-client/src/views/Referrals/ReferralLeaderboard.js"],"sourcesContent":["import { useState } from \"react\";\nimport cx from \"classnames\";\nimport * as Styles from \"./ReferralLeaderboard.styles\";\nimport { USD_DECIMALS, formatAmount } from \"../../Helpers\";\nimport { TIER_DISCOUNT_INFO } from \"../../config/referrals\";\nimport { getTierIdDisplay } from \"../../utils/referrals\";\nimport liveIcon from \"../../img/live.svg\";\nimport { RoundDropdown } from \"../../components/RewardsRoundSelect/RewardsRoundSelect\";\nimport { decodeReferralCode } from \"../../Api/referrals\";\nimport { competitionPodiumContent } from \"./presets\";\nimport { numberToOrdinal } from \"../../utils/common\";\n\n\nconst TABLE_HEADINGS = [\n  \"Rank\",\n  \"Referral Code\",\n  \"Tier\",\n  \"Traders Referred\",\n  \"Number of Trades\",\n  \"Total Volume Referred (USD)\",\n  \"Rewards (USD)\",\n];\n\nconst COMPETITION_ROUND = 7;\n\nexport default function ReferralLeaderboard(props) {\n  const [isPodiumShown, setIsPodiumShown] = useState(true);\n  const {\n    allRoundsRewardsData,\n    allUsersRoundData,\n    selectedRound,\n    setSelectedRound,\n    rewardsMessage,\n    trackAction,\n    userRoundData,\n  } = props;\n\n  const togglePodium = () => {\n    setIsPodiumShown(!isPodiumShown);\n  };\n\n  const modifiedAllRoundsRewardsData = allRoundsRewardsData?.map((data) => {\n    if (data?.round === COMPETITION_ROUND) {\n      return {\n        ...data,\n        customRoundText: \"Competition Round\",\n      };\n    } else {\n      return data;\n    }\n  });\n\n  const modifiedRewardsMessage = [COMPETITION_ROUND, \"latest\"].includes(selectedRound)\n    ? \"Competition Round\"\n    : rewardsMessage;\n\n  return (\n    <>\n      <Styles.CompetitionRewardsToggle onClick={togglePodium}>\n        <span>Referral Competition Rewards</span>\n        <Styles.ChevronDown isOpen={isPodiumShown} />\n      </Styles.CompetitionRewardsToggle>\n      <Styles.CompetitionRewardsBanner isOpen={isPodiumShown}>\n        <Styles.PodiumBackground />\n        <Styles.CompetitionRewardsContainer className=\"desktop\">\n          {competitionPodiumContent.map(({ icon, prize, eligibility, className, mobileOnly }) => {\n            if (!mobileOnly)\n              return (\n                <Styles.PodiumItem className={className} key={prize}>\n                  {icon && <img src={icon} alt=\"podium icon\" />}\n                  <h3>{prize}</h3>\n                  {eligibility}\n                </Styles.PodiumItem>\n              );\n          })}\n        </Styles.CompetitionRewardsContainer>\n        <Styles.CompetitionRewardsContainer className=\"mobile\">\n          {competitionPodiumContent.map(({ icon, prize, eligibility, className, desktopOnly }) => {\n            if (!desktopOnly)\n              return (\n                <Styles.PodiumItem className={className} key={prize}>\n                  {icon && <img src={icon} alt=\"podium icon\" />}\n                  <h3>{prize}</h3>\n                  {eligibility}\n                </Styles.PodiumItem>\n              );\n          })}\n        </Styles.CompetitionRewardsContainer>\n      </Styles.CompetitionRewardsBanner>\n      <UserStatsRow userRoundData={userRoundData} />\n      <Styles.FlexBetweenContainer>\n        <Styles.LeaderboardTitle>\n          <img src={liveIcon} alt=\"Live\" /> <span className=\"green\">Live&nbsp;</span> <span>Referrals Leaderboard</span>\n        </Styles.LeaderboardTitle>\n        <RoundDropdown\n          allRoundsRewardsData={modifiedAllRoundsRewardsData}\n          setSelectedRound={setSelectedRound}\n          rewardsMessage={modifiedRewardsMessage}\n          trackAction={trackAction}\n        />\n      </Styles.FlexBetweenContainer>\n      <Styles.RewardsTableContainer className=\"referrals-table\">\n        <Styles.RewardsTable>\n          <thead>\n            <tr>\n              {TABLE_HEADINGS.map((heading) => (\n                <Styles.RewardsTableHeading>{heading}</Styles.RewardsTableHeading>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {allUsersRoundData?.map((row, index) => {\n              if (row.volume.gt(0)) {\n                return <TableRow key={index} row={row} isUserRow={row?.position === userRoundData?.position} isTable />;\n              } else {\n                return <></>;\n              }\n            })}\n          </tbody>\n        </Styles.RewardsTable>\n      </Styles.RewardsTableContainer>\n    </>\n  );\n}\n\nconst TableRow = ({ row, isUserRow, isTable }) => (\n  <Styles.TableRow\n    isUserRow={isUserRow}\n    className={cx({\n      highlight: isUserRow,\n      \"no-border\": !isTable,\n    })}\n  >\n    <Styles.TableCell>{numberToOrdinal(row.position)}</Styles.TableCell>\n    <Styles.TableCell>{row.referralCode ? decodeReferralCode(row.referralCode) : `-`}</Styles.TableCell>\n    <Styles.TableCell className=\"tier\">\n      <span>{`Tier ${getTierIdDisplay(row.tier)}`}</span> <span>{`${TIER_DISCOUNT_INFO[row.tier]}% discount`}</span>\n    </Styles.TableCell>\n    <Styles.TableCell>{row.tradersReferred}</Styles.TableCell>\n    <Styles.TableCell>{row.numberOfTrades}</Styles.TableCell>\n    <Styles.TableCell>${formatAmount(row.volume, USD_DECIMALS, 2, true, \"0.00\")}</Styles.TableCell>\n    <Styles.TableCell>${formatAmount(row.totalRewardUsd, USD_DECIMALS, 2, true, \"0.00\")}</Styles.TableCell>\n  </Styles.TableRow>\n);\n\nconst UserStatsRow = ({ userRoundData }) => (\n  <>\n    <span>Your rewards</span>\n    <Styles.RewardsTableContainer>\n      {userRoundData?.position ? (\n        <Styles.RewardsTable>\n          <thead>\n            <tr>\n              {TABLE_HEADINGS.map((heading) => (\n                <Styles.RewardsTableHeading>{heading}</Styles.RewardsTableHeading>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            <TableRow row={userRoundData} isUserRow />\n          </tbody>\n        </Styles.RewardsTable>\n      ) : (\n        <Styles.NoData>No rewards data available</Styles.NoData>\n      )}\n    </Styles.RewardsTableContainer>\n  </>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}