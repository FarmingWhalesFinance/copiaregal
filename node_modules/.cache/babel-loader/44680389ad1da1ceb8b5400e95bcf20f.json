{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\copiaswaps-client\\\\swaps-client\\\\src\\\\views\\\\Referrals\\\\CreateCodeModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { bigNumberify, helperToast } from \"../../Helpers\";\nimport { encodeReferralCode, getReferralCodeTakenStatus, registerReferralCode } from '../../Api/referrals';\nimport * as Styles from \"./Referrals.styles\";\nimport useDebounce from \"../../hooks/useDebounce\";\nimport { getCodeError } from \"../../utils/referrals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getSampleReferrerStat = code => {\n  return {\n    discountUsd: bigNumberify(0),\n    referralCode: code,\n    totalRebateUsd: bigNumberify(0),\n    tradedReferralsCount: 0,\n    registeredReferralsCount: 0,\n    trades: 0,\n    volume: bigNumberify(0),\n    time: Date.now()\n  };\n};\n\nexport default function CreateCodeModal(props) {\n  _s();\n\n  const {\n    account,\n    chainId,\n    library,\n    active,\n    isCreateCodeModalVisible,\n    setIsCreateCodeModalVisible,\n    recentlyAddedCodes,\n    setRecentlyAddedCodes,\n    connectWallet,\n    pendingTxns,\n    setPendingTxns\n  } = props;\n  const [referralCode, setReferralCode] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [referralCodeCheckStatus, setReferralCodeCheckStatus] = useState(\"ok\");\n  const debouncedReferralCode = useDebounce(referralCode, 300);\n\n  const close = () => {\n    if (!isSubmitting) {\n      setReferralCode(\"\");\n      setIsSubmitting(false);\n      setError(\"\");\n      setIsCreateCodeModalVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    let cancelled = false;\n\n    const checkCodeTakenStatus = async () => {\n      if (error || error.length > 0) {\n        setReferralCodeCheckStatus(\"ok\");\n        return;\n      }\n\n      const {\n        status: takenStatus\n      } = await getReferralCodeTakenStatus(account, debouncedReferralCode, chainId); // ignore the result if the referral code to check has changed\n\n      if (cancelled) {\n        return;\n      }\n\n      if (takenStatus === \"none\") {\n        setReferralCodeCheckStatus(\"ok\");\n      } else {\n        setReferralCodeCheckStatus(\"taken\");\n      }\n    };\n\n    setReferralCodeCheckStatus(\"checking\");\n    checkCodeTakenStatus();\n    return () => {\n      cancelled = true;\n    };\n  }, [account, debouncedReferralCode, error, chainId]);\n\n  function getButtonError() {\n    if (!referralCode || referralCode.length === 0) {\n      return \"Enter a code\";\n    }\n\n    if (referralCodeCheckStatus === \"taken\") {\n      return \"Code already taken\";\n    }\n\n    if (referralCodeCheckStatus === \"checking\") {\n      return \"Checking code...\";\n    }\n\n    return false;\n  }\n\n  const buttonError = getButtonError();\n\n  function getPrimaryText() {\n    if (buttonError) {\n      return buttonError;\n    }\n\n    if (isSubmitting) {\n      return `Creating...`;\n    }\n\n    return \"Create\";\n  }\n\n  function isPrimaryEnabled() {\n    if (buttonError) {\n      return false;\n    }\n\n    if (error || isSubmitting) {\n      return false;\n    }\n\n    return true;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsSubmitting(true);\n    const {\n      status: takenStatus\n    } = await getReferralCodeTakenStatus(account, referralCode, chainId);\n\n    if (takenStatus === \"taken\") {\n      setError(`Referral code is taken.`);\n      setIsSubmitting(false);\n    }\n\n    if (takenStatus === \"none\") {\n      setIsSubmitting(true);\n\n      try {\n        const referralCodeHex = encodeReferralCode(referralCode);\n        const tx = await registerReferralCode(chainId, referralCodeHex, {\n          library,\n          sentMsg: \"Referral code submitted!\",\n          failMsg: \"Referral code creation failed.\",\n          pendingTxns,\n          setPendingTxns\n        });\n        const receipt = await tx.wait();\n\n        if (receipt.status === 1) {\n          recentlyAddedCodes.push(getSampleReferrerStat(referralCode));\n          helperToast.success(\"Referral code created!\");\n          setRecentlyAddedCodes(recentlyAddedCodes);\n          setReferralCode(\"\");\n          setIsSubmitting(false);\n          close();\n        } else {\n          setIsSubmitting(false);\n        }\n      } catch (err) {\n        console.error(err);\n        setIsSubmitting(false);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Styles.CodeModal, {\n    isVisible: isCreateCodeModalVisible,\n    setIsVisible: close,\n    label: \"Create Referral Code\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-action\",\n        children: active ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Styles.CodeInput, {\n            className: `text-input ${!error && \"mb-sm\"}`,\n            type: \"text\",\n            placeholder: \"Enter a code\",\n            maxLength: \"20\",\n            pattern: \"^[a-zA-Z0-9_]*$\",\n            disabled: isSubmitting,\n            value: referralCode,\n            onChange: _ref => {\n              let {\n                target\n              } = _ref;\n              let {\n                value\n              } = target;\n              setReferralCode(value);\n              setError(getCodeError(value));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Styles.ErrorText, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Styles.CodeButton, {\n            className: \"default-btn\",\n            onClick: handleSubmit,\n            disabled: !isPrimaryEnabled(),\n            children: getPrimaryText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"App-cta Exchange-swap-button\",\n          onClick: connectWallet,\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateCodeModal, \"QEB2I1dzGRMhH9MsyA6GYLV5/uc=\", false, function () {\n  return [useDebounce];\n});\n\n_c = CreateCodeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCodeModal\");","map":{"version":3,"names":["React","useEffect","useState","bigNumberify","helperToast","encodeReferralCode","getReferralCodeTakenStatus","registerReferralCode","Styles","useDebounce","getCodeError","getSampleReferrerStat","code","discountUsd","referralCode","totalRebateUsd","tradedReferralsCount","registeredReferralsCount","trades","volume","time","Date","now","CreateCodeModal","props","account","chainId","library","active","isCreateCodeModalVisible","setIsCreateCodeModalVisible","recentlyAddedCodes","setRecentlyAddedCodes","connectWallet","pendingTxns","setPendingTxns","setReferralCode","error","setError","isSubmitting","setIsSubmitting","referralCodeCheckStatus","setReferralCodeCheckStatus","debouncedReferralCode","close","cancelled","checkCodeTakenStatus","length","status","takenStatus","getButtonError","buttonError","getPrimaryText","isPrimaryEnabled","handleSubmit","event","preventDefault","referralCodeHex","tx","sentMsg","failMsg","receipt","wait","push","success","err","console","target","value"],"sources":["C:/Users/rober/Documents/copiaswaps-client/swaps-client/src/views/Referrals/CreateCodeModal.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { bigNumberify, helperToast } from \"../../Helpers\";\nimport { encodeReferralCode, getReferralCodeTakenStatus, registerReferralCode } from '../../Api/referrals';\nimport * as Styles from \"./Referrals.styles\";\nimport useDebounce from \"../../hooks/useDebounce\";\nimport { getCodeError } from \"../../utils/referrals\";\n\nconst getSampleReferrerStat = (code) => {\n  return {\n    discountUsd: bigNumberify(0),\n    referralCode: code,\n    totalRebateUsd: bigNumberify(0),\n    tradedReferralsCount: 0,\n    registeredReferralsCount: 0,\n    trades: 0,\n    volume: bigNumberify(0),\n    time: Date.now(),\n  };\n};\n\nexport default function CreateCodeModal(props) {\n  const {\n    account,\n    chainId,\n    library,\n    active,\n    isCreateCodeModalVisible,\n    setIsCreateCodeModalVisible,\n    recentlyAddedCodes,\n    setRecentlyAddedCodes,\n    connectWallet,\n    pendingTxns,\n    setPendingTxns\n  } = props;\n\n  const [referralCode, setReferralCode] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const [referralCodeCheckStatus, setReferralCodeCheckStatus] = useState(\"ok\");\n  const debouncedReferralCode = useDebounce(referralCode, 300);\n\n  const close = () => {\n    if (!isSubmitting) {\n      setReferralCode(\"\");\n      setIsSubmitting(false);\n      setError(\"\");\n      setIsCreateCodeModalVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    let cancelled = false;\n    const checkCodeTakenStatus = async () => {\n      if (error || error.length > 0) {\n        setReferralCodeCheckStatus(\"ok\");\n        return;\n      }\n      const { status: takenStatus } = await getReferralCodeTakenStatus(account, debouncedReferralCode, chainId);\n      // ignore the result if the referral code to check has changed\n      if (cancelled) {\n        return;\n      }\n      if (takenStatus === \"none\") {\n        setReferralCodeCheckStatus(\"ok\");\n      } else {\n        setReferralCodeCheckStatus(\"taken\");\n      }\n    };\n    setReferralCodeCheckStatus(\"checking\");\n    checkCodeTakenStatus();\n    return () => {\n      cancelled = true;\n    };\n  }, [account, debouncedReferralCode, error, chainId]);\n\n  function getButtonError() {\n    if (!referralCode || referralCode.length === 0) {\n      return \"Enter a code\";\n    }\n    if (referralCodeCheckStatus === \"taken\") {\n      return \"Code already taken\";\n    }\n    if (referralCodeCheckStatus === \"checking\") {\n      return \"Checking code...\";\n    }\n\n    return false;\n  }\n\n  const buttonError = getButtonError();\n\n  function getPrimaryText() {\n    if (buttonError) {\n      return buttonError;\n    }\n\n    if (isSubmitting) {\n      return `Creating...`;\n    }\n\n    return \"Create\";\n  }\n  function isPrimaryEnabled() {\n    if (buttonError) {\n      return false;\n    }\n    if (error || isSubmitting) {\n      return false;\n    }\n    return true;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsSubmitting(true);\n    const { status: takenStatus } = await getReferralCodeTakenStatus(account, referralCode, chainId);\n    if (takenStatus === \"taken\") {\n      setError(`Referral code is taken.`);\n      setIsSubmitting(false);\n    }\n\n    if (takenStatus === \"none\") {\n      setIsSubmitting(true);\n      try {\n        const referralCodeHex = encodeReferralCode(referralCode);\n        const tx = await registerReferralCode(chainId, referralCodeHex, {\n          library,\n          sentMsg: \"Referral code submitted!\",\n          failMsg: \"Referral code creation failed.\",\n          pendingTxns,\n          setPendingTxns\n        });\n        const receipt = await tx.wait();\n        if (receipt.status === 1) {\n          recentlyAddedCodes.push(getSampleReferrerStat(referralCode));\n          helperToast.success(\"Referral code created!\");\n          setRecentlyAddedCodes(recentlyAddedCodes);\n          setReferralCode(\"\");\n          setIsSubmitting(false);\n          close();\n        } else {\n          setIsSubmitting(false);\n        }\n      } catch (err) {\n        console.error(err);\n        setIsSubmitting(false);\n      }\n    }\n  }\n  return (\n    <Styles.CodeModal\n      isVisible={isCreateCodeModalVisible}\n      setIsVisible={close}\n      label=\"Create Referral Code\"\n    >\n      <>\n      <div className=\"card-action\">\n        {active ? (\n          <>\n            <Styles.CodeInput\n              className={`text-input ${!error && \"mb-sm\"}`}\n              type=\"text\"\n              placeholder=\"Enter a code\"\n              maxLength=\"20\"\n              pattern=\"^[a-zA-Z0-9_]*$\"\n              disabled={isSubmitting}\n              value={referralCode}\n              onChange={({ target }) => {\n                let { value } = target;\n                setReferralCode(value);\n                setError(getCodeError(value));\n              }}\n            />\n            {error && <Styles.ErrorText>{error}</Styles.ErrorText>}\n            <Styles.CodeButton className=\"default-btn\" onClick={handleSubmit} disabled={!isPrimaryEnabled()}>{getPrimaryText()}</Styles.CodeButton>\n          </>\n        ) : (\n          <button className=\"App-cta Exchange-swap-button\" onClick={connectWallet}>\n            Connect Wallet\n          </button>\n        )}\n      </div>\n      </>\n    </Styles.CodeModal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}