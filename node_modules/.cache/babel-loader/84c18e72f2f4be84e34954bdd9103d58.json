{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { AnalyticsBrowser } from \"@segment/analytics-next\";\nimport { useLocation } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport platform from \"platform\";\nimport ReactGA from \"react-ga4\";\nimport { NETWORK_NAME, hasUserConsented } from \"./Helpers\";\nimport { getPreviousAccounts, saveAccountToLocalStorage, setCurrentAccount, hasBeenIdentified, hasChangedAccount, getUrlParameters, getWindowFeatures } from \"./Helpers\";\nimport { CURRENT_PROVIDER_LOCALSTORAGE_KEY } from \"./config/localstorage\";\nconst writeKey = process.env.REACT_APP_SEGMENT_WRITE_KEY;\nconst GA_ID = process.env.REACT_APP_GA_TRACKING_ID;\nconst customTrackPages = [\"/\", \"/buy_mlp\", \"/rewards\"]; //These pages are tracked through trackPageWithTraits() separately\n\nconst IGNORE_IP_CONTEXT = {\n  context: {\n    ip: 0\n  }\n};\nexport const useAnalytics = () => {\n  _s();\n\n  if (GA_ID) {\n    ReactGA.initialize(GA_ID);\n  }\n\n  const {\n    account\n  } = useWeb3React();\n  const location = useLocation();\n  const [analytics, setAnalytics] = useState(undefined);\n\n  const trackAction = (actionName, traits) => {\n    const hasConsented = hasUserConsented();\n    const pageTitle = document.title;\n    const currentPageContext = {\n      path: location.pathname,\n      title: pageTitle\n    };\n\n    try {\n      if (hasConsented) {\n        analytics === null || analytics === void 0 ? void 0 : analytics.track(actionName, { ...traits,\n          ...currentPageContext\n        });\n      } else {\n        analytics === null || analytics === void 0 ? void 0 : analytics.track(actionName, { ...IGNORE_IP_CONTEXT,\n          ...traits,\n          ...currentPageContext\n        });\n      }\n\n      ReactGA.event({\n        category: actionName,\n        action: JSON.stringify(traits)\n      });\n    } catch (err) {\n      console.error(`Failed to send custom ${actionName} Track action to Segment`, err);\n    }\n  };\n\n  const trackPageWithTraits = traits => {\n    const hasConsented = hasUserConsented();\n    const urlParams = getUrlParameters(location.search);\n    const windowTraits = getWindowFeatures();\n\n    try {\n      const os = {\n        name: platform.description,\n        version: platform.version\n      };\n\n      if (hasConsented) {\n        analytics === null || analytics === void 0 ? void 0 : analytics.page({ ...traits,\n          ...windowTraits,\n          ...urlParams,\n          context: {\n            os\n          }\n        });\n      } else {\n        analytics === null || analytics === void 0 ? void 0 : analytics.page({ ...IGNORE_IP_CONTEXT,\n          ...traits,\n          ...windowTraits,\n          ...urlParams,\n          context: {\n            os\n          }\n        });\n      }\n    } catch (err) {\n      console.error(\"Failed to send Page with traits call to Segment\", err);\n    }\n  };\n\n  const trackLogin = (chainId, mycBalances, userBalances) => {\n    const hasConsented = hasUserConsented();\n\n    try {\n      var _NETWORK_NAME$chainId;\n\n      const provider = localStorage.getItem(CURRENT_PROVIDER_LOCALSTORAGE_KEY);\n      const traits = {\n        walletProvider: provider,\n        walletAddress: account,\n        network: (_NETWORK_NAME$chainId = NETWORK_NAME[chainId]) !== null && _NETWORK_NAME$chainId !== void 0 ? _NETWORK_NAME$chainId : `Unsupported (${chainId})`,\n        ...userBalances,\n        ...mycBalances\n      };\n\n      if (account && hasConsented) {\n        analytics === null || analytics === void 0 ? void 0 : analytics.track(\"User logged in\", { ...traits\n        });\n      } else {\n        analytics === null || analytics === void 0 ? void 0 : analytics.track(\"User logged in\", { ...IGNORE_IP_CONTEXT,\n          ...traits\n        });\n      }\n    } catch (err) {\n      console.error(\"Failed to send Login action to Segment\", err);\n    }\n  }; // Identify call\n\n\n  useEffect(() => {\n    if (account && analytics) {\n      try {\n        // Prevent repeated Identify calls\n        const accountIdentified = hasBeenIdentified(account);\n        const accountChanged = hasChangedAccount(account);\n        const prevAccounts = getPreviousAccounts();\n        const anonId = analytics.user().anonymousId();\n\n        if (prevAccounts && prevAccounts.length === 0 || !prevAccounts.includes(account) || !accountIdentified && accountChanged) {\n          analytics.identify(anonId, {\n            userId: anonId,\n            walletAddress: account\n          });\n          setCurrentAccount(account);\n          saveAccountToLocalStorage(account);\n        }\n      } catch (err) {\n        console.error(\"Failed to send Identify call to Segment\", err);\n      }\n    }\n  }, [analytics, account]); // Page call\n\n  useEffect(() => {\n    try {\n      if (!customTrackPages.includes(location.pathname)) {\n        const hasConsented = hasUserConsented();\n        const urlParams = getUrlParameters(location.search);\n        const windowTraits = getWindowFeatures(); // GA pageview\n\n        ReactGA.send(\"pageview\"); // Segment pageview\n\n        if (hasConsented) {\n          analytics === null || analytics === void 0 ? void 0 : analytics.page({ ...windowTraits,\n            ...urlParams\n          });\n        } else {\n          analytics === null || analytics === void 0 ? void 0 : analytics.page({ ...IGNORE_IP_CONTEXT,\n            ...windowTraits,\n            ...urlParams\n          });\n        }\n      }\n    } catch (err) {\n      console.error(\"Failed to send Page call to Segment\", err);\n    }\n  }, [analytics, location.pathname, location.search]);\n  useEffect(() => {\n    if (!writeKey) {\n      console.warn(\"Segment.io write key not set\");\n    } else {\n      const loadAnalytics = async () => {\n        const [response] = await AnalyticsBrowser.load({\n          writeKey\n        });\n        setAnalytics(response);\n      };\n\n      loadAnalytics();\n    }\n  }, []);\n  return {\n    analytics,\n    trackLogin,\n    trackPageWithTraits,\n    trackAction\n  };\n};\n\n_s(useAnalytics, \"VDRsf+Mkr7xvC129NXaWDvnhsgY=\", false, function () {\n  return [useWeb3React, useLocation];\n});","map":{"version":3,"names":["useEffect","useState","AnalyticsBrowser","useLocation","useWeb3React","platform","ReactGA","NETWORK_NAME","hasUserConsented","getPreviousAccounts","saveAccountToLocalStorage","setCurrentAccount","hasBeenIdentified","hasChangedAccount","getUrlParameters","getWindowFeatures","CURRENT_PROVIDER_LOCALSTORAGE_KEY","writeKey","process","env","REACT_APP_SEGMENT_WRITE_KEY","GA_ID","REACT_APP_GA_TRACKING_ID","customTrackPages","IGNORE_IP_CONTEXT","context","ip","useAnalytics","initialize","account","location","analytics","setAnalytics","undefined","trackAction","actionName","traits","hasConsented","pageTitle","document","title","currentPageContext","path","pathname","track","event","category","action","JSON","stringify","err","console","error","trackPageWithTraits","urlParams","search","windowTraits","os","name","description","version","page","trackLogin","chainId","mycBalances","userBalances","provider","localStorage","getItem","walletProvider","walletAddress","network","accountIdentified","accountChanged","prevAccounts","anonId","user","anonymousId","length","includes","identify","userId","send","warn","loadAnalytics","response","load"],"sources":["C:/Users/rober/Documents/copiaswaps-client/swaps-client/src/segmentAnalytics.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { AnalyticsBrowser } from \"@segment/analytics-next\";\nimport { useLocation } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport platform from \"platform\";\nimport ReactGA from \"react-ga4\";\nimport { NETWORK_NAME, hasUserConsented } from \"./Helpers\";\nimport {\n  getPreviousAccounts,\n  saveAccountToLocalStorage,\n  setCurrentAccount,\n  hasBeenIdentified,\n  hasChangedAccount,\n  getUrlParameters,\n  getWindowFeatures,\n} from \"./Helpers\";\nimport { CURRENT_PROVIDER_LOCALSTORAGE_KEY } from \"./config/localstorage\";\n\nconst writeKey = process.env.REACT_APP_SEGMENT_WRITE_KEY;\nconst GA_ID = process.env.REACT_APP_GA_TRACKING_ID;\nconst customTrackPages = [\"/\", \"/buy_mlp\", \"/rewards\"]; //These pages are tracked through trackPageWithTraits() separately\n\nconst IGNORE_IP_CONTEXT = {\n  context: {\n    ip: 0,\n  },\n};\n\nexport const useAnalytics = () => {\n  if (GA_ID) {\n    ReactGA.initialize(GA_ID);\n  }\n  const { account } = useWeb3React();\n  const location = useLocation();\n  const [analytics, setAnalytics] = useState(undefined);\n\n  const trackAction = (actionName, traits) => {\n    const hasConsented = hasUserConsented();\n    const pageTitle = document.title;\n    const currentPageContext = { path: location.pathname, title: pageTitle };\n    try {\n      if (hasConsented) {\n        analytics?.track(actionName, { ...traits, ...currentPageContext });\n      } else {\n        analytics?.track(actionName, {\n          ...IGNORE_IP_CONTEXT,\n          ...traits,\n          ...currentPageContext,\n        });\n      }\n      ReactGA.event({\n        category: actionName,\n        action: JSON.stringify(traits),\n      });\n    } catch (err) {\n      console.error(`Failed to send custom ${actionName} Track action to Segment`, err);\n    }\n  };\n\n  const trackPageWithTraits = (traits) => {\n    const hasConsented = hasUserConsented();\n    const urlParams = getUrlParameters(location.search);\n    const windowTraits = getWindowFeatures();\n\n    try {\n      const os = { name: platform.description, version: platform.version };\n      if (hasConsented) {\n        analytics?.page({ ...traits, ...windowTraits, ...urlParams, context: { os } });\n      } else {\n        analytics?.page({\n          ...IGNORE_IP_CONTEXT,\n          ...traits,\n          ...windowTraits,\n          ...urlParams,\n          context: { os },\n        });\n      }\n    } catch (err) {\n      console.error(\"Failed to send Page with traits call to Segment\", err);\n    }\n  };\n\n  const trackLogin = (chainId, mycBalances, userBalances) => {\n    const hasConsented = hasUserConsented();\n    try {\n      const provider = localStorage.getItem(CURRENT_PROVIDER_LOCALSTORAGE_KEY);\n      const traits = {\n        walletProvider: provider,\n        walletAddress: account,\n        network: NETWORK_NAME[chainId] ?? `Unsupported (${chainId})`,\n        ...userBalances,\n        ...mycBalances,\n      };\n      if (account && hasConsented) {\n        analytics?.track(\"User logged in\", {\n          ...traits,\n        });\n      } else {\n        analytics?.track(\"User logged in\", {\n          ...IGNORE_IP_CONTEXT,\n          ...traits,\n        });\n      }\n    } catch (err) {\n      console.error(\"Failed to send Login action to Segment\", err);\n    }\n  };\n\n  // Identify call\n  useEffect(() => {\n    if (account && analytics) {\n      try {\n        // Prevent repeated Identify calls\n        const accountIdentified = hasBeenIdentified(account);\n        const accountChanged = hasChangedAccount(account);\n        const prevAccounts = getPreviousAccounts();\n        const anonId = analytics.user().anonymousId();\n\n        if (\n          (prevAccounts && prevAccounts.length === 0) ||\n          !prevAccounts.includes(account) ||\n          (!accountIdentified && accountChanged)\n        ) {\n          analytics.identify(anonId, {\n            userId: anonId,\n            walletAddress: account,\n          });\n          setCurrentAccount(account);\n          saveAccountToLocalStorage(account);\n        }\n      } catch (err) {\n        console.error(\"Failed to send Identify call to Segment\", err);\n      }\n    }\n  }, [analytics, account]);\n\n  // Page call\n  useEffect(() => {\n    try {\n      if (!customTrackPages.includes(location.pathname)) {\n        const hasConsented = hasUserConsented();\n        const urlParams = getUrlParameters(location.search);\n        const windowTraits = getWindowFeatures();\n        // GA pageview\n        ReactGA.send(\"pageview\");\n\n        // Segment pageview\n        if (hasConsented) {\n          analytics?.page({ ...windowTraits, ...urlParams });\n        } else {\n          analytics?.page({\n            ...IGNORE_IP_CONTEXT,\n            ...windowTraits,\n            ...urlParams,\n          });\n        }\n      }\n    } catch (err) {\n      console.error(\"Failed to send Page call to Segment\", err);\n    }\n  }, [analytics, location.pathname, location.search]);\n\n  useEffect(() => {\n    if (!writeKey) {\n      console.warn(\"Segment.io write key not set\");\n    } else {\n      const loadAnalytics = async () => {\n        const [response] = await AnalyticsBrowser.load({ writeKey });\n        setAnalytics(response);\n      };\n      loadAnalytics();\n    }\n  }, []);\n\n  return {\n    analytics,\n    trackLogin,\n    trackPageWithTraits,\n    trackAction,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}