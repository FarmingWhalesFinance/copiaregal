{"ast":null,"code":"import { __assign } from \"tslib\";\n/**\n * Merge legacy settings and initialized Integration option overrides.\n *\n * This will merge any options that were passed from initialization into\n * overrides for settings that are returned by the Segment CDN.\n *\n * i.e. this allows for passing options directly into destinations from\n * the Analytics constructor.\n */\n\nexport function mergedOptions(settings, options) {\n  var _a;\n\n  var optionOverrides = Object.entries((_a = options.integrations) !== null && _a !== void 0 ? _a : {}).reduce(function (overrides, _a) {\n    var _b, _c;\n\n    var integration = _a[0],\n        options = _a[1];\n\n    if (typeof options === 'object') {\n      return __assign(__assign({}, overrides), (_b = {}, _b[integration] = options, _b));\n    }\n\n    return __assign(__assign({}, overrides), (_c = {}, _c[integration] = {}, _c));\n  }, {});\n  return Object.entries(settings.integrations).reduce(function (integrationSettings, _a) {\n    var _b;\n\n    var integration = _a[0],\n        settings = _a[1];\n    return __assign(__assign({}, integrationSettings), (_b = {}, _b[integration] = __assign(__assign({}, settings), optionOverrides[integration]), _b));\n  }, {});\n}","map":{"version":3,"sources":["../../../src/lib/merged-options.ts"],"names":[],"mappings":";AAGA;;;;;;;;AAQG;;AACH,OAAM,SAAU,aAAV,CACJ,QADI,EAEJ,OAFI,EAEY;;;EAEhB,IAAM,eAAe,GAAG,MAAM,CAAC,OAAP,CAAe,CAAA,EAAA,GAAA,OAAO,CAAC,YAAR,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,EAApB,GAAwB,EAAvC,EAA2C,MAA3C,CACtB,UAAC,SAAD,EAAY,EAAZ,EAAkC;;;QAArB,WAAW,GAAA,EAAA,CAAA,CAAA,C;QAAE,OAAO,GAAA,EAAA,CAAA,CAAA,C;;IAC/B,IAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;MAC/B,OAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,SADL,CAAA,GACc,EAAA,GAAA,EAAA,EAAA,EAAA,CACX,WADW,CAAA,GACG,OADH,EACU,EAFxB,EAAA;IAID;;IAED,OAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,SADL,CAAA,GACc,EAAA,GAAA,EAAA,EAAA,EAAA,CACX,WADW,CAAA,GACG,EADH,EACK,EAFnB,EAAA;EAID,CAbqB,EActB,EAdsB,CAAxB;EAiBA,OAAO,MAAM,CAAC,OAAP,CAAe,QAAQ,CAAC,YAAxB,EAAsC,MAAtC,CACL,UAAC,mBAAD,EAAsB,EAAtB,EAA6C;;;QAAtB,WAAW,GAAA,EAAA,CAAA,CAAA,C;QAAE,QAAQ,GAAA,EAAA,CAAA,CAAA,C;IAC1C,OAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,mBADL,CAAA,GACwB,EAAA,GAAA,EAAA,EAAA,EAAA,CACrB,WADqB,CAAA,GACV,QAAA,CAAA,QAAA,CAAA,EAAA,EACP,QADO,CAAA,EAEP,eAAe,CAAC,WAAD,CAFR,CADU,EAGW,EAJnC,EAAA;EAOD,CATI,EAUL,EAVK,CAAP;AAYD","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\n/**\n * Merge legacy settings and initialized Integration option overrides.\n *\n * This will merge any options that were passed from initialization into\n * overrides for settings that are returned by the Segment CDN.\n *\n * i.e. this allows for passing options directly into destinations from\n * the Analytics constructor.\n */\nexport function mergedOptions(settings, options) {\n    var _a;\n    var optionOverrides = Object.entries((_a = options.integrations) !== null && _a !== void 0 ? _a : {}).reduce(function (overrides, _a) {\n        var _b, _c;\n        var integration = _a[0], options = _a[1];\n        if (typeof options === 'object') {\n            return __assign(__assign({}, overrides), (_b = {}, _b[integration] = options, _b));\n        }\n        return __assign(__assign({}, overrides), (_c = {}, _c[integration] = {}, _c));\n    }, {});\n    return Object.entries(settings.integrations).reduce(function (integrationSettings, _a) {\n        var _b;\n        var integration = _a[0], settings = _a[1];\n        return __assign(__assign({}, integrationSettings), (_b = {}, _b[integration] = __assign(__assign({}, settings), optionOverrides[integration]), _b));\n    }, {});\n}\n//# sourceMappingURL=merged-options.js.map"]},"metadata":{},"sourceType":"module"}