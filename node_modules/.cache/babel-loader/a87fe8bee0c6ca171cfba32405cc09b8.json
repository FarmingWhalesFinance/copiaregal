{"ast":null,"code":"import { __assign } from \"tslib\";\n\nvar Logger =\n/** @class */\nfunction () {\n  function Logger() {\n    var _this = this;\n\n    this._logs = [];\n\n    this.log = function (level, message, extras) {\n      var time = new Date();\n\n      _this._logs.push({\n        level: level,\n        message: message,\n        time: time,\n        extras: extras\n      });\n    };\n  }\n\n  Object.defineProperty(Logger.prototype, \"logs\", {\n    get: function () {\n      return this._logs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Logger.prototype.flush = function () {\n    if (this.logs.length > 1) {\n      var formatted = this._logs.reduce(function (logs, log) {\n        var _a;\n\n        var _b, _c;\n\n        var line = __assign(__assign({}, log), {\n          json: JSON.stringify(log.extras, null, ' '),\n          extras: log.extras\n        });\n\n        delete line['time'];\n        var key = (_c = (_b = log.time) === null || _b === void 0 ? void 0 : _b.toISOString()) !== null && _c !== void 0 ? _c : '';\n\n        if (logs[key]) {\n          key = \"\".concat(key, \"-\").concat(Math.random());\n        }\n\n        return __assign(__assign({}, logs), (_a = {}, _a[key] = line, _a));\n      }, {}); // ie doesn't like console.table\n\n\n      if (console.table) {\n        console.table(formatted);\n      } else {\n        console.log(formatted);\n      }\n    } else {\n      this.logs.forEach(function (logEntry) {\n        var level = logEntry.level,\n            message = logEntry.message,\n            extras = logEntry.extras;\n\n        if (level === 'info' || level === 'debug') {\n          console.log(message, extras !== null && extras !== void 0 ? extras : '');\n        } else {\n          console[level](message, extras !== null && extras !== void 0 ? extras : '');\n        }\n      });\n    }\n\n    this._logs = [];\n  };\n\n  return Logger;\n}();\n\nexport default Logger;","map":{"version":3,"sources":["../../../../src/core/logger/index.ts"],"names":[],"mappings":";;AAWA,IAAA,MAAA;AAAA;AAAA,YAAA;EAAA,SAAA,MAAA,GAAA;IAAA,IAAA,KAAA,GAAA,IAAA;;IACU,KAAA,KAAA,GAAsB,EAAtB;;IAER,KAAA,GAAA,GAAM,UAAC,KAAD,EAAkB,OAAlB,EAAmC,MAAnC,EAAkD;MACtD,IAAM,IAAI,GAAG,IAAI,IAAJ,EAAb;;MACA,KAAI,CAAC,KAAL,CAAW,IAAX,CAAgB;QACd,KAAK,EAAA,KADS;QAEd,OAAO,EAAA,OAFO;QAGd,IAAI,EAAA,IAHU;QAId,MAAM,EAAA;MAJQ,CAAhB;IAMD,CARD;EAwDD;;EA9CC,MAAA,CAAA,cAAA,CAAW,MAAA,CAAA,SAAX,EAAW,MAAX,EAAe;SAAf,YAAA;MACE,OAAO,KAAK,KAAZ;IACD,CAFc;qBAAA;;EAAA,CAAf;;EAIO,MAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;IACE,IAAI,KAAK,IAAL,CAAU,MAAV,GAAmB,CAAvB,EAA0B;MACxB,IAAM,SAAS,GAAG,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAC,IAAD,EAAO,GAAP,EAAU;;;;;QAC5C,IAAM,IAAI,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACL,GADK,CAAA,EACF;UACN,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,GAAG,CAAC,MAAnB,EAA2B,IAA3B,EAAiC,GAAjC,CADA;UAEN,MAAM,EAAE,GAAG,CAAC;QAFN,CADE,CAAV;;QAMA,OAAO,IAAI,CAAC,MAAD,CAAX;QAEA,IAAI,GAAG,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,GAAG,CAAC,IAAJ,MAAQ,IAAR,IAAQ,EAAA,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAQ,EAAA,CAAE,WAAF,EAAR,MAAuB,IAAvB,IAAuB,EAAA,KAAA,KAAA,CAAvB,GAAuB,EAAvB,GAA2B,EAArC;;QACA,IAAI,IAAI,CAAC,GAAD,CAAR,EAAe;UACb,GAAG,GAAG,GAAA,MAAA,CAAG,GAAH,EAAM,GAAN,EAAM,MAAN,CAAU,IAAI,CAAC,MAAL,EAAV,CAAN;QACD;;QAED,OAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,IADL,CAAA,GACS,EAAA,GAAA,EAAA,EAAA,EAAA,CACN,GADM,CAAA,GACA,IADA,EACI,EAFb,EAAA;MAID,CAlBiB,EAkBf,EAlBe,CAAlB,CADwB,CAqBxB;;;MACA,IAAI,OAAO,CAAC,KAAZ,EAAmB;QACjB,OAAO,CAAC,KAAR,CAAc,SAAd;MACD,CAFD,MAEO;QACL,OAAO,CAAC,GAAR,CAAY,SAAZ;MACD;IACF,CA3BD,MA2BO;MACL,KAAK,IAAL,CAAU,OAAV,CAAkB,UAAC,QAAD,EAAS;QACjB,IAAA,KAAK,GAAsB,QAAQ,CAA9B,KAAL;QAAA,IAAO,OAAO,GAAa,QAAQ,CAArB,OAAd;QAAA,IAAgB,MAAM,GAAK,QAAQ,CAAb,MAAtB;;QAER,IAAI,KAAK,KAAK,MAAV,IAAoB,KAAK,KAAK,OAAlC,EAA2C;UACzC,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAA,MAAA,GAAU,EAA/B;QACD,CAFD,MAEO;UACL,OAAO,CAAC,KAAD,CAAP,CAAe,OAAf,EAAwB,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAA,MAAA,GAAU,EAAlC;QACD;MACF,CARD;IASD;;IAED,KAAK,KAAL,GAAa,EAAb;EACD,CAzCM;;EA0CT,OAAA,MAAA;AAAC,CA3DD,EAAA","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nvar Logger = /** @class */ (function () {\n    function Logger() {\n        var _this = this;\n        this._logs = [];\n        this.log = function (level, message, extras) {\n            var time = new Date();\n            _this._logs.push({\n                level: level,\n                message: message,\n                time: time,\n                extras: extras,\n            });\n        };\n    }\n    Object.defineProperty(Logger.prototype, \"logs\", {\n        get: function () {\n            return this._logs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Logger.prototype.flush = function () {\n        if (this.logs.length > 1) {\n            var formatted = this._logs.reduce(function (logs, log) {\n                var _a;\n                var _b, _c;\n                var line = __assign(__assign({}, log), { json: JSON.stringify(log.extras, null, ' '), extras: log.extras });\n                delete line['time'];\n                var key = (_c = (_b = log.time) === null || _b === void 0 ? void 0 : _b.toISOString()) !== null && _c !== void 0 ? _c : '';\n                if (logs[key]) {\n                    key = \"\".concat(key, \"-\").concat(Math.random());\n                }\n                return __assign(__assign({}, logs), (_a = {}, _a[key] = line, _a));\n            }, {});\n            // ie doesn't like console.table\n            if (console.table) {\n                console.table(formatted);\n            }\n            else {\n                console.log(formatted);\n            }\n        }\n        else {\n            this.logs.forEach(function (logEntry) {\n                var level = logEntry.level, message = logEntry.message, extras = logEntry.extras;\n                if (level === 'info' || level === 'debug') {\n                    console.log(message, extras !== null && extras !== void 0 ? extras : '');\n                }\n                else {\n                    console[level](message, extras !== null && extras !== void 0 ? extras : '');\n                }\n            });\n        }\n        this._logs = [];\n    };\n    return Logger;\n}());\nexport default Logger;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}