{"ast":null,"code":"// [5m, 15m, 60m (1h), 240m(4h), 1D(24h)]\nexport const supportedResolutions = [\"5\", \"15\", \"60\", \"240\", \"24H\"];\nconst config = {\n  supported_resolutions: [...supportedResolutions]\n};\nexport const generateDataFeed = priceData => {\n  if (!priceData) {\n    return null;\n  }\n\n  const dataFeed = {\n    onReady: cb => {\n      console.debug(\"=====onReady running\");\n      setTimeout(() => cb(config), 0);\n    },\n    searchSymbols: (_userInput, _exchange, _symbolType, _onResultReadyCallback) => {\n      console.debug(\"====Search Symbols running\");\n    },\n    resolveSymbol: (symbolName, onSymbolResolvedCallback, _onResolveErrorCallback) => {\n      console.debug(\"resolveSymbol:\", {\n        symbolName\n      });\n      const marketId = symbolName.split(\":\")[1];\n      const symbolStub = {\n        name: marketId,\n        full_name: symbolName,\n        description: marketId,\n        type: \"crypto\",\n        session: \"24x7\",\n        timezone: \"Etc/UTC\",\n        format: \"price\",\n        ticker: marketId,\n        exchange: \"\",\n        listed_exchange: \"\",\n        minmov: 1,\n        minmov2: 0,\n        pricescale: 100000,\n        has_intraday: true,\n        supported_resolutions: supportedResolutions\n      };\n\n      if (marketId.split(\"/\")[1].match(/USD|EUR|JPY|AUD|GBP|KRW|CNY/)) {\n        symbolStub.pricescale = 100;\n      }\n\n      setTimeout(function () {\n        onSymbolResolvedCallback(symbolStub);\n        console.debug(\"Resolving that symbol....\", symbolStub);\n      }, 0);\n    },\n    getBars: (symbolInfo, resolution, periodParams, onResult, onError) => {\n      if (priceData.length) {\n        const bars = priceData.map(el => {\n          return { ...el,\n            time: el.time * 1000 //TradingView requires bar time in ms\n\n          };\n        });\n\n        if (!periodParams.firstDataRequest) {\n          onResult([], {\n            noData: true\n          });\n        } else if (bars.length < periodParams.countBack) {\n          onResult(bars, {\n            noData: false\n          });\n        } else {\n          onResult(bars, {\n            noData: false\n          });\n        }\n      } else {\n        onResult([], {\n          noData: true\n        });\n      }\n    },\n    subscribeBars: (_symbolInfo, _resolution, _onRealtimeCallback, _subscribeUID, _onResetCacheNeededCallback) => {\n      console.debug(\"=====subscribeBars runnning\");\n    },\n    unsubscribeBars: _subscriberUID => {\n      console.debug(\"=====unsubscribeBars running\");\n    }\n  };\n  return dataFeed;\n};","map":{"version":3,"names":["supportedResolutions","config","supported_resolutions","generateDataFeed","priceData","dataFeed","onReady","cb","console","debug","setTimeout","searchSymbols","_userInput","_exchange","_symbolType","_onResultReadyCallback","resolveSymbol","symbolName","onSymbolResolvedCallback","_onResolveErrorCallback","marketId","split","symbolStub","name","full_name","description","type","session","timezone","format","ticker","exchange","listed_exchange","minmov","minmov2","pricescale","has_intraday","match","getBars","symbolInfo","resolution","periodParams","onResult","onError","length","bars","map","el","time","firstDataRequest","noData","countBack","subscribeBars","_symbolInfo","_resolution","_onRealtimeCallback","_subscribeUID","_onResetCacheNeededCallback","unsubscribeBars","_subscriberUID"],"sources":["C:/Users/rober/Documents/copiaswaps-client/swaps-client/src/Api/TradingView/index.js"],"sourcesContent":["// [5m, 15m, 60m (1h), 240m(4h), 1D(24h)]\nexport const supportedResolutions = [\"5\", \"15\", \"60\", \"240\", \"24H\"];\n\nconst config = {\n  supported_resolutions: [...supportedResolutions],\n};\n\nexport const generateDataFeed = (priceData) => {\n  if (!priceData) {\n    return null;\n  }\n  const dataFeed = {\n    onReady: (cb) => {\n      console.debug(\"=====onReady running\");\n      setTimeout(() => cb(config), 0);\n    },\n\n    searchSymbols: (_userInput, _exchange, _symbolType, _onResultReadyCallback) => {\n      console.debug(\"====Search Symbols running\");\n    },\n\n    resolveSymbol: (symbolName, onSymbolResolvedCallback, _onResolveErrorCallback) => {\n      console.debug(\"resolveSymbol:\", { symbolName });\n      const marketId = symbolName.split(\":\")[1];\n      const symbolStub = {\n        name: marketId,\n        full_name: symbolName,\n        description: marketId,\n        type: \"crypto\",\n        session: \"24x7\",\n        timezone: \"Etc/UTC\",\n        format: \"price\",\n        ticker: marketId,\n        exchange: \"\",\n        listed_exchange: \"\",\n        minmov: 1,\n        minmov2: 0,\n        pricescale: 100000,\n        has_intraday: true,\n        supported_resolutions: supportedResolutions,\n      };\n\n      if (marketId.split(\"/\")[1].match(/USD|EUR|JPY|AUD|GBP|KRW|CNY/)) {\n        symbolStub.pricescale = 100;\n      }\n      setTimeout(function () {\n        onSymbolResolvedCallback(symbolStub);\n        console.debug(\"Resolving that symbol....\", symbolStub);\n      }, 0);\n    },\n\n    getBars: (symbolInfo, resolution, periodParams, onResult, onError) => {\n      if (priceData.length) {\n        const bars = priceData.map((el) => {\n          return {\n            ...el,\n            time: el.time * 1000, //TradingView requires bar time in ms\n          };\n        })\n\n        if (!periodParams.firstDataRequest) {\n          onResult([], { noData: true});\n        } else if (bars.length < periodParams.countBack) {\n          onResult(bars, { noData: false });\n        } else {\n          onResult(bars, { noData: false });\n        }\n      } else {\n        onResult([], { noData: true });\n      }\n    },\n\n    subscribeBars: (_symbolInfo, _resolution, _onRealtimeCallback, _subscribeUID, _onResetCacheNeededCallback) => {\n      console.debug(\"=====subscribeBars runnning\");\n    },\n    unsubscribeBars: (_subscriberUID) => {\n      console.debug(\"=====unsubscribeBars running\");\n    },\n  };\n  return dataFeed;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}