{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { asPromise } from '../../lib/as-promise';\nimport { loadScript } from '../../lib/load-script';\nimport { getCDN } from '../../lib/parse-cdn';\n\nfunction validate(pluginLike) {\n  if (!Array.isArray(pluginLike)) {\n    throw new Error('Not a valid list of plugins');\n  }\n\n  var required = ['load', 'isLoaded', 'name', 'version', 'type'];\n  pluginLike.forEach(function (plugin) {\n    required.forEach(function (method) {\n      var _a;\n\n      if (plugin[method] === undefined) {\n        throw new Error(\"Plugin: \".concat((_a = plugin.name) !== null && _a !== void 0 ? _a : 'unknown', \" missing required function \").concat(method));\n      }\n    });\n  });\n  return true;\n}\n\nexport function remoteLoader(settings, userIntegrations, mergedIntegrations, obfuscate) {\n  var _a;\n\n  return __awaiter(this, void 0, void 0, function () {\n    var allPlugins, cdn, pluginPromises;\n\n    var _this = this;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          allPlugins = [];\n          cdn = getCDN();\n          pluginPromises = ((_a = settings.remotePlugins) !== null && _a !== void 0 ? _a : []).map(function (remotePlugin) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var urlSplit, name_1, obfuscatedURL, error_1, libraryName, pluginFactory, plugin, plugins, error_2;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (userIntegrations.All === false && !userIntegrations[remotePlugin.name] || userIntegrations[remotePlugin.name] === false) return [2\n                    /*return*/\n                    ];\n                    _a.label = 1;\n\n                  case 1:\n                    _a.trys.push([1, 12,, 13]);\n\n                    if (!obfuscate) return [3\n                    /*break*/\n                    , 7];\n                    urlSplit = remotePlugin.url.split('/');\n                    name_1 = urlSplit[urlSplit.length - 2];\n                    obfuscatedURL = remotePlugin.url.replace(name_1, btoa(name_1).replace(/=/g, ''));\n                    _a.label = 2;\n\n                  case 2:\n                    _a.trys.push([2, 4,, 6]);\n\n                    return [4\n                    /*yield*/\n                    , loadScript(obfuscatedURL.replace('https://cdn.segment.com', cdn))];\n\n                  case 3:\n                    _a.sent();\n\n                    return [3\n                    /*break*/\n                    , 6];\n\n                  case 4:\n                    error_1 = _a.sent(); // Due to syncing concerns it is possible that the obfuscated action destination (or requested version) might not exist.\n                    // We should use the unobfuscated version as a fallback.\n\n                    return [4\n                    /*yield*/\n                    , loadScript(remotePlugin.url.replace('https://cdn.segment.com', cdn))];\n\n                  case 5:\n                    // Due to syncing concerns it is possible that the obfuscated action destination (or requested version) might not exist.\n                    // We should use the unobfuscated version as a fallback.\n                    _a.sent();\n\n                    return [3\n                    /*break*/\n                    , 6];\n\n                  case 6:\n                    return [3\n                    /*break*/\n                    , 9];\n\n                  case 7:\n                    return [4\n                    /*yield*/\n                    , loadScript(remotePlugin.url.replace('https://cdn.segment.com', cdn))];\n\n                  case 8:\n                    _a.sent();\n\n                    _a.label = 9;\n\n                  case 9:\n                    libraryName = remotePlugin.libraryName;\n                    if (!(typeof window[libraryName] === 'function')) return [3\n                    /*break*/\n                    , 11];\n                    pluginFactory = window[libraryName];\n                    return [4\n                    /*yield*/\n                    , asPromise(pluginFactory(__assign(__assign({}, remotePlugin.settings), mergedIntegrations[remotePlugin.name])))];\n\n                  case 10:\n                    plugin = _a.sent();\n                    plugins = Array.isArray(plugin) ? plugin : [plugin];\n                    validate(plugins);\n                    allPlugins.push.apply(allPlugins, plugins);\n                    _a.label = 11;\n\n                  case 11:\n                    return [3\n                    /*break*/\n                    , 13];\n\n                  case 12:\n                    error_2 = _a.sent();\n                    console.warn('Failed to load Remote Plugin', error_2);\n                    return [3\n                    /*break*/\n                    , 13];\n\n                  case 13:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          });\n          return [4\n          /*yield*/\n          , Promise.all(pluginPromises)];\n\n        case 1:\n          _b.sent();\n\n          return [2\n          /*return*/\n          , allPlugins.filter(Boolean)];\n      }\n    });\n  });\n}","map":{"version":3,"sources":["../../../../src/plugins/remote-loader/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { asPromise } from '../../lib/as-promise';\nimport { loadScript } from '../../lib/load-script';\nimport { getCDN } from '../../lib/parse-cdn';\nfunction validate(pluginLike) {\n    if (!Array.isArray(pluginLike)) {\n        throw new Error('Not a valid list of plugins');\n    }\n    var required = ['load', 'isLoaded', 'name', 'version', 'type'];\n    pluginLike.forEach(function (plugin) {\n        required.forEach(function (method) {\n            var _a;\n            if (plugin[method] === undefined) {\n                throw new Error(\"Plugin: \".concat((_a = plugin.name) !== null && _a !== void 0 ? _a : 'unknown', \" missing required function \").concat(method));\n            }\n        });\n    });\n    return true;\n}\nexport function remoteLoader(settings, userIntegrations, mergedIntegrations, obfuscate) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var allPlugins, cdn, pluginPromises;\n        var _this = this;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    allPlugins = [];\n                    cdn = getCDN();\n                    pluginPromises = ((_a = settings.remotePlugins) !== null && _a !== void 0 ? _a : []).map(function (remotePlugin) { return __awaiter(_this, void 0, void 0, function () {\n                        var urlSplit, name_1, obfuscatedURL, error_1, libraryName, pluginFactory, plugin, plugins, error_2;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    if ((userIntegrations.All === false &&\n                                        !userIntegrations[remotePlugin.name]) ||\n                                        userIntegrations[remotePlugin.name] === false)\n                                        return [2 /*return*/];\n                                    _a.label = 1;\n                                case 1:\n                                    _a.trys.push([1, 12, , 13]);\n                                    if (!obfuscate) return [3 /*break*/, 7];\n                                    urlSplit = remotePlugin.url.split('/');\n                                    name_1 = urlSplit[urlSplit.length - 2];\n                                    obfuscatedURL = remotePlugin.url.replace(name_1, btoa(name_1).replace(/=/g, ''));\n                                    _a.label = 2;\n                                case 2:\n                                    _a.trys.push([2, 4, , 6]);\n                                    return [4 /*yield*/, loadScript(obfuscatedURL.replace('https://cdn.segment.com', cdn))];\n                                case 3:\n                                    _a.sent();\n                                    return [3 /*break*/, 6];\n                                case 4:\n                                    error_1 = _a.sent();\n                                    // Due to syncing concerns it is possible that the obfuscated action destination (or requested version) might not exist.\n                                    // We should use the unobfuscated version as a fallback.\n                                    return [4 /*yield*/, loadScript(remotePlugin.url.replace('https://cdn.segment.com', cdn))];\n                                case 5:\n                                    // Due to syncing concerns it is possible that the obfuscated action destination (or requested version) might not exist.\n                                    // We should use the unobfuscated version as a fallback.\n                                    _a.sent();\n                                    return [3 /*break*/, 6];\n                                case 6: return [3 /*break*/, 9];\n                                case 7: return [4 /*yield*/, loadScript(remotePlugin.url.replace('https://cdn.segment.com', cdn))];\n                                case 8:\n                                    _a.sent();\n                                    _a.label = 9;\n                                case 9:\n                                    libraryName = remotePlugin.libraryName;\n                                    if (!(typeof window[libraryName] === 'function')) return [3 /*break*/, 11];\n                                    pluginFactory = window[libraryName];\n                                    return [4 /*yield*/, asPromise(pluginFactory(__assign(__assign({}, remotePlugin.settings), mergedIntegrations[remotePlugin.name])))];\n                                case 10:\n                                    plugin = _a.sent();\n                                    plugins = Array.isArray(plugin) ? plugin : [plugin];\n                                    validate(plugins);\n                                    allPlugins.push.apply(allPlugins, plugins);\n                                    _a.label = 11;\n                                case 11: return [3 /*break*/, 13];\n                                case 12:\n                                    error_2 = _a.sent();\n                                    console.warn('Failed to load Remote Plugin', error_2);\n                                    return [3 /*break*/, 13];\n                                case 13: return [2 /*return*/];\n                            }\n                        });\n                    }); });\n                    return [4 /*yield*/, Promise.all(pluginPromises)];\n                case 1:\n                    _b.sent();\n                    return [2 /*return*/, allPlugins.filter(Boolean)];\n            }\n        });\n    });\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}