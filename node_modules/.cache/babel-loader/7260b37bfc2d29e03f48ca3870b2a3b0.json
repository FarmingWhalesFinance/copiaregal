{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\copiaswaps-client\\\\swaps-client\\\\src\\\\components\\\\Mlp\\\\MlpSwap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useSWR from \"swr\";\nimport { ethers } from \"ethers\";\nimport Tab from \"../Tab/Tab\";\nimport cx from \"classnames\";\nimport { getToken, getTokens, getWhitelistedTokens, getWrappedToken, getNativeToken } from \"../../data/Tokens\";\nimport { getContract } from \"../../Addresses\";\nimport { helperToast, useLocalStorageByChainId, getTokenInfo, // getChainName,\nuseChainId, expandDecimals, fetcher, bigNumberify, formatAmount, formatAmountFree, formatKeyAmount, // formatDateTime,\ngetBuyMlpToAmount, getBuyMlpFromAmount, getSellMlpFromAmount, getSellMlpToAmount, parseValue, approveTokens, getUsd, adjustForDecimals, getUserTokenBalances, NETWORK_NAME, MLP_DECIMALS, USD_DECIMALS, BASIS_POINTS_DIVISOR, MLP_COOLDOWN_DURATION, SECONDS_PER_YEAR, USDG_DECIMALS, ARBITRUM, PLACEHOLDER_ACCOUNT } from \"../../Helpers\";\nimport { callContract, useMYCPrice } from \"../../Api\";\nimport TokenSelector from \"../Exchange/TokenSelector\";\nimport BuyInputSection from \"../BuyInputSection/BuyInputSection\";\nimport Tooltip from \"../Tooltip/Tooltip\";\nimport ReaderV2 from \"../../abis/ReaderV2.json\";\nimport RewardReader from \"../../abis/RewardReader.json\";\nimport VaultV2 from \"../../abis/VaultV2.json\";\nimport MlpManager from \"../../abis/MlpManager.json\";\nimport RewardTracker from \"../../abis/RewardTracker.json\";\nimport Vester from \"../../abis/Vester.json\";\nimport RewardRouter from \"../../abis/RewardRouter.json\";\nimport Token from \"../../abis/Token.json\";\nimport tlp24Icon from \"../../img/ic_mlp_24.svg\";\nimport tlp40Icon from \"../../img/ic_mlp_40.svg\";\nimport arrowIcon from \"../../img/ic_convert_down.svg\";\nimport \"./MlpSwap.css\";\nimport AssetDropdown from \"../../views/Dashboard/AssetDropdown\";\nimport { getAnalyticsEventStage } from \"../../utils/analytics\";\nimport { useInfoTokens } from \"src/hooks/useInfoTokens\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  AddressZero\n} = ethers.constants;\n\nfunction getStakingData(stakingInfo) {\n  if (!stakingInfo || stakingInfo.length === 0) {\n    return;\n  }\n\n  const keys = [\"stakedMlpTracker\", \"feeMlpTracker\"];\n  const data = {};\n  const propsLength = 5;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    data[key] = {\n      claimable: stakingInfo[i * propsLength],\n      tokensPerInterval: stakingInfo[i * propsLength + 1],\n      averageStakedAmounts: stakingInfo[i * propsLength + 2],\n      cumulativeRewards: stakingInfo[i * propsLength + 3],\n      totalSupply: stakingInfo[i * propsLength + 4]\n    };\n  }\n\n  return data;\n}\n\nexport default function MlpSwap(props) {\n  _s();\n\n  const {\n    savedSlippageAmount,\n    isBuying,\n    setPendingTxns,\n    connectWallet,\n    setIsBuying,\n    trackPageWithTraits,\n    trackAction,\n    analytics\n  } = props;\n  const history = useHistory();\n  const swapLabel = isBuying ? \"BuyMlp\" : \"SellMlp\";\n  const tabLabel = isBuying ? \"Buy MLP\" : \"Sell MLP\";\n  const {\n    active,\n    library,\n    account\n  } = useWeb3React();\n  const {\n    chainId\n  } = useChainId(); // const chainName = getChainName(chainId)\n\n  const tokens = getTokens(chainId);\n  const whitelistedTokens = getWhitelistedTokens(chainId);\n  const tokenList = whitelistedTokens.filter(t => !t.isWrapped);\n  const [swapValue, setSwapValue] = useState(\"\");\n  const [mlpValue, setMlpValue] = useState(\"\");\n  const [swapTokenAddress, setSwapTokenAddress] = useLocalStorageByChainId(chainId, `${swapLabel}-swap-token-address`, AddressZero); // Clear cache of deprecated token address\n\n  if (swapTokenAddress === \"0x6467A2ad44C49dB9788d60e82B3adE35CcA5c5C4\") {\n    setSwapTokenAddress(AddressZero);\n  }\n\n  const [isApproving, setIsApproving] = useState(false);\n  const [isWaitingForApproval, setIsWaitingForApproval] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [anchorOnSwapAmount, setAnchorOnSwapAmount] = useState(true);\n  const [feeBasisPoints, setFeeBasisPoints] = useState(\"\");\n  const readerAddress = getContract(chainId, \"Reader\");\n  const rewardReaderAddress = getContract(chainId, \"RewardReader\");\n  const vaultAddress = getContract(chainId, \"Vault\");\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n  const stakedMlpTrackerAddress = getContract(chainId, \"StakedMlpTracker\");\n  const feeMlpTrackerAddress = getContract(chainId, \"FeeMlpTracker\");\n  const usdgAddress = getContract(chainId, \"USDG\");\n  const mlpManagerAddress = getContract(chainId, \"MlpManager\");\n  const rewardRouterAddress = getContract(chainId, \"RewardRouter\");\n  const tokensForBalanceAndSupplyQuery = [stakedMlpTrackerAddress, usdgAddress];\n  const tokenAddresses = tokens.map(token => token.address);\n  const {\n    data: tokenBalances\n  } = useSWR([`MlpSwap:getTokenBalances:${active}`, chainId, readerAddress, \"getTokenBalances\", account || PLACEHOLDER_ACCOUNT], {\n    fetcher: fetcher(library, ReaderV2, [tokenAddresses])\n  });\n  const {\n    data: balancesAndSupplies\n  } = useSWR([`MlpSwap:getTokenBalancesWithSupplies:${active}`, chainId, readerAddress, \"getTokenBalancesWithSupplies\", account || PLACEHOLDER_ACCOUNT], {\n    fetcher: fetcher(library, ReaderV2, [tokensForBalanceAndSupplyQuery])\n  });\n  const {\n    data: aums\n  } = useSWR([`MlpSwap:getAums:${active}`, chainId, mlpManagerAddress, \"getAums\"], {\n    fetcher: fetcher(library, MlpManager)\n  });\n  const {\n    data: totalTokenWeights\n  } = useSWR([`MlpSwap:totalTokenWeights:${active}`, chainId, vaultAddress, \"totalTokenWeights\"], {\n    fetcher: fetcher(library, VaultV2)\n  });\n  const tokenAllowanceAddress = swapTokenAddress === AddressZero ? nativeTokenAddress : swapTokenAddress;\n  const {\n    data: tokenAllowance\n  } = useSWR([active, chainId, tokenAllowanceAddress, \"allowance\", account || PLACEHOLDER_ACCOUNT, mlpManagerAddress], {\n    fetcher: fetcher(library, Token)\n  });\n  const {\n    data: lastPurchaseTime\n  } = useSWR([`MlpSwap:lastPurchaseTime:${active}`, chainId, mlpManagerAddress, \"lastAddedAt\", account || PLACEHOLDER_ACCOUNT], {\n    fetcher: fetcher(library, MlpManager)\n  });\n  const {\n    data: mlpBalance\n  } = useSWR([`MlpSwap:mlpBalance:${active}`, chainId, feeMlpTrackerAddress, \"stakedAmounts\", account || PLACEHOLDER_ACCOUNT], {\n    fetcher: fetcher(library, RewardTracker)\n  });\n  const mlpVesterAddress = getContract(chainId, \"MlpVester\");\n  const {\n    data: reservedAmount\n  } = useSWR([`MlpSwap:reservedAmount:${active}`, chainId, mlpVesterAddress, \"pairAmounts\", account || PLACEHOLDER_ACCOUNT], {\n    fetcher: fetcher(library, Vester)\n  });\n  const {\n    mycPrice\n  } = useMYCPrice(chainId, {\n    arbitrum: chainId === ARBITRUM ? library : undefined\n  }, active);\n  const rewardTrackersForStakingInfo = [stakedMlpTrackerAddress, feeMlpTrackerAddress];\n  const {\n    data: stakingInfo\n  } = useSWR([`MlpSwap:stakingInfo:${active}`, chainId, rewardReaderAddress, \"getStakingInfo\", account || PLACEHOLDER_ACCOUNT], {\n    fetcher: fetcher(library, RewardReader, [rewardTrackersForStakingInfo])\n  });\n  const stakingData = getStakingData(stakingInfo);\n  const redemptionTime = lastPurchaseTime ? lastPurchaseTime.add(MLP_COOLDOWN_DURATION) : undefined;\n  const inCooldownWindow = redemptionTime && parseInt(Date.now() / 1000) < redemptionTime;\n  const mlpSupply = balancesAndSupplies ? balancesAndSupplies[1] : bigNumberify(0);\n  const usdgSupply = balancesAndSupplies ? balancesAndSupplies[3] : bigNumberify(0);\n  let aum;\n\n  if (aums && aums.length > 0) {\n    aum = isBuying ? aums[0] : aums[1];\n  }\n\n  const mlpPrice = aum && aum.gt(0) && mlpSupply.gt(0) ? aum.mul(expandDecimals(1, MLP_DECIMALS)).div(mlpSupply) : expandDecimals(1, USD_DECIMALS);\n  let mlpBalanceUsd;\n\n  if (mlpBalance) {\n    mlpBalanceUsd = mlpBalance.mul(mlpPrice).div(expandDecimals(1, MLP_DECIMALS));\n  }\n\n  const mlpSupplyUsd = mlpSupply.mul(mlpPrice).div(expandDecimals(1, MLP_DECIMALS));\n  let reserveAmountUsd;\n\n  if (reservedAmount) {\n    reserveAmountUsd = reservedAmount.mul(mlpPrice).div(expandDecimals(1, MLP_DECIMALS));\n  }\n\n  const {\n    infoTokens\n  } = useInfoTokens(library, chainId, active, tokenBalances, undefined);\n  const swapToken = getToken(chainId, swapTokenAddress);\n  const swapTokenInfo = getTokenInfo(infoTokens, swapTokenAddress);\n  const swapTokenBalance = swapTokenInfo && swapTokenInfo.balance ? swapTokenInfo.balance : bigNumberify(0);\n  const swapAmount = parseValue(swapValue, swapToken && swapToken.decimals);\n  const mlpAmount = parseValue(mlpValue, MLP_DECIMALS);\n  const needApproval = isBuying && swapTokenAddress !== AddressZero && tokenAllowance && swapAmount && swapAmount.gt(tokenAllowance);\n  const swapUsdMin = getUsd(swapAmount, swapTokenAddress, false, infoTokens);\n  const mlpUsdMax = mlpAmount && mlpPrice ? mlpAmount.mul(mlpPrice).div(expandDecimals(1, MLP_DECIMALS)) : undefined;\n  let isSwapTokenCapReached;\n\n  if (swapTokenInfo.managedUsd && swapTokenInfo.maxUsdgAmount) {\n    isSwapTokenCapReached = swapTokenInfo.managedUsd.gt(adjustForDecimals(swapTokenInfo.maxUsdgAmount, USDG_DECIMALS, USD_DECIMALS));\n  }\n\n  const onSwapValueChange = e => {\n    setAnchorOnSwapAmount(true);\n    setSwapValue(e.target.value);\n  };\n\n  const onMlpValueChange = e => {\n    setAnchorOnSwapAmount(false);\n    setMlpValue(e.target.value);\n  };\n\n  const onSelectSwapToken = token => {\n    setSwapTokenAddress(token.address);\n    setIsWaitingForApproval(false);\n  };\n\n  const nativeToken = getTokenInfo(infoTokens, AddressZero);\n  let totalApr = bigNumberify(0);\n  let feeMlpTrackerAnnualRewardsUsd;\n  let feeMlpTrackerApr;\n\n  if (stakingData && stakingData.feeMlpTracker && stakingData.feeMlpTracker.tokensPerInterval && nativeToken && nativeToken.minPrice && mlpSupplyUsd && mlpSupplyUsd.gt(0)) {\n    feeMlpTrackerAnnualRewardsUsd = stakingData.feeMlpTracker.tokensPerInterval.mul(SECONDS_PER_YEAR).mul(nativeToken.minPrice).div(expandDecimals(1, 18));\n    feeMlpTrackerApr = feeMlpTrackerAnnualRewardsUsd.mul(BASIS_POINTS_DIVISOR).div(mlpSupplyUsd);\n  }\n\n  let stakedMlpTrackerAnnualRewardsUsd;\n  let stakedMlpTrackerApr;\n\n  if (mycPrice && stakingData && stakingData.stakedMlpTracker && stakingData.stakedMlpTracker.tokensPerInterval && mlpSupplyUsd && mlpSupplyUsd.gt(0)) {\n    stakedMlpTrackerAnnualRewardsUsd = stakingData.stakedMlpTracker.tokensPerInterval.mul(SECONDS_PER_YEAR).mul(mycPrice).div(expandDecimals(1, 18));\n    stakedMlpTrackerApr = stakedMlpTrackerAnnualRewardsUsd.mul(BASIS_POINTS_DIVISOR).div(mlpSupplyUsd);\n  }\n\n  if (stakedMlpTrackerApr && feeMlpTrackerApr) {\n    totalApr = totalApr.add(feeMlpTrackerApr).add(stakedMlpTrackerApr);\n  }\n\n  useEffect(() => {\n    const updateSwapAmounts = () => {\n      if (anchorOnSwapAmount) {\n        if (!swapAmount) {\n          setMlpValue(\"\");\n          setFeeBasisPoints(\"\");\n          return;\n        }\n\n        if (isBuying) {\n          const {\n            amount: nextAmount,\n            feeBasisPoints: feeBps\n          } = getBuyMlpToAmount(swapAmount, swapTokenAddress, infoTokens, mlpPrice, usdgSupply, totalTokenWeights);\n          const nextValue = formatAmountFree(nextAmount, MLP_DECIMALS, MLP_DECIMALS);\n          setMlpValue(nextValue);\n          setFeeBasisPoints(feeBps);\n        } else {\n          const {\n            amount: nextAmount,\n            feeBasisPoints: feeBps\n          } = getSellMlpFromAmount(swapAmount, swapTokenAddress, infoTokens, mlpPrice, usdgSupply, totalTokenWeights);\n          const nextValue = formatAmountFree(nextAmount, MLP_DECIMALS, MLP_DECIMALS);\n          setMlpValue(nextValue);\n          setFeeBasisPoints(feeBps);\n        }\n\n        return;\n      }\n\n      if (!mlpAmount) {\n        setSwapValue(\"\");\n        setFeeBasisPoints(\"\");\n        return;\n      }\n\n      if (swapToken) {\n        if (isBuying) {\n          const {\n            amount: nextAmount,\n            feeBasisPoints: feeBps\n          } = getBuyMlpFromAmount(mlpAmount, swapTokenAddress, infoTokens, mlpPrice, usdgSupply, totalTokenWeights);\n          const nextValue = formatAmountFree(nextAmount, swapToken.decimals, swapToken.decimals);\n          setSwapValue(nextValue);\n          setFeeBasisPoints(feeBps);\n        } else {\n          const {\n            amount: nextAmount,\n            feeBasisPoints: feeBps\n          } = getSellMlpToAmount(mlpAmount, swapTokenAddress, infoTokens, mlpPrice, usdgSupply, totalTokenWeights, true);\n          const nextValue = formatAmountFree(nextAmount, swapToken.decimals, swapToken.decimals);\n          setSwapValue(nextValue);\n          setFeeBasisPoints(feeBps);\n        }\n      }\n    };\n\n    updateSwapAmounts();\n  }, [isBuying, anchorOnSwapAmount, swapAmount, mlpAmount, swapToken, swapTokenAddress, infoTokens, mlpPrice, usdgSupply, totalTokenWeights]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const switchSwapOption = function () {\n    let hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    history.push(`${history.location.pathname}#${hash}`);\n    props.setIsBuying(hash === \"redeem\" ? false : true);\n  };\n\n  const fillMaxAmount = () => {\n    if (isBuying) {\n      setAnchorOnSwapAmount(true);\n      setSwapValue(formatAmountFree(swapTokenBalance, swapToken.decimals, swapToken.decimals));\n      return;\n    }\n\n    setAnchorOnSwapAmount(false);\n    setMlpValue(formatAmountFree(maxSellAmount, MLP_DECIMALS, MLP_DECIMALS));\n  };\n\n  const getError = () => {\n    var _gasTokenInfo$balance;\n\n    const gasTokenInfo = getTokenInfo(infoTokens, ethers.constants.AddressZero);\n\n    if ((_gasTokenInfo$balance = gasTokenInfo.balance) !== null && _gasTokenInfo$balance !== void 0 && _gasTokenInfo$balance.eq(0)) {\n      return [\"Not enough ETH for gas\"];\n    }\n\n    if (!isBuying && inCooldownWindow) {\n      return [`Redemption time not yet reached`];\n    }\n\n    if (!swapAmount || swapAmount.eq(0)) {\n      return [\"Enter an amount\"];\n    }\n\n    if (!mlpAmount || mlpAmount.eq(0)) {\n      return [\"Enter an amount\"];\n    }\n\n    if (isBuying) {\n      const swapTokenInfo = getTokenInfo(infoTokens, swapTokenAddress);\n\n      if (swapTokenInfo && swapTokenInfo.balance && swapAmount && swapAmount.gt(swapTokenInfo.balance)) {\n        return [`Insufficient ${swapTokenInfo.symbol} balance`];\n      }\n\n      if (swapTokenInfo.maxUsdgAmount && swapTokenInfo.usdgAmount && swapUsdMin) {\n        const usdgFromAmount = adjustForDecimals(swapUsdMin, USD_DECIMALS, USDG_DECIMALS);\n        const nextUsdgAmount = swapTokenInfo.usdgAmount.add(usdgFromAmount);\n\n        if (swapTokenInfo.maxUsdgAmount.gt(0) && nextUsdgAmount.gt(swapTokenInfo.maxUsdgAmount)) {\n          return [`${swapTokenInfo.symbol} pool exceeded, try different token`, true];\n        }\n      }\n    }\n\n    if (!isBuying) {\n      if (maxSellAmount && mlpAmount && mlpAmount.gt(maxSellAmount)) {\n        return [`Insufficient MLP balance`];\n      }\n\n      const swapTokenInfo = getTokenInfo(infoTokens, swapTokenAddress);\n\n      if (swapTokenInfo && swapTokenInfo.availableAmount && swapAmount && swapAmount.gt(swapTokenInfo.availableAmount)) {\n        return [`Insufficient liquidity`];\n      }\n    }\n\n    return [false];\n  };\n\n  const isPrimaryEnabled = () => {\n    if (!active) {\n      return true;\n    }\n\n    const [error, modal] = getError();\n\n    if (error && !modal) {\n      return false;\n    }\n\n    if (needApproval && isWaitingForApproval || isApproving) {\n      return false;\n    }\n\n    if (isApproving) {\n      return false;\n    }\n\n    if (isSubmitting) {\n      return false;\n    }\n\n    if (isSwapTokenCapReached && isBuying) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const getPrimaryText = () => {\n    if (!active) {\n      return \"Connect Wallet\";\n    }\n\n    const [error, modal] = getError();\n\n    if (error && !modal) {\n      return error;\n    }\n\n    if (isBuying && isSwapTokenCapReached) {\n      return `Max Capacity for ${swapToken.symbol} Reached`;\n    }\n\n    if (needApproval && isWaitingForApproval) {\n      return \"Waiting for Approval\";\n    }\n\n    if (isApproving) {\n      return `Approving ${swapToken.symbol}...`;\n    }\n\n    if (needApproval) {\n      return `Approve ${swapToken.symbol}`;\n    }\n\n    if (isSubmitting) {\n      return isBuying ? `Buying...` : `Selling...`;\n    }\n\n    return isBuying ? \"Buy MLP\" : \"Sell MLP\";\n  };\n\n  const approveFromToken = () => {\n    approveTokens({\n      setIsApproving,\n      library,\n      tokenAddress: swapToken.address,\n      spender: mlpManagerAddress,\n      chainId: chainId,\n      onApproveSubmitted: () => {\n        setIsWaitingForApproval(true);\n      },\n      infoTokens,\n      getTokenInfo\n    });\n  };\n\n  const buyMlp = () => {\n    setIsSubmitting(true);\n    const minMlp = mlpAmount.mul(BASIS_POINTS_DIVISOR - savedSlippageAmount).div(BASIS_POINTS_DIVISOR);\n    const contract = new ethers.Contract(rewardRouterAddress, RewardRouter.abi, library.getSigner());\n    const method = swapTokenAddress === AddressZero ? \"mintAndStakeMlpETH\" : \"mintAndStakeMlp\";\n    const params = swapTokenAddress === AddressZero ? [0, minMlp] : [swapTokenAddress, swapAmount, 0, minMlp];\n    const value = swapTokenAddress === AddressZero ? swapAmount : 0;\n    callContract(chainId, contract, method, params, {\n      value,\n      sentMsg: \"Buy submitted.\",\n      failMsg: \"Buy failed.\",\n      successMsg: `${formatAmount(mlpAmount, 18, 4, true)} MLP bought with ${formatAmount(swapAmount, swapTokenInfo.decimals, 4, true)} ${swapTokenInfo.symbol}!`,\n      setPendingTxns\n    }).then(async () => {\n      trackMlpTrade(3, \"Buy MLP\");\n    }).finally(() => {\n      setIsSubmitting(false);\n    });\n  };\n\n  const sellMlp = () => {\n    setIsSubmitting(true);\n    const minOut = swapAmount.mul(BASIS_POINTS_DIVISOR - savedSlippageAmount).div(BASIS_POINTS_DIVISOR);\n    const contract = new ethers.Contract(rewardRouterAddress, RewardRouter.abi, library.getSigner());\n    const method = swapTokenAddress === AddressZero ? \"unstakeAndRedeemMlpETH\" : \"unstakeAndRedeemMlp\";\n    const params = swapTokenAddress === AddressZero ? [mlpAmount, minOut, account] : [swapTokenAddress, mlpAmount, minOut, account];\n    callContract(chainId, contract, method, params, {\n      sentMsg: \"Sell submitted!\",\n      failMsg: \"Sell failed.\",\n      successMsg: `${formatAmount(mlpAmount, 18, 4, true)} MLP sold for ${formatAmount(swapAmount, swapTokenInfo.decimals, 4, true)} ${swapTokenInfo.symbol}!`,\n      setPendingTxns\n    }).then(async () => {\n      trackMlpTrade(3, \"Sell MLP\");\n    }).finally(() => {\n      setIsSubmitting(false);\n    });\n  };\n\n  const onClickPrimary = () => {\n    if (!active) {\n      connectWallet();\n      return;\n    }\n\n    if (needApproval) {\n      approveFromToken();\n      return;\n    }\n\n    const [, modal] = getError();\n\n    if (modal) {\n      return;\n    }\n\n    if (isBuying) {\n      buyMlp();\n    } else {\n      sellMlp();\n    }\n  };\n\n  let payLabel = \"Pay\";\n  let receiveLabel = \"Receive\";\n  let payBalance = \"$0.00\";\n  let receiveBalance = \"$0.00\";\n\n  if (isBuying) {\n    if (swapUsdMin) {\n      payBalance = `$${formatAmount(swapUsdMin, USD_DECIMALS, 2, true)}`;\n    }\n\n    if (mlpUsdMax) {\n      receiveBalance = `$${formatAmount(mlpUsdMax, USD_DECIMALS, 2, true)}`;\n    }\n  } else {\n    if (mlpUsdMax) {\n      payBalance = `$${formatAmount(mlpUsdMax, USD_DECIMALS, 2, true)}`;\n    }\n\n    if (swapUsdMin) {\n      receiveBalance = `$${formatAmount(swapUsdMin, USD_DECIMALS, 2, true)}`;\n    }\n  }\n\n  const selectToken = token => {\n    setAnchorOnSwapAmount(false);\n    setSwapTokenAddress(token.address);\n    helperToast.success(`${token.symbol} selected in order form`);\n  };\n\n  let feePercentageText = formatAmount(feeBasisPoints, 2, 2, true, \"-\");\n\n  if (feeBasisPoints !== undefined && feeBasisPoints.toString().length > 0) {\n    feePercentageText += \"%\";\n  }\n\n  let maxSellAmount = mlpBalance;\n\n  if (mlpBalance && reservedAmount) {\n    maxSellAmount = mlpBalance.sub(reservedAmount);\n  }\n\n  const wrappedTokenSymbol = getWrappedToken(chainId).symbol;\n  const nativeTokenSymbol = getNativeToken(chainId).symbol;\n\n  const onSwapOptionChange = opt => {\n    if (opt === \"Sell MLP\") {\n      switchSwapOption(\"redeem\");\n    } else {\n      switchSwapOption();\n    }\n  };\n\n  const trackMlpTrade = (stage, tradeType) => {\n    const eventName = getAnalyticsEventStage(stage);\n    const isBuy = tradeType.includes(\"Buy\");\n\n    try {\n      var _receiveBalance;\n\n      const feePercentage = formatAmount(feeBasisPoints, 2, 2, false, \"-\");\n      const feesUsd = parseFloat(payBalance.replace(\"$\", \"\")) * parseFloat(feePercentage) / 100;\n      const feesEth = swapValue * parseFloat(feePercentage) / 100;\n      const amountToPay = isBuy ? swapValue : mlpValue;\n      const amountToReceive = isBuy ? mlpValue : swapValue;\n      const amountToReceiveUsd = (_receiveBalance = receiveBalance) === null || _receiveBalance === void 0 ? void 0 : _receiveBalance.replace(\"$\", \"\");\n      const tokenToPay = isBuy ? swapTokenInfo.symbol : \"MLP\";\n      const tokenToReceive = isBuy ? \"MLP\" : swapTokenInfo.symbol;\n      const [userBalances, tokenPrices, poolBalances] = getUserTokenBalances(infoTokens);\n      const traits = {\n        actionType: \"Create\",\n        transactionType: isBuy ? \"Buy\" : \"Sell\",\n        amountToReceiveUsd: parseFloat(amountToReceiveUsd),\n        tradeType: tradeType,\n        tokenToPay: tokenToPay,\n        tokenToReceive: tokenToReceive,\n        amountToPay: parseFloat(amountToPay),\n        amountToReceive: parseFloat(amountToReceive),\n        balance: parseFloat(formatAmount(swapTokenBalance, swapToken.decimals, 4, false)),\n        balanceToken: swapToken.symbol,\n        feesUsd: feesUsd.toFixed(2),\n        feesEth: parseFloat(feesEth).toFixed(8),\n        walletAddress: account,\n        network: NETWORK_NAME[chainId],\n        ...userBalances,\n        ...tokenPrices,\n        ...poolBalances\n      };\n      trackAction && trackAction(eventName, traits);\n    } catch (err) {\n      console.error(`Unable to track ${eventName} event`, err);\n    }\n  };\n\n  const [pageTracked, setPageTracked] = useState(false);\n  const dataElements = [chainId, isBuying, pageTracked, swapTokenAddress, history.location.hash];\n  const elementsLoaded = dataElements.every(element => element !== undefined); // Segment Analytics Page tracking\n\n  useEffect(() => {\n    if (elementsLoaded && analytics && !pageTracked) {\n      // If page hash is #redeem, then user is Buying\n      const hash = history.location.hash.replace(\"#\", \"\");\n      const isBuying = hash === \"redeem\" ? false : true; // Swap pay and receive tokens depending on isBuying\n\n      const tokenToPay = isBuying ? getToken(chainId, swapTokenAddress).symbol : \"MLP\";\n      const tokenToReceive = isBuying ? \"MLP\" : getToken(chainId, swapTokenAddress).symbol;\n      const traits = {\n        action: isBuying ? \"Buy\" : \"Sell\",\n        tokenToPay: tokenToPay,\n        tokenToReceive: tokenToReceive\n      };\n      trackPageWithTraits(traits);\n      setPageTracked(true); // Prevent Page function being called twice\n    }\n  }, [chainId, isBuying, pageTracked, swapTokenAddress, elementsLoaded, trackPageWithTraits, history.location.hash, analytics]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MlpSwap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MlpSwap-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-card MlpSwap-stats-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-card-title\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-card-title-mark\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"App-card-title-mark-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: tlp40Icon,\n                alt: \"tlp40Icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"App-card-title-mark-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-card-title-mark-title\",\n                children: \"MLP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-card-title-mark-subtitle\",\n                children: \"MLP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-card-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-card-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: [\"$\", formatAmount(mlpPrice, USD_DECIMALS, 3, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-card-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: [formatAmount(mlpBalance, MLP_DECIMALS, 4, true), \" MLP ($\", formatAmount(mlpBalanceUsd, USD_DECIMALS, 2, true), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-card-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Staked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: [formatAmount(mlpBalance, MLP_DECIMALS, 4, true), \" MLP ($\", formatAmount(mlpBalanceUsd, USD_DECIMALS, 2, true), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-card-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-card-content Totals-section\",\n          children: [!isBuying && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-card-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Reserved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                handle: `${formatAmount(reservedAmount, 18, 4, true)} MLP ($${formatAmount(reserveAmountUsd, USD_DECIMALS, 2, true)})`,\n                position: \"right-bottom\",\n                renderContent: () => `${formatAmount(reservedAmount, 18, 4, true)} MLP have been reserved for vesting.`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-card-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Total APR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                handle: `${formatAmount(totalApr, 2, 2, true)}%`,\n                position: \"right-bottom\",\n                renderContent: () => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"Tooltip-row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"label\",\n                        children: [nativeTokenSymbol, \" (\", wrappedTokenSymbol, \") APR\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 836,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [formatAmount(feeMlpTrackerApr, 2, 2, false), \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 839,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 835,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"Tooltip-row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"label\",\n                        children: \"esMYC APR\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 842,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [formatAmount(stakedMlpTrackerApr, 2, 2, false), \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 843,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 841,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-card-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Total Supply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value\",\n              children: [formatAmount(mlpSupply, MLP_DECIMALS, 4, true), \" MLP ($\", formatAmount(mlpSupplyUsd, USD_DECIMALS, 2, true), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Insurance-btn-container\",\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              handle: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://core.riskharbor.com/pool/arbitrum/0xbcA81A2118982182d897845571BE950aE94C619c/4\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"App-button-option App-card-option Insurance-btn\",\n                  children: \"MLP Insurance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 866,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 19\n              }, this),\n              position: \"left-top\",\n              renderContent: () => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Tooltip-row\",\n                  children: \"Risk Harbor Insurance for fsMLP.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 871,\n                  columnNumber: 26\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MlpSwap-box App-box\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          options: [\"Buy MLP\", \"Sell MLP\"],\n          option: tabLabel,\n          onChange: onSwapOptionChange,\n          className: \"Exchange-swap-option-tabs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 11\n        }, this), isBuying && /*#__PURE__*/_jsxDEV(BuyInputSection, {\n          topLeftLabel: payLabel,\n          topRightLabel: `Balance: `,\n          tokenBalance: `${formatAmount(swapTokenBalance, swapToken.decimals, 4, true)}`,\n          inputValue: swapValue,\n          onInputValueChange: onSwapValueChange,\n          showMaxButton: swapValue !== formatAmountFree(swapTokenBalance, swapToken.decimals, swapToken.decimals),\n          onClickTopRightLabel: fillMaxAmount,\n          onClickMax: fillMaxAmount,\n          selectedToken: swapToken,\n          balance: payBalance,\n          trackAction: trackAction,\n          tabLabel: tabLabel,\n          children: /*#__PURE__*/_jsxDEV(TokenSelector, {\n            label: \"Pay\",\n            chainId: chainId,\n            tokenAddress: swapTokenAddress,\n            onSelectToken: onSelectSwapToken,\n            tokens: whitelistedTokens,\n            infoTokens: infoTokens,\n            className: \"MlpSwap-from-token\",\n            showSymbolImage: true,\n            showTokenImgInDropdown: true,\n            trackAction: trackAction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 13\n        }, this), !isBuying && /*#__PURE__*/_jsxDEV(BuyInputSection, {\n          topLeftLabel: payLabel,\n          topRightLabel: `Available: `,\n          tokenBalance: `${formatAmount(maxSellAmount, MLP_DECIMALS, 4, true)}`,\n          inputValue: mlpValue,\n          onInputValueChange: onMlpValueChange,\n          showMaxButton: mlpValue !== formatAmountFree(maxSellAmount, MLP_DECIMALS, MLP_DECIMALS),\n          onClickTopRightLabel: fillMaxAmount,\n          onClickMax: fillMaxAmount,\n          balance: payBalance,\n          defaultTokenName: \"MLP\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-token\",\n            children: [\"MLP \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: tlp24Icon,\n              alt: \"tlp24Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AppOrder-ball-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AppOrder-ball\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: arrowIcon,\n              alt: \"arrowIcon\",\n              onClick: () => {\n                setIsBuying(!isBuying);\n                switchSwapOption(isBuying ? \"redeem\" : \"\");\n                trackAction && trackAction(\"Button clicked\", {\n                  buttonName: `Swap action - ${isBuying ? \"Sell MLP\" : \"Buy MLP\"}`\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 11\n        }, this), isBuying && /*#__PURE__*/_jsxDEV(BuyInputSection, {\n          topLeftLabel: receiveLabel,\n          topRightLabel: `Balance: `,\n          tokenBalance: `${formatAmount(mlpBalance, MLP_DECIMALS, 4, true)}`,\n          inputValue: mlpValue,\n          onInputValueChange: onMlpValueChange,\n          balance: receiveBalance,\n          defaultTokenName: \"MLP\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-token\",\n            children: [\"MLP \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: tlp24Icon,\n              alt: \"tlp24Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 13\n        }, this), !isBuying && /*#__PURE__*/_jsxDEV(BuyInputSection, {\n          topLeftLabel: receiveLabel,\n          topRightLabel: `Balance: `,\n          tokenBalance: `${formatAmount(swapTokenBalance, swapToken.decimals, 4, true)}`,\n          inputValue: swapValue,\n          onInputValueChange: onSwapValueChange,\n          balance: receiveBalance,\n          selectedToken: swapToken,\n          trackAction: trackAction,\n          tabLabel: tabLabel,\n          children: /*#__PURE__*/_jsxDEV(TokenSelector, {\n            label: \"Receive\",\n            chainId: chainId,\n            tokenAddress: swapTokenAddress,\n            onSelectToken: onSelectSwapToken,\n            tokens: whitelistedTokens,\n            infoTokens: infoTokens,\n            className: \"MlpSwap-from-token\",\n            showSymbolImage: true,\n            showTokenImgInDropdown: true,\n            trackAction: trackAction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Exchange-info-label\",\n              children: feeBasisPoints > 50 ? \"WARNING: High Fees\" : \"Fees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"align-right fee-block\",\n              children: [isBuying && /*#__PURE__*/_jsxDEV(Tooltip, {\n                handle: isBuying && isSwapTokenCapReached ? \"NA\" : feePercentageText,\n                position: \"right-bottom\",\n                renderContent: () => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [feeBasisPoints > 50 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"To reduce fees, select a different asset to pay with.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1003,\n                      columnNumber: 51\n                    }, this), \"Check the \\\"Save on Fees\\\" section below to get the lowest fee percentages.\"]\n                  }, void 0, true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 19\n              }, this), !isBuying && /*#__PURE__*/_jsxDEV(Tooltip, {\n                handle: feePercentageText,\n                position: \"right-bottom\",\n                renderContent: () => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [feeBasisPoints > 50 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"To reduce fees, select a different asset to receive.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1017,\n                      columnNumber: 51\n                    }, this), \"Check the \\\"Save on Fees\\\" section below to get the lowest fee percentages.\"]\n                  }, void 0, true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MlpSwap-cta Exchange-swap-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"App-cta Exchange-swap-button\",\n            onClick: () => {\n              const buttonText = getPrimaryText();\n              onClickPrimary();\n\n              if (!buttonText.includes(\"Connect\")) {\n                if (buttonText.includes(\"Approve\")) {\n                  trackMlpTrade(1, buttonText.split(\" \")[1]); // Get token symbol\n\n                  trackAction && trackAction(\"Button clicked\", {\n                    buttonName: \"Approve\",\n                    fromToken: buttonText.split(\" \")[1]\n                  });\n                } else {\n                  trackMlpTrade(2, buttonText);\n                  trackAction && trackAction(\"Button clicked\", {\n                    buttonName: buttonText\n                  });\n                }\n              }\n            },\n            disabled: !isPrimaryEnabled(),\n            children: getPrimaryText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tab-title-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Page-title\",\n        children: \"Save on Fees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 9\n      }, this), isBuying && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Page-description\",\n        children: [\"Fees may vary depending on which asset you use to buy MLP.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 13\n        }, this), \" Enter the amount of MLP you want to purchase in the order form, then check here to compare fees.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 11\n      }, this), !isBuying && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Page-description\",\n        children: [\"Fees may vary depending on which asset you sell MLP for.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 13\n        }, this), \" Enter the amount of MLP you want to redeem in the order form, then check here to compare fees.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MlpSwap-token-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"token-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1078,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: isBuying ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                handle: \"Available\",\n                tooltipIconPosition: \"right\",\n                position: \"right-bottom text-none\",\n                renderContent: () => \"Available amount to deposit into MLP.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n                handle: \"Available\",\n                tooltipIconPosition: \"right\",\n                position: \"right-bottom text-none\",\n                renderContent: () => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Available amount to withdraw from MLP.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1095,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Funds not utilized by current open positions.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1096,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1088,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1079,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                handle: \"Fees\",\n                tooltipIconPosition: \"right\",\n                position: \"right-bottom text-none\",\n                renderContent: () => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Fees will be shown once you have entered an amount in the order form.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1112,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tokenList.map(token => {\n            var _tokenInfo$managedAmo;\n\n            let tokenFeeBps;\n\n            if (isBuying) {\n              const {\n                feeBasisPoints: feeBps\n              } = getBuyMlpFromAmount(mlpAmount, token.address, infoTokens, mlpPrice, usdgSupply, totalTokenWeights);\n              tokenFeeBps = feeBps;\n            } else {\n              const {\n                feeBasisPoints: feeBps\n              } = getSellMlpToAmount(mlpAmount, token.address, infoTokens, mlpPrice, usdgSupply, totalTokenWeights);\n              tokenFeeBps = feeBps;\n            }\n\n            const tokenInfo = getTokenInfo(infoTokens, token.address);\n            let managedUsd;\n\n            if (tokenInfo && tokenInfo.managedUsd) {\n              managedUsd = tokenInfo.managedUsd;\n            }\n\n            let availableAmountUsd;\n\n            if (tokenInfo && tokenInfo.minPrice && tokenInfo.availableAmount) {\n              availableAmountUsd = tokenInfo.availableAmount.mul(tokenInfo.minPrice).div(expandDecimals(1, token.decimals));\n            }\n\n            let balanceUsd;\n\n            if (tokenInfo && tokenInfo.minPrice && tokenInfo.balance) {\n              balanceUsd = tokenInfo.balance.mul(tokenInfo.minPrice).div(expandDecimals(1, token.decimals));\n            }\n\n            var tokenImage = null;\n\n            try {\n              tokenImage = require(\"../../img/ic_\" + token.symbol.toLowerCase() + \"_40.svg\");\n            } catch (error) {\n              console.error(error);\n            }\n\n            let isCapReached = (_tokenInfo$managedAmo = tokenInfo.managedAmount) === null || _tokenInfo$managedAmo === void 0 ? void 0 : _tokenInfo$managedAmo.gt(tokenInfo.maxUsdgAmount);\n            let amountLeftToDeposit;\n\n            if (tokenInfo.maxUsdgAmount && tokenInfo.maxUsdgAmount.gt(0)) {\n              amountLeftToDeposit = adjustForDecimals(tokenInfo.maxUsdgAmount, USDG_DECIMALS, USD_DECIMALS).sub(tokenInfo.managedUsd);\n            }\n\n            function renderFees() {\n              var _managedUsd, _managedUsd2;\n\n              const swapUrl = `https://app.uniswap.org/#/swap?inputCurrency=${token.address}&chain=arbitrum`;\n\n              switch (true) {\n                case isBuying && isCapReached || !isBuying && ((_managedUsd = managedUsd) === null || _managedUsd === void 0 ? void 0 : _managedUsd.lt(1)):\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    handle: \"NA\",\n                    position: \"right-bottom\",\n                    renderContent: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Max pool capacity reached for \", tokenInfo.symbol, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1187,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1188,\n                        columnNumber: 29\n                      }, this), \"Please mint MLP using another token\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1190,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          href: swapUrl,\n                          target: \"_blank\",\n                          rel: \"noreferrer\",\n                          children: [\"Swap on \", chainId === ARBITRUM ? \"Uniswap\" : \"Trader Joe\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1192,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1191,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1185,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1181,\n                    columnNumber: 23\n                  }, this);\n\n                case isBuying && !isCapReached || !isBuying && ((_managedUsd2 = managedUsd) === null || _managedUsd2 === void 0 ? void 0 : _managedUsd2.gt(0)):\n                  return `${formatAmount(tokenFeeBps, 2, 2, true, \"-\")}${tokenFeeBps !== undefined && tokenFeeBps.toString().length > 0 ? \"%\" : \"\"}`;\n\n                default:\n                  return \"\";\n              }\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"App-card-title-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"App-card-title-info-icon\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: tokenImage && tokenImage.default,\n                      alt: token.symbol,\n                      width: \"40px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1214,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1213,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"App-card-title-info-text\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"App-card-info-title\",\n                      children: token.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1217,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"App-card-info-subtitle\",\n                      children: token.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1218,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1216,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(AssetDropdown, {\n                      assetSymbol: token.symbol,\n                      assetInfo: token,\n                      trackAction: trackAction\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1221,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1220,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1212,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", formatKeyAmount(tokenInfo, \"minPrice\", USD_DECIMALS, 2, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [isBuying && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    handle: amountLeftToDeposit && amountLeftToDeposit.lt(0) ? \"$0.00\" : `$${formatAmount(amountLeftToDeposit, USD_DECIMALS, 2, true)}`,\n                    position: \"right-bottom\",\n                    tooltipIconPosition: \"right\",\n                    renderContent: () => {\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"Current Pool Amount: $\", formatAmount(managedUsd, USD_DECIMALS, 2, true), \" (\", formatKeyAmount(tokenInfo, \"poolAmount\", token.decimals, 2, true), \" \", token.symbol, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1242,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1243,\n                          columnNumber: 33\n                        }, this), \"Max Pool Capacity: $\", formatAmount(tokenInfo.maxUsdgAmount, 18, 0, true)]\n                      }, void 0, true);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1229,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1228,\n                  columnNumber: 23\n                }, this), !isBuying && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [formatKeyAmount(tokenInfo, \"availableAmount\", token.decimals, 2, true), \" \", token.symbol, \" ($\", formatAmount(availableAmountUsd, USD_DECIMALS, 2, true), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1252,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [formatKeyAmount(tokenInfo, \"balance\", tokenInfo.decimals, 2, true), \" \", tokenInfo.symbol, \" ($\", formatAmount(balanceUsd, USD_DECIMALS, 2, true), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: renderFees()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: cx(\"App-button-option action-btn\", isBuying ? \"buying\" : \"selling\"),\n                  onClick: () => {\n                    selectToken(token);\n                    trackAction && trackAction(\"Button clicked\", {\n                      buttonName: isBuying ? \"Buy with \" + token.symbol : \"Sell for \" + token.symbol\n                    });\n                  },\n                  children: isBuying ? \"Buy with \" + token.symbol : \"Sell for \" + token.symbol\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1264,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1263,\n                columnNumber: 19\n              }, this)]\n            }, token.symbol, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1210,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"token-grid\",\n        children: tokenList.map(token => {\n          var _tokenInfo$managedAmo2;\n\n          let tokenFeeBps;\n\n          if (isBuying) {\n            const {\n              feeBasisPoints: feeBps\n            } = getBuyMlpFromAmount(mlpAmount, token.address, infoTokens, mlpPrice, usdgSupply, totalTokenWeights);\n            tokenFeeBps = feeBps;\n          } else {\n            const {\n              feeBasisPoints: feeBps\n            } = getSellMlpToAmount(mlpAmount, token.address, infoTokens, mlpPrice, usdgSupply, totalTokenWeights);\n            tokenFeeBps = feeBps;\n          }\n\n          const tokenInfo = getTokenInfo(infoTokens, token.address);\n          let managedUsd;\n\n          if (tokenInfo && tokenInfo.managedUsd) {\n            managedUsd = tokenInfo.managedUsd;\n          }\n\n          let availableAmountUsd;\n\n          if (tokenInfo && tokenInfo.minPrice && tokenInfo.availableAmount) {\n            availableAmountUsd = tokenInfo.availableAmount.mul(tokenInfo.minPrice).div(expandDecimals(1, token.decimals));\n          }\n\n          let balanceUsd;\n\n          if (tokenInfo && tokenInfo.minPrice && tokenInfo.balance) {\n            balanceUsd = tokenInfo.balance.mul(tokenInfo.minPrice).div(expandDecimals(1, token.decimals));\n          }\n\n          let amountLeftToDeposit;\n\n          if (tokenInfo.maxUsdgAmount && tokenInfo.maxUsdgAmount.gt(0)) {\n            amountLeftToDeposit = adjustForDecimals(tokenInfo.maxUsdgAmount, USDG_DECIMALS, USD_DECIMALS).sub(tokenInfo.managedUsd);\n          }\n\n          let isCapReached = (_tokenInfo$managedAmo2 = tokenInfo.managedAmount) === null || _tokenInfo$managedAmo2 === void 0 ? void 0 : _tokenInfo$managedAmo2.gt(tokenInfo.maxUsdgAmount);\n\n          function renderFees() {\n            var _managedUsd3, _managedUsd4;\n\n            switch (true) {\n              case isBuying && isCapReached || !isBuying && ((_managedUsd3 = managedUsd) === null || _managedUsd3 === void 0 ? void 0 : _managedUsd3.lt(1)):\n                return /*#__PURE__*/_jsxDEV(Tooltip, {\n                  handle: \"NA\",\n                  position: \"right-bottom\",\n                  renderContent: () => `Max pool capacity reached for ${tokenInfo.symbol}. Please mint MLP using another token`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1334,\n                  columnNumber: 21\n                }, this);\n\n              case isBuying && !isCapReached || !isBuying && ((_managedUsd4 = managedUsd) === null || _managedUsd4 === void 0 ? void 0 : _managedUsd4.gt(0)):\n                return `${formatAmount(tokenFeeBps, 2, 2, true, \"-\")}${tokenFeeBps !== undefined && tokenFeeBps.toString().length > 0 ? \"%\" : \"\"}`;\n\n              default:\n                return \"\";\n            }\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"App-card-title\",\n              children: token.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"App-card-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"App-card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-card-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"label\",\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1357,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"$\", formatKeyAmount(tokenInfo, \"minPrice\", USD_DECIMALS, 2, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1358,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1356,\n                columnNumber: 19\n              }, this), isBuying && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-card-row\",\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  className: \"label\",\n                  handle: \"Available\",\n                  position: \"left-bottom\",\n                  renderContent: () => \"Available amount to deposit into MLP.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1362,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    handle: amountLeftToDeposit && `$${formatAmount(amountLeftToDeposit, USD_DECIMALS, 2, true)}`,\n                    position: \"right-bottom\",\n                    tooltipIconPosition: \"right\",\n                    renderContent: () => {\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"Current Pool Amount: $\", formatAmount(managedUsd, USD_DECIMALS, 2, true), \" (\", formatKeyAmount(tokenInfo, \"poolAmount\", token.decimals, 2, true), \" \", token.symbol, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1378,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1379,\n                          columnNumber: 33\n                        }, this), \"Max Pool Capacity: $\", formatAmount(tokenInfo.maxUsdgAmount, 18, 0, true)]\n                      }, void 0, true);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1369,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1368,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1361,\n                columnNumber: 21\n              }, this), !isBuying && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-card-row\",\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  handle: \"Available\",\n                  position: \"left-bottom\",\n                  renderContent: () => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: \"Available amount to withdraw from MLP.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1396,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: \"Funds not utilized by current open positions.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1397,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1390,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [formatKeyAmount(tokenInfo, \"availableAmount\", token.decimals, 2, true), \" \", token.symbol, \" ($\", formatAmount(availableAmountUsd, USD_DECIMALS, 2, true), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1402,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1389,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-card-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"label\",\n                  children: \"Wallet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1410,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [formatKeyAmount(tokenInfo, \"balance\", tokenInfo.decimals, 2, true), \" \", tokenInfo.symbol, \" ($\", formatAmount(balanceUsd, USD_DECIMALS, 2, true), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1411,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1409,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-card-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"label\",\n                  children: tokenFeeBps ? \"Fees\" : /*#__PURE__*/_jsxDEV(Tooltip, {\n                    handle: `Fees`,\n                    renderContent: () => `Please enter an amount to see fee percentages`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1421,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1417,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: renderFees()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1427,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1416,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-card-divider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1429,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-card-options\",\n                children: [isBuying && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"App-button-option App-card-option\",\n                  onClick: () => selectToken(token),\n                  children: [\"Buy with \", token.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1432,\n                  columnNumber: 23\n                }, this), !isBuying && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"App-button-option App-card-option\",\n                  onClick: () => selectToken(token),\n                  children: [\"Sell for \", token.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1437,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1430,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1355,\n              columnNumber: 17\n            }, this)]\n          }, token.symbol, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1352,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1072,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 754,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MlpSwap, \"WOql+CfzIPN9HvlxWsYdLfnnwmQ=\", false, function () {\n  return [useHistory, useWeb3React, useChainId, useLocalStorageByChainId, useSWR, useSWR, useSWR, useSWR, useSWR, useSWR, useSWR, useSWR, useMYCPrice, useSWR, useInfoTokens];\n});\n\n_c = MlpSwap;\n\nvar _c;\n\n$RefreshReg$(_c, \"MlpSwap\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","useWeb3React","useSWR","ethers","Tab","cx","getToken","getTokens","getWhitelistedTokens","getWrappedToken","getNativeToken","getContract","helperToast","useLocalStorageByChainId","getTokenInfo","useChainId","expandDecimals","fetcher","bigNumberify","formatAmount","formatAmountFree","formatKeyAmount","getBuyMlpToAmount","getBuyMlpFromAmount","getSellMlpFromAmount","getSellMlpToAmount","parseValue","approveTokens","getUsd","adjustForDecimals","getUserTokenBalances","NETWORK_NAME","MLP_DECIMALS","USD_DECIMALS","BASIS_POINTS_DIVISOR","MLP_COOLDOWN_DURATION","SECONDS_PER_YEAR","USDG_DECIMALS","ARBITRUM","PLACEHOLDER_ACCOUNT","callContract","useMYCPrice","TokenSelector","BuyInputSection","Tooltip","ReaderV2","RewardReader","VaultV2","MlpManager","RewardTracker","Vester","RewardRouter","Token","AssetDropdown","getAnalyticsEventStage","useInfoTokens","AddressZero","constants","getStakingData","stakingInfo","length","keys","data","propsLength","i","key","claimable","tokensPerInterval","averageStakedAmounts","cumulativeRewards","totalSupply","MlpSwap","props","savedSlippageAmount","isBuying","setPendingTxns","connectWallet","setIsBuying","trackPageWithTraits","trackAction","analytics","history","swapLabel","tabLabel","active","library","account","chainId","tokens","whitelistedTokens","tokenList","filter","t","isWrapped","swapValue","setSwapValue","mlpValue","setMlpValue","swapTokenAddress","setSwapTokenAddress","isApproving","setIsApproving","isWaitingForApproval","setIsWaitingForApproval","isSubmitting","setIsSubmitting","anchorOnSwapAmount","setAnchorOnSwapAmount","feeBasisPoints","setFeeBasisPoints","readerAddress","rewardReaderAddress","vaultAddress","nativeTokenAddress","stakedMlpTrackerAddress","feeMlpTrackerAddress","usdgAddress","mlpManagerAddress","rewardRouterAddress","tokensForBalanceAndSupplyQuery","tokenAddresses","map","token","address","tokenBalances","balancesAndSupplies","aums","totalTokenWeights","tokenAllowanceAddress","tokenAllowance","lastPurchaseTime","mlpBalance","mlpVesterAddress","reservedAmount","mycPrice","arbitrum","undefined","rewardTrackersForStakingInfo","stakingData","redemptionTime","add","inCooldownWindow","parseInt","Date","now","mlpSupply","usdgSupply","aum","mlpPrice","gt","mul","div","mlpBalanceUsd","mlpSupplyUsd","reserveAmountUsd","infoTokens","swapToken","swapTokenInfo","swapTokenBalance","balance","swapAmount","decimals","mlpAmount","needApproval","swapUsdMin","mlpUsdMax","isSwapTokenCapReached","managedUsd","maxUsdgAmount","onSwapValueChange","e","target","value","onMlpValueChange","onSelectSwapToken","nativeToken","totalApr","feeMlpTrackerAnnualRewardsUsd","feeMlpTrackerApr","feeMlpTracker","minPrice","stakedMlpTrackerAnnualRewardsUsd","stakedMlpTrackerApr","stakedMlpTracker","updateSwapAmounts","amount","nextAmount","feeBps","nextValue","window","scrollTo","switchSwapOption","hash","push","location","pathname","fillMaxAmount","maxSellAmount","getError","gasTokenInfo","eq","symbol","usdgAmount","usdgFromAmount","nextUsdgAmount","availableAmount","isPrimaryEnabled","error","modal","getPrimaryText","approveFromToken","tokenAddress","spender","onApproveSubmitted","buyMlp","minMlp","contract","Contract","abi","getSigner","method","params","sentMsg","failMsg","successMsg","then","trackMlpTrade","finally","sellMlp","minOut","onClickPrimary","payLabel","receiveLabel","payBalance","receiveBalance","selectToken","success","feePercentageText","toString","sub","wrappedTokenSymbol","nativeTokenSymbol","onSwapOptionChange","opt","stage","tradeType","eventName","isBuy","includes","feePercentage","feesUsd","parseFloat","replace","feesEth","amountToPay","amountToReceive","amountToReceiveUsd","tokenToPay","tokenToReceive","userBalances","tokenPrices","poolBalances","traits","actionType","transactionType","balanceToken","toFixed","walletAddress","network","err","console","pageTracked","setPageTracked","dataElements","elementsLoaded","every","element","action","tlp40Icon","tlp24Icon","arrowIcon","buttonName","buttonText","split","fromToken","tokenFeeBps","tokenInfo","availableAmountUsd","balanceUsd","tokenImage","require","toLowerCase","isCapReached","managedAmount","amountLeftToDeposit","renderFees","swapUrl","lt","default","name"],"sources":["C:/Users/rober/Documents/copiaswaps-client/swaps-client/src/components/Mlp/MlpSwap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport useSWR from \"swr\";\nimport { ethers } from \"ethers\";\n\nimport Tab from \"../Tab/Tab\";\nimport cx from \"classnames\";\n\nimport { getToken, getTokens, getWhitelistedTokens, getWrappedToken, getNativeToken } from \"../../data/Tokens\";\nimport { getContract } from \"../../Addresses\";\nimport {\n  helperToast,\n  useLocalStorageByChainId,\n  getTokenInfo,\n  // getChainName,\n  useChainId,\n  expandDecimals,\n  fetcher,\n  bigNumberify,\n  formatAmount,\n  formatAmountFree,\n  formatKeyAmount,\n  // formatDateTime,\n  getBuyMlpToAmount,\n  getBuyMlpFromAmount,\n  getSellMlpFromAmount,\n  getSellMlpToAmount,\n  parseValue,\n  approveTokens,\n  getUsd,\n  adjustForDecimals,\n  getUserTokenBalances,\n  NETWORK_NAME,\n  MLP_DECIMALS,\n  USD_DECIMALS,\n  BASIS_POINTS_DIVISOR,\n  MLP_COOLDOWN_DURATION,\n  SECONDS_PER_YEAR,\n  USDG_DECIMALS,\n  ARBITRUM,\n  PLACEHOLDER_ACCOUNT,\n} from \"../../Helpers\";\n\nimport { callContract, useMYCPrice } from \"../../Api\";\n\nimport TokenSelector from \"../Exchange/TokenSelector\";\nimport BuyInputSection from \"../BuyInputSection/BuyInputSection\";\nimport Tooltip from \"../Tooltip/Tooltip\";\n\nimport ReaderV2 from \"../../abis/ReaderV2.json\";\nimport RewardReader from \"../../abis/RewardReader.json\";\nimport VaultV2 from \"../../abis/VaultV2.json\";\nimport MlpManager from \"../../abis/MlpManager.json\";\nimport RewardTracker from \"../../abis/RewardTracker.json\";\nimport Vester from \"../../abis/Vester.json\";\nimport RewardRouter from \"../../abis/RewardRouter.json\";\nimport Token from \"../../abis/Token.json\";\n\nimport tlp24Icon from \"../../img/ic_mlp_24.svg\";\nimport tlp40Icon from \"../../img/ic_mlp_40.svg\";\nimport arrowIcon from \"../../img/ic_convert_down.svg\";\n\nimport \"./MlpSwap.css\";\nimport AssetDropdown from \"../../views/Dashboard/AssetDropdown\";\nimport { getAnalyticsEventStage } from \"../../utils/analytics\";\nimport { useInfoTokens } from \"src/hooks/useInfoTokens\";\n\nconst { AddressZero } = ethers.constants;\n\nfunction getStakingData(stakingInfo) {\n  if (!stakingInfo || stakingInfo.length === 0) {\n    return;\n  }\n\n  const keys = [\"stakedMlpTracker\", \"feeMlpTracker\"];\n  const data = {};\n  const propsLength = 5;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    data[key] = {\n      claimable: stakingInfo[i * propsLength],\n      tokensPerInterval: stakingInfo[i * propsLength + 1],\n      averageStakedAmounts: stakingInfo[i * propsLength + 2],\n      cumulativeRewards: stakingInfo[i * propsLength + 3],\n      totalSupply: stakingInfo[i * propsLength + 4],\n    };\n  }\n\n  return data;\n}\n\nexport default function MlpSwap(props) {\n  const {\n    savedSlippageAmount,\n    isBuying,\n    setPendingTxns,\n    connectWallet,\n    setIsBuying,\n    trackPageWithTraits,\n    trackAction,\n    analytics,\n  } = props;\n  const history = useHistory();\n  const swapLabel = isBuying ? \"BuyMlp\" : \"SellMlp\";\n  const tabLabel = isBuying ? \"Buy MLP\" : \"Sell MLP\";\n  const { active, library, account } = useWeb3React();\n  const { chainId } = useChainId();\n  // const chainName = getChainName(chainId)\n  const tokens = getTokens(chainId);\n  const whitelistedTokens = getWhitelistedTokens(chainId);\n  const tokenList = whitelistedTokens.filter((t) => !t.isWrapped);\n  const [swapValue, setSwapValue] = useState(\"\");\n  const [mlpValue, setMlpValue] = useState(\"\");\n  const [swapTokenAddress, setSwapTokenAddress] = useLocalStorageByChainId(\n    chainId,\n    `${swapLabel}-swap-token-address`,\n    AddressZero\n  );\n  // Clear cache of deprecated token address\n  if (swapTokenAddress === \"0x6467A2ad44C49dB9788d60e82B3adE35CcA5c5C4\") {\n    setSwapTokenAddress(AddressZero);\n  }\n  const [isApproving, setIsApproving] = useState(false);\n  const [isWaitingForApproval, setIsWaitingForApproval] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [anchorOnSwapAmount, setAnchorOnSwapAmount] = useState(true);\n  const [feeBasisPoints, setFeeBasisPoints] = useState(\"\");\n\n  const readerAddress = getContract(chainId, \"Reader\");\n  const rewardReaderAddress = getContract(chainId, \"RewardReader\");\n  const vaultAddress = getContract(chainId, \"Vault\");\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n  const stakedMlpTrackerAddress = getContract(chainId, \"StakedMlpTracker\");\n  const feeMlpTrackerAddress = getContract(chainId, \"FeeMlpTracker\");\n  const usdgAddress = getContract(chainId, \"USDG\");\n  const mlpManagerAddress = getContract(chainId, \"MlpManager\");\n  const rewardRouterAddress = getContract(chainId, \"RewardRouter\");\n  const tokensForBalanceAndSupplyQuery = [stakedMlpTrackerAddress, usdgAddress];\n\n  const tokenAddresses = tokens.map((token) => token.address);\n  const { data: tokenBalances } = useSWR(\n    [`MlpSwap:getTokenBalances:${active}`, chainId, readerAddress, \"getTokenBalances\", account || PLACEHOLDER_ACCOUNT],\n    {\n      fetcher: fetcher(library, ReaderV2, [tokenAddresses]),\n    }\n  );\n\n  const { data: balancesAndSupplies } = useSWR(\n    [\n      `MlpSwap:getTokenBalancesWithSupplies:${active}`,\n      chainId,\n      readerAddress,\n      \"getTokenBalancesWithSupplies\",\n      account || PLACEHOLDER_ACCOUNT,\n    ],\n    {\n      fetcher: fetcher(library, ReaderV2, [tokensForBalanceAndSupplyQuery]),\n    }\n  );\n\n  const { data: aums } = useSWR([`MlpSwap:getAums:${active}`, chainId, mlpManagerAddress, \"getAums\"], {\n    fetcher: fetcher(library, MlpManager),\n  });\n\n  const { data: totalTokenWeights } = useSWR(\n    [`MlpSwap:totalTokenWeights:${active}`, chainId, vaultAddress, \"totalTokenWeights\"],\n    {\n      fetcher: fetcher(library, VaultV2),\n    }\n  );\n\n  const tokenAllowanceAddress = swapTokenAddress === AddressZero ? nativeTokenAddress : swapTokenAddress;\n  const { data: tokenAllowance } = useSWR(\n    [active, chainId, tokenAllowanceAddress, \"allowance\", account || PLACEHOLDER_ACCOUNT, mlpManagerAddress],\n    {\n      fetcher: fetcher(library, Token),\n    }\n  );\n\n  const { data: lastPurchaseTime } = useSWR(\n    [`MlpSwap:lastPurchaseTime:${active}`, chainId, mlpManagerAddress, \"lastAddedAt\", account || PLACEHOLDER_ACCOUNT],\n    {\n      fetcher: fetcher(library, MlpManager),\n    }\n  );\n\n  const { data: mlpBalance } = useSWR(\n    [`MlpSwap:mlpBalance:${active}`, chainId, feeMlpTrackerAddress, \"stakedAmounts\", account || PLACEHOLDER_ACCOUNT],\n    {\n      fetcher: fetcher(library, RewardTracker),\n    }\n  );\n\n  const mlpVesterAddress = getContract(chainId, \"MlpVester\");\n  const { data: reservedAmount } = useSWR(\n    [`MlpSwap:reservedAmount:${active}`, chainId, mlpVesterAddress, \"pairAmounts\", account || PLACEHOLDER_ACCOUNT],\n    {\n      fetcher: fetcher(library, Vester),\n    }\n  );\n\n  const { mycPrice } = useMYCPrice(chainId, { arbitrum: chainId === ARBITRUM ? library : undefined }, active);\n\n  const rewardTrackersForStakingInfo = [stakedMlpTrackerAddress, feeMlpTrackerAddress];\n  const { data: stakingInfo } = useSWR(\n    [`MlpSwap:stakingInfo:${active}`, chainId, rewardReaderAddress, \"getStakingInfo\", account || PLACEHOLDER_ACCOUNT],\n    {\n      fetcher: fetcher(library, RewardReader, [rewardTrackersForStakingInfo]),\n    }\n  );\n\n  const stakingData = getStakingData(stakingInfo);\n\n  const redemptionTime = lastPurchaseTime ? lastPurchaseTime.add(MLP_COOLDOWN_DURATION) : undefined;\n  const inCooldownWindow = redemptionTime && parseInt(Date.now() / 1000) < redemptionTime;\n\n  const mlpSupply = balancesAndSupplies ? balancesAndSupplies[1] : bigNumberify(0);\n  const usdgSupply = balancesAndSupplies ? balancesAndSupplies[3] : bigNumberify(0);\n  let aum;\n  if (aums && aums.length > 0) {\n    aum = isBuying ? aums[0] : aums[1];\n  }\n  const mlpPrice =\n    aum && aum.gt(0) && mlpSupply.gt(0)\n      ? aum.mul(expandDecimals(1, MLP_DECIMALS)).div(mlpSupply)\n      : expandDecimals(1, USD_DECIMALS);\n  let mlpBalanceUsd;\n  if (mlpBalance) {\n    mlpBalanceUsd = mlpBalance.mul(mlpPrice).div(expandDecimals(1, MLP_DECIMALS));\n  }\n  const mlpSupplyUsd = mlpSupply.mul(mlpPrice).div(expandDecimals(1, MLP_DECIMALS));\n\n  let reserveAmountUsd;\n  if (reservedAmount) {\n    reserveAmountUsd = reservedAmount.mul(mlpPrice).div(expandDecimals(1, MLP_DECIMALS));\n  }\n\n  const { infoTokens } = useInfoTokens(library, chainId, active, tokenBalances, undefined);\n  const swapToken = getToken(chainId, swapTokenAddress);\n  const swapTokenInfo = getTokenInfo(infoTokens, swapTokenAddress);\n\n  const swapTokenBalance = swapTokenInfo && swapTokenInfo.balance ? swapTokenInfo.balance : bigNumberify(0);\n\n  const swapAmount = parseValue(swapValue, swapToken && swapToken.decimals);\n  const mlpAmount = parseValue(mlpValue, MLP_DECIMALS);\n\n  const needApproval =\n    isBuying && swapTokenAddress !== AddressZero && tokenAllowance && swapAmount && swapAmount.gt(tokenAllowance);\n\n  const swapUsdMin = getUsd(swapAmount, swapTokenAddress, false, infoTokens);\n  const mlpUsdMax = mlpAmount && mlpPrice ? mlpAmount.mul(mlpPrice).div(expandDecimals(1, MLP_DECIMALS)) : undefined;\n\n  let isSwapTokenCapReached;\n  if (swapTokenInfo.managedUsd && swapTokenInfo.maxUsdgAmount) {\n    isSwapTokenCapReached = swapTokenInfo.managedUsd.gt(\n      adjustForDecimals(swapTokenInfo.maxUsdgAmount, USDG_DECIMALS, USD_DECIMALS)\n    );\n  }\n\n  const onSwapValueChange = (e) => {\n    setAnchorOnSwapAmount(true);\n    setSwapValue(e.target.value);\n  };\n\n  const onMlpValueChange = (e) => {\n    setAnchorOnSwapAmount(false);\n    setMlpValue(e.target.value);\n  };\n\n  const onSelectSwapToken = (token) => {\n    setSwapTokenAddress(token.address);\n    setIsWaitingForApproval(false);\n  };\n\n  const nativeToken = getTokenInfo(infoTokens, AddressZero);\n\n  let totalApr = bigNumberify(0);\n\n  let feeMlpTrackerAnnualRewardsUsd;\n  let feeMlpTrackerApr;\n  if (\n    stakingData &&\n    stakingData.feeMlpTracker &&\n    stakingData.feeMlpTracker.tokensPerInterval &&\n    nativeToken &&\n    nativeToken.minPrice &&\n    mlpSupplyUsd &&\n    mlpSupplyUsd.gt(0)\n  ) {\n    feeMlpTrackerAnnualRewardsUsd = stakingData.feeMlpTracker.tokensPerInterval\n      .mul(SECONDS_PER_YEAR)\n      .mul(nativeToken.minPrice)\n      .div(expandDecimals(1, 18));\n    feeMlpTrackerApr = feeMlpTrackerAnnualRewardsUsd.mul(BASIS_POINTS_DIVISOR).div(mlpSupplyUsd);\n  }\n\n  let stakedMlpTrackerAnnualRewardsUsd;\n  let stakedMlpTrackerApr;\n  if (\n    mycPrice &&\n    stakingData &&\n    stakingData.stakedMlpTracker &&\n    stakingData.stakedMlpTracker.tokensPerInterval &&\n    mlpSupplyUsd &&\n    mlpSupplyUsd.gt(0)\n  ) {\n    stakedMlpTrackerAnnualRewardsUsd = stakingData.stakedMlpTracker.tokensPerInterval\n      .mul(SECONDS_PER_YEAR)\n      .mul(mycPrice)\n      .div(expandDecimals(1, 18));\n    stakedMlpTrackerApr = stakedMlpTrackerAnnualRewardsUsd.mul(BASIS_POINTS_DIVISOR).div(mlpSupplyUsd);\n  }\n\n  if (stakedMlpTrackerApr && feeMlpTrackerApr) {\n    totalApr = totalApr.add(feeMlpTrackerApr).add(stakedMlpTrackerApr);\n  }\n\n  useEffect(() => {\n    const updateSwapAmounts = () => {\n      if (anchorOnSwapAmount) {\n        if (!swapAmount) {\n          setMlpValue(\"\");\n          setFeeBasisPoints(\"\");\n          return;\n        }\n\n        if (isBuying) {\n          const { amount: nextAmount, feeBasisPoints: feeBps } = getBuyMlpToAmount(\n            swapAmount,\n            swapTokenAddress,\n            infoTokens,\n            mlpPrice,\n            usdgSupply,\n            totalTokenWeights\n          );\n          const nextValue = formatAmountFree(nextAmount, MLP_DECIMALS, MLP_DECIMALS);\n          setMlpValue(nextValue);\n          setFeeBasisPoints(feeBps);\n        } else {\n          const { amount: nextAmount, feeBasisPoints: feeBps } = getSellMlpFromAmount(\n            swapAmount,\n            swapTokenAddress,\n            infoTokens,\n            mlpPrice,\n            usdgSupply,\n            totalTokenWeights\n          );\n          const nextValue = formatAmountFree(nextAmount, MLP_DECIMALS, MLP_DECIMALS);\n          setMlpValue(nextValue);\n          setFeeBasisPoints(feeBps);\n        }\n\n        return;\n      }\n\n      if (!mlpAmount) {\n        setSwapValue(\"\");\n        setFeeBasisPoints(\"\");\n        return;\n      }\n\n      if (swapToken) {\n        if (isBuying) {\n          const { amount: nextAmount, feeBasisPoints: feeBps } = getBuyMlpFromAmount(\n            mlpAmount,\n            swapTokenAddress,\n            infoTokens,\n            mlpPrice,\n            usdgSupply,\n            totalTokenWeights\n          );\n          const nextValue = formatAmountFree(nextAmount, swapToken.decimals, swapToken.decimals);\n          setSwapValue(nextValue);\n          setFeeBasisPoints(feeBps);\n        } else {\n          const { amount: nextAmount, feeBasisPoints: feeBps } = getSellMlpToAmount(\n            mlpAmount,\n            swapTokenAddress,\n            infoTokens,\n            mlpPrice,\n            usdgSupply,\n            totalTokenWeights,\n            true\n          );\n\n          const nextValue = formatAmountFree(nextAmount, swapToken.decimals, swapToken.decimals);\n          setSwapValue(nextValue);\n          setFeeBasisPoints(feeBps);\n        }\n      }\n    };\n\n    updateSwapAmounts();\n  }, [\n    isBuying,\n    anchorOnSwapAmount,\n    swapAmount,\n    mlpAmount,\n    swapToken,\n    swapTokenAddress,\n    infoTokens,\n    mlpPrice,\n    usdgSupply,\n    totalTokenWeights,\n  ]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const switchSwapOption = (hash = \"\") => {\n    history.push(`${history.location.pathname}#${hash}`);\n    props.setIsBuying(hash === \"redeem\" ? false : true);\n  };\n\n  const fillMaxAmount = () => {\n    if (isBuying) {\n      setAnchorOnSwapAmount(true);\n      setSwapValue(formatAmountFree(swapTokenBalance, swapToken.decimals, swapToken.decimals));\n      return;\n    }\n\n    setAnchorOnSwapAmount(false);\n    setMlpValue(formatAmountFree(maxSellAmount, MLP_DECIMALS, MLP_DECIMALS));\n  };\n\n  const getError = () => {\n    const gasTokenInfo = getTokenInfo(infoTokens, ethers.constants.AddressZero);\n    if (gasTokenInfo.balance?.eq(0)) {\n      return [\"Not enough ETH for gas\"];\n    }\n\n    if (!isBuying && inCooldownWindow) {\n      return [`Redemption time not yet reached`];\n    }\n\n    if (!swapAmount || swapAmount.eq(0)) {\n      return [\"Enter an amount\"];\n    }\n    if (!mlpAmount || mlpAmount.eq(0)) {\n      return [\"Enter an amount\"];\n    }\n\n    if (isBuying) {\n      const swapTokenInfo = getTokenInfo(infoTokens, swapTokenAddress);\n      if (swapTokenInfo && swapTokenInfo.balance && swapAmount && swapAmount.gt(swapTokenInfo.balance)) {\n        return [`Insufficient ${swapTokenInfo.symbol} balance`];\n      }\n\n      if (swapTokenInfo.maxUsdgAmount && swapTokenInfo.usdgAmount && swapUsdMin) {\n        const usdgFromAmount = adjustForDecimals(swapUsdMin, USD_DECIMALS, USDG_DECIMALS);\n        const nextUsdgAmount = swapTokenInfo.usdgAmount.add(usdgFromAmount);\n        if (swapTokenInfo.maxUsdgAmount.gt(0) && nextUsdgAmount.gt(swapTokenInfo.maxUsdgAmount)) {\n          return [`${swapTokenInfo.symbol} pool exceeded, try different token`, true];\n        }\n      }\n    }\n\n    if (!isBuying) {\n      if (maxSellAmount && mlpAmount && mlpAmount.gt(maxSellAmount)) {\n        return [`Insufficient MLP balance`];\n      }\n\n      const swapTokenInfo = getTokenInfo(infoTokens, swapTokenAddress);\n      if (\n        swapTokenInfo &&\n        swapTokenInfo.availableAmount &&\n        swapAmount &&\n        swapAmount.gt(swapTokenInfo.availableAmount)\n      ) {\n        return [`Insufficient liquidity`];\n      }\n    }\n\n    return [false];\n  };\n\n  const isPrimaryEnabled = () => {\n    if (!active) {\n      return true;\n    }\n    const [error, modal] = getError();\n    if (error && !modal) {\n      return false;\n    }\n    if ((needApproval && isWaitingForApproval) || isApproving) {\n      return false;\n    }\n    if (isApproving) {\n      return false;\n    }\n    if (isSubmitting) {\n      return false;\n    }\n    if (isSwapTokenCapReached && isBuying) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const getPrimaryText = () => {\n    if (!active) {\n      return \"Connect Wallet\";\n    }\n    const [error, modal] = getError();\n    if (error && !modal) {\n      return error;\n    }\n    if (isBuying && isSwapTokenCapReached) {\n      return `Max Capacity for ${swapToken.symbol} Reached`;\n    }\n\n    if (needApproval && isWaitingForApproval) {\n      return \"Waiting for Approval\";\n    }\n    if (isApproving) {\n      return `Approving ${swapToken.symbol}...`;\n    }\n    if (needApproval) {\n      return `Approve ${swapToken.symbol}`;\n    }\n\n    if (isSubmitting) {\n      return isBuying ? `Buying...` : `Selling...`;\n    }\n\n    return isBuying ? \"Buy MLP\" : \"Sell MLP\";\n  };\n\n  const approveFromToken = () => {\n    approveTokens({\n      setIsApproving,\n      library,\n      tokenAddress: swapToken.address,\n      spender: mlpManagerAddress,\n      chainId: chainId,\n      onApproveSubmitted: () => {\n        setIsWaitingForApproval(true);\n      },\n      infoTokens,\n      getTokenInfo,\n    });\n  };\n\n  const buyMlp = () => {\n    setIsSubmitting(true);\n\n    const minMlp = mlpAmount.mul(BASIS_POINTS_DIVISOR - savedSlippageAmount).div(BASIS_POINTS_DIVISOR);\n\n    const contract = new ethers.Contract(rewardRouterAddress, RewardRouter.abi, library.getSigner());\n    const method = swapTokenAddress === AddressZero ? \"mintAndStakeMlpETH\" : \"mintAndStakeMlp\";\n    const params = swapTokenAddress === AddressZero ? [0, minMlp] : [swapTokenAddress, swapAmount, 0, minMlp];\n    const value = swapTokenAddress === AddressZero ? swapAmount : 0;\n\n    callContract(chainId, contract, method, params, {\n      value,\n      sentMsg: \"Buy submitted.\",\n      failMsg: \"Buy failed.\",\n      successMsg: `${formatAmount(mlpAmount, 18, 4, true)} MLP bought with ${formatAmount(\n        swapAmount,\n        swapTokenInfo.decimals,\n        4,\n        true\n      )} ${swapTokenInfo.symbol}!`,\n      setPendingTxns,\n    })\n      .then(async () => {\n        trackMlpTrade(3, \"Buy MLP\");\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  };\n\n  const sellMlp = () => {\n    setIsSubmitting(true);\n\n    const minOut = swapAmount.mul(BASIS_POINTS_DIVISOR - savedSlippageAmount).div(BASIS_POINTS_DIVISOR);\n\n    const contract = new ethers.Contract(rewardRouterAddress, RewardRouter.abi, library.getSigner());\n    const method = swapTokenAddress === AddressZero ? \"unstakeAndRedeemMlpETH\" : \"unstakeAndRedeemMlp\";\n    const params =\n      swapTokenAddress === AddressZero ? [mlpAmount, minOut, account] : [swapTokenAddress, mlpAmount, minOut, account];\n\n    callContract(chainId, contract, method, params, {\n      sentMsg: \"Sell submitted!\",\n      failMsg: \"Sell failed.\",\n      successMsg: `${formatAmount(mlpAmount, 18, 4, true)} MLP sold for ${formatAmount(\n        swapAmount,\n        swapTokenInfo.decimals,\n        4,\n        true\n      )} ${swapTokenInfo.symbol}!`,\n      setPendingTxns,\n    })\n      .then(async () => {\n        trackMlpTrade(3, \"Sell MLP\");\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  };\n\n  const onClickPrimary = () => {\n    if (!active) {\n      connectWallet();\n      return;\n    }\n\n    if (needApproval) {\n      approveFromToken();\n      return;\n    }\n\n    const [, modal] = getError();\n\n    if (modal) {\n      return;\n    }\n\n    if (isBuying) {\n      buyMlp();\n    } else {\n      sellMlp();\n    }\n  };\n\n  let payLabel = \"Pay\";\n  let receiveLabel = \"Receive\";\n  let payBalance = \"$0.00\";\n  let receiveBalance = \"$0.00\";\n  if (isBuying) {\n    if (swapUsdMin) {\n      payBalance = `$${formatAmount(swapUsdMin, USD_DECIMALS, 2, true)}`;\n    }\n    if (mlpUsdMax) {\n      receiveBalance = `$${formatAmount(mlpUsdMax, USD_DECIMALS, 2, true)}`;\n    }\n  } else {\n    if (mlpUsdMax) {\n      payBalance = `$${formatAmount(mlpUsdMax, USD_DECIMALS, 2, true)}`;\n    }\n    if (swapUsdMin) {\n      receiveBalance = `$${formatAmount(swapUsdMin, USD_DECIMALS, 2, true)}`;\n    }\n  }\n\n  const selectToken = (token) => {\n    setAnchorOnSwapAmount(false);\n    setSwapTokenAddress(token.address);\n    helperToast.success(`${token.symbol} selected in order form`);\n  };\n\n  let feePercentageText = formatAmount(feeBasisPoints, 2, 2, true, \"-\");\n  if (feeBasisPoints !== undefined && feeBasisPoints.toString().length > 0) {\n    feePercentageText += \"%\";\n  }\n\n  let maxSellAmount = mlpBalance;\n  if (mlpBalance && reservedAmount) {\n    maxSellAmount = mlpBalance.sub(reservedAmount);\n  }\n\n  const wrappedTokenSymbol = getWrappedToken(chainId).symbol;\n  const nativeTokenSymbol = getNativeToken(chainId).symbol;\n\n  const onSwapOptionChange = (opt) => {\n    if (opt === \"Sell MLP\") {\n      switchSwapOption(\"redeem\");\n    } else {\n      switchSwapOption();\n    }\n  };\n\n  const trackMlpTrade = (stage, tradeType) => {\n    const eventName = getAnalyticsEventStage(stage);\n\n    const isBuy = tradeType.includes(\"Buy\");\n    try {\n      const feePercentage = formatAmount(feeBasisPoints, 2, 2, false, \"-\");\n      const feesUsd = (parseFloat(payBalance.replace(\"$\", \"\")) * parseFloat(feePercentage)) / 100;\n      const feesEth = (swapValue * parseFloat(feePercentage)) / 100;\n      const amountToPay = isBuy ? swapValue : mlpValue;\n      const amountToReceive = isBuy ? mlpValue : swapValue;\n      const amountToReceiveUsd = receiveBalance?.replace(\"$\", \"\");\n      const tokenToPay = isBuy ? swapTokenInfo.symbol : \"MLP\";\n      const tokenToReceive = isBuy ? \"MLP\" : swapTokenInfo.symbol;\n\n      const [userBalances, tokenPrices, poolBalances] = getUserTokenBalances(infoTokens);\n\n      const traits = {\n        actionType: \"Create\",\n        transactionType: isBuy ? \"Buy\" : \"Sell\",\n        amountToReceiveUsd: parseFloat(amountToReceiveUsd),\n        tradeType: tradeType,\n        tokenToPay: tokenToPay,\n        tokenToReceive: tokenToReceive,\n        amountToPay: parseFloat(amountToPay),\n        amountToReceive: parseFloat(amountToReceive),\n        balance: parseFloat(formatAmount(swapTokenBalance, swapToken.decimals, 4, false)),\n        balanceToken: swapToken.symbol,\n        feesUsd: feesUsd.toFixed(2),\n        feesEth: parseFloat(feesEth).toFixed(8),\n        walletAddress: account,\n        network: NETWORK_NAME[chainId],\n        ...userBalances,\n        ...tokenPrices,\n        ...poolBalances,\n      };\n      trackAction && trackAction(eventName, traits);\n    } catch (err) {\n      console.error(`Unable to track ${eventName} event`, err);\n    }\n  };\n\n  const [pageTracked, setPageTracked] = useState(false);\n\n  const dataElements = [chainId, isBuying, pageTracked, swapTokenAddress, history.location.hash];\n  const elementsLoaded = dataElements.every((element) => element !== undefined);\n\n  // Segment Analytics Page tracking\n  useEffect(() => {\n    if (elementsLoaded && analytics && !pageTracked) {\n      // If page hash is #redeem, then user is Buying\n      const hash = history.location.hash.replace(\"#\", \"\");\n      const isBuying = hash === \"redeem\" ? false : true;\n      // Swap pay and receive tokens depending on isBuying\n      const tokenToPay = isBuying ? getToken(chainId, swapTokenAddress).symbol : \"MLP\";\n      const tokenToReceive = isBuying ? \"MLP\" : getToken(chainId, swapTokenAddress).symbol;\n      const traits = {\n        action: isBuying ? \"Buy\" : \"Sell\",\n        tokenToPay: tokenToPay,\n        tokenToReceive: tokenToReceive,\n      };\n      trackPageWithTraits(traits);\n      setPageTracked(true); // Prevent Page function being called twice\n    }\n  }, [\n    chainId,\n    isBuying,\n    pageTracked,\n    swapTokenAddress,\n    elementsLoaded,\n    trackPageWithTraits,\n    history.location.hash,\n    analytics,\n  ]);\n\n  return (\n    <div className=\"MlpSwap\">\n      {/* <div className=\"Page-title-section\">\n        <div className=\"Page-title\">{isBuying ? \"Buy MLP\" : \"Sell MLP\"}</div>\n        {isBuying && <div className=\"Page-description\">\n          Purchase <a href=\"https://swaps.docs.mycelium.xyz/protocol-design/shared-liquidity-pool/tlp-token-pricing\" target=\"_blank\" rel=\"noopener noreferrer\">MLP tokens</a> to earn {nativeTokenSymbol} fees from swaps and leverage trading.<br/>\n          Note that there is a minimum holding time of 15 minutes after a purchase.<br/>\n          <div>View <Link to=\"/earn\">staking</Link> page.</div>\n        </div>}\n        {!isBuying && <div className=\"Page-description\">\n          Redeem your MLP tokens for any supported asset.\n          {inCooldownWindow && <div>\n            MLP tokens can only be redeemed 15 minutes after your most recent purchase.<br/>\n            Your last purchase was at {formatDateTime(lastPurchaseTime)}, you can redeem MLP tokens after {formatDateTime(redemptionTime)}.<br/>\n          </div>}\n          <div>View <Link to=\"/earn\">staking</Link> page.</div>\n        </div>}\n      </div> */}\n      <div className=\"MlpSwap-content\">\n        <div className=\"App-card MlpSwap-stats-card\">\n          <div className=\"App-card-title\">\n            <div className=\"App-card-title-mark\">\n              <div className=\"App-card-title-mark-icon\">\n                <img src={tlp40Icon} alt=\"tlp40Icon\" />\n              </div>\n              <div className=\"App-card-title-mark-info\">\n                <div className=\"App-card-title-mark-title\">MLP</div>\n                <div className=\"App-card-title-mark-subtitle\">MLP</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"App-card-divider\"></div>\n          <div className=\"App-card-content\">\n            <div className=\"App-card-row\">\n              <div className=\"label\">Price</div>\n              <div className=\"value\">${formatAmount(mlpPrice, USD_DECIMALS, 3, true)}</div>\n            </div>\n            <div className=\"App-card-row\">\n              <div className=\"label\">Wallet</div>\n              <div className=\"value\">\n                {formatAmount(mlpBalance, MLP_DECIMALS, 4, true)} MLP ($\n                {formatAmount(mlpBalanceUsd, USD_DECIMALS, 2, true)})\n              </div>\n            </div>\n            <div className=\"App-card-row\">\n              <div className=\"label\">Staked</div>\n              <div className=\"value\">\n                {formatAmount(mlpBalance, MLP_DECIMALS, 4, true)} MLP ($\n                {formatAmount(mlpBalanceUsd, USD_DECIMALS, 2, true)})\n              </div>\n            </div>\n          </div>\n          <div className=\"App-card-divider\"></div>\n          <div className=\"App-card-content Totals-section\">\n            {!isBuying && (\n              <div className=\"App-card-row\">\n                <div className=\"label\">Reserved</div>\n                <div className=\"value\">\n                  <Tooltip\n                    handle={`${formatAmount(reservedAmount, 18, 4, true)} MLP ($${formatAmount(\n                      reserveAmountUsd,\n                      USD_DECIMALS,\n                      2,\n                      true\n                    )})`}\n                    position=\"right-bottom\"\n                    renderContent={() =>\n                      `${formatAmount(reservedAmount, 18, 4, true)} MLP have been reserved for vesting.`\n                    }\n                  />\n                </div>\n              </div>\n            )}\n            <div className=\"App-card-row\">\n              <div className=\"label\">Total APR</div>\n              <div className=\"value\">\n                <Tooltip\n                  handle={`${formatAmount(totalApr, 2, 2, true)}%`}\n                  position=\"right-bottom\"\n                  renderContent={() => {\n                    return (\n                      <>\n                        <div className=\"Tooltip-row\">\n                          <span className=\"label\">\n                            {nativeTokenSymbol} ({wrappedTokenSymbol}) APR\n                          </span>\n                          <span>{formatAmount(feeMlpTrackerApr, 2, 2, false)}%</span>\n                        </div>\n                        <div className=\"Tooltip-row\">\n                          <span className=\"label\">esMYC APR</span>\n                          <span>{formatAmount(stakedMlpTrackerApr, 2, 2, false)}%</span>\n                        </div>\n                      </>\n                    );\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"App-card-row\">\n              <div className=\"label\">Total Supply</div>\n              <div className=\"value\">\n                {formatAmount(mlpSupply, MLP_DECIMALS, 4, true)} MLP ($\n                {formatAmount(mlpSupplyUsd, USD_DECIMALS, 2, true)})\n              </div>\n            </div>\n            <div className=\"Insurance-btn-container\">\n              <Tooltip\n                handle={\n                  <a\n                    href=\"https://core.riskharbor.com/pool/arbitrum/0xbcA81A2118982182d897845571BE950aE94C619c/4\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <button className=\"App-button-option App-card-option Insurance-btn\">MLP Insurance</button>\n                  </a>\n                }\n                position=\"left-top\"\n                renderContent={() => {\n                  return <div className=\"Tooltip-row\">Risk Harbor Insurance for fsMLP.</div>;\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"MlpSwap-box App-box\">\n          <Tab\n            options={[\"Buy MLP\", \"Sell MLP\"]}\n            option={tabLabel}\n            onChange={onSwapOptionChange}\n            className=\"Exchange-swap-option-tabs\"\n          />\n          {isBuying && (\n            <BuyInputSection\n              topLeftLabel={payLabel}\n              topRightLabel={`Balance: `}\n              tokenBalance={`${formatAmount(swapTokenBalance, swapToken.decimals, 4, true)}`}\n              inputValue={swapValue}\n              onInputValueChange={onSwapValueChange}\n              showMaxButton={swapValue !== formatAmountFree(swapTokenBalance, swapToken.decimals, swapToken.decimals)}\n              onClickTopRightLabel={fillMaxAmount}\n              onClickMax={fillMaxAmount}\n              selectedToken={swapToken}\n              balance={payBalance}\n              trackAction={trackAction}\n              tabLabel={tabLabel}\n            >\n              <TokenSelector\n                label=\"Pay\"\n                chainId={chainId}\n                tokenAddress={swapTokenAddress}\n                onSelectToken={onSelectSwapToken}\n                tokens={whitelistedTokens}\n                infoTokens={infoTokens}\n                className=\"MlpSwap-from-token\"\n                showSymbolImage={true}\n                showTokenImgInDropdown={true}\n                trackAction={trackAction}\n              />\n            </BuyInputSection>\n          )}\n\n          {!isBuying && (\n            <BuyInputSection\n              topLeftLabel={payLabel}\n              topRightLabel={`Available: `}\n              tokenBalance={`${formatAmount(maxSellAmount, MLP_DECIMALS, 4, true)}`}\n              inputValue={mlpValue}\n              onInputValueChange={onMlpValueChange}\n              showMaxButton={mlpValue !== formatAmountFree(maxSellAmount, MLP_DECIMALS, MLP_DECIMALS)}\n              onClickTopRightLabel={fillMaxAmount}\n              onClickMax={fillMaxAmount}\n              balance={payBalance}\n              defaultTokenName={\"MLP\"}\n            >\n              <div className=\"selected-token\">\n                MLP <img src={tlp24Icon} alt=\"tlp24Icon\" />\n              </div>\n            </BuyInputSection>\n          )}\n\n          <div className=\"AppOrder-ball-container\">\n            <div className=\"AppOrder-ball\">\n              <img\n                src={arrowIcon}\n                alt=\"arrowIcon\"\n                onClick={() => {\n                  setIsBuying(!isBuying);\n                  switchSwapOption(isBuying ? \"redeem\" : \"\");\n                  trackAction &&\n                    trackAction(\"Button clicked\", {\n                      buttonName: `Swap action - ${isBuying ? \"Sell MLP\" : \"Buy MLP\"}`,\n                    });\n                }}\n              />\n            </div>\n          </div>\n\n          {isBuying && (\n            <BuyInputSection\n              topLeftLabel={receiveLabel}\n              topRightLabel={`Balance: `}\n              tokenBalance={`${formatAmount(mlpBalance, MLP_DECIMALS, 4, true)}`}\n              inputValue={mlpValue}\n              onInputValueChange={onMlpValueChange}\n              balance={receiveBalance}\n              defaultTokenName={\"MLP\"}\n            >\n              <div className=\"selected-token\">\n                MLP <img src={tlp24Icon} alt=\"tlp24Icon\" />\n              </div>\n            </BuyInputSection>\n          )}\n\n          {!isBuying && (\n            <BuyInputSection\n              topLeftLabel={receiveLabel}\n              topRightLabel={`Balance: `}\n              tokenBalance={`${formatAmount(swapTokenBalance, swapToken.decimals, 4, true)}`}\n              inputValue={swapValue}\n              onInputValueChange={onSwapValueChange}\n              balance={receiveBalance}\n              selectedToken={swapToken}\n              trackAction={trackAction}\n              tabLabel={tabLabel}\n            >\n              <TokenSelector\n                label=\"Receive\"\n                chainId={chainId}\n                tokenAddress={swapTokenAddress}\n                onSelectToken={onSelectSwapToken}\n                tokens={whitelistedTokens}\n                infoTokens={infoTokens}\n                className=\"MlpSwap-from-token\"\n                showSymbolImage={true}\n                showTokenImgInDropdown={true}\n                trackAction={trackAction}\n              />\n            </BuyInputSection>\n          )}\n          <div>\n            <div className=\"Exchange-info-row\">\n              <div className=\"Exchange-info-label\">{feeBasisPoints > 50 ? \"WARNING: High Fees\" : \"Fees\"}</div>\n              <div className=\"align-right fee-block\">\n                {isBuying && (\n                  <Tooltip\n                    handle={isBuying && isSwapTokenCapReached ? \"NA\" : feePercentageText}\n                    position=\"right-bottom\"\n                    renderContent={() => {\n                      return (\n                        <>\n                          {feeBasisPoints > 50 && <div>To reduce fees, select a different asset to pay with.</div>}\n                          Check the \"Save on Fees\" section below to get the lowest fee percentages.\n                        </>\n                      );\n                    }}\n                  />\n                )}\n                {!isBuying && (\n                  <Tooltip\n                    handle={feePercentageText}\n                    position=\"right-bottom\"\n                    renderContent={() => {\n                      return (\n                        <>\n                          {feeBasisPoints > 50 && <div>To reduce fees, select a different asset to receive.</div>}\n                          Check the \"Save on Fees\" section below to get the lowest fee percentages.\n                        </>\n                      );\n                    }}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"MlpSwap-cta Exchange-swap-button-container\">\n            <button\n              className=\"App-cta Exchange-swap-button\"\n              onClick={() => {\n                const buttonText = getPrimaryText();\n                onClickPrimary();\n                if (!buttonText.includes(\"Connect\")) {\n                  if (buttonText.includes(\"Approve\")) {\n                    trackMlpTrade(1, buttonText.split(\" \")[1]); // Get token symbol\n                    trackAction &&\n                      trackAction(\"Button clicked\", {\n                        buttonName: \"Approve\",\n                        fromToken: buttonText.split(\" \")[1],\n                      });\n                  } else {\n                    trackMlpTrade(2, buttonText);\n                    trackAction &&\n                      trackAction(\"Button clicked\", {\n                        buttonName: buttonText,\n                      });\n                  }\n                }\n              }}\n              disabled={!isPrimaryEnabled()}\n            >\n              {getPrimaryText()}\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"Tab-title-section\">\n        <div className=\"Page-title\">Save on Fees</div>\n        {isBuying && (\n          <div className=\"Page-description\">\n            Fees may vary depending on which asset you use to buy MLP.\n            <br /> Enter the amount of MLP you want to purchase in the order form, then check here to compare fees.\n          </div>\n        )}\n        {!isBuying && (\n          <div className=\"Page-description\">\n            Fees may vary depending on which asset you sell MLP for.\n            <br /> Enter the amount of MLP you want to redeem in the order form, then check here to compare fees.\n          </div>\n        )}\n      </div>\n      <div className=\"MlpSwap-token-list\">\n        {/* <div className=\"MlpSwap-token-list-content\"> */}\n        <table className=\"token-table\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Price</th>\n              <th>\n                {isBuying ? (\n                  <Tooltip\n                    handle={\"Available\"}\n                    tooltipIconPosition=\"right\"\n                    position=\"right-bottom text-none\"\n                    renderContent={() => \"Available amount to deposit into MLP.\"}\n                  />\n                ) : (\n                  <Tooltip\n                    handle={\"Available\"}\n                    tooltipIconPosition=\"right\"\n                    position=\"right-bottom text-none\"\n                    renderContent={() => {\n                      return (\n                        <>\n                          <div>Available amount to withdraw from MLP.</div>\n                          <div>Funds not utilized by current open positions.</div>\n                        </>\n                      );\n                    }}\n                  />\n                )}\n              </th>\n              <th>Wallet</th>\n              <th>\n                <Tooltip\n                  handle={\"Fees\"}\n                  tooltipIconPosition=\"right\"\n                  position=\"right-bottom text-none\"\n                  renderContent={() => {\n                    return (\n                      <>\n                        <div>Fees will be shown once you have entered an amount in the order form.</div>\n                      </>\n                    );\n                  }}\n                />\n              </th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {tokenList.map((token) => {\n              let tokenFeeBps;\n              if (isBuying) {\n                const { feeBasisPoints: feeBps } = getBuyMlpFromAmount(\n                  mlpAmount,\n                  token.address,\n                  infoTokens,\n                  mlpPrice,\n                  usdgSupply,\n                  totalTokenWeights\n                );\n                tokenFeeBps = feeBps;\n              } else {\n                const { feeBasisPoints: feeBps } = getSellMlpToAmount(\n                  mlpAmount,\n                  token.address,\n                  infoTokens,\n                  mlpPrice,\n                  usdgSupply,\n                  totalTokenWeights\n                );\n                tokenFeeBps = feeBps;\n              }\n              const tokenInfo = getTokenInfo(infoTokens, token.address);\n              let managedUsd;\n              if (tokenInfo && tokenInfo.managedUsd) {\n                managedUsd = tokenInfo.managedUsd;\n              }\n              let availableAmountUsd;\n              if (tokenInfo && tokenInfo.minPrice && tokenInfo.availableAmount) {\n                availableAmountUsd = tokenInfo.availableAmount\n                  .mul(tokenInfo.minPrice)\n                  .div(expandDecimals(1, token.decimals));\n              }\n              let balanceUsd;\n              if (tokenInfo && tokenInfo.minPrice && tokenInfo.balance) {\n                balanceUsd = tokenInfo.balance.mul(tokenInfo.minPrice).div(expandDecimals(1, token.decimals));\n              }\n\n              var tokenImage = null;\n\n              try {\n                tokenImage = require(\"../../img/ic_\" + token.symbol.toLowerCase() + \"_40.svg\");\n              } catch (error) {\n                console.error(error);\n              }\n              let isCapReached = tokenInfo.managedAmount?.gt(tokenInfo.maxUsdgAmount);\n\n              let amountLeftToDeposit;\n              if (tokenInfo.maxUsdgAmount && tokenInfo.maxUsdgAmount.gt(0)) {\n                amountLeftToDeposit = adjustForDecimals(tokenInfo.maxUsdgAmount, USDG_DECIMALS, USD_DECIMALS).sub(\n                  tokenInfo.managedUsd\n                );\n              }\n              function renderFees() {\n                const swapUrl = `https://app.uniswap.org/#/swap?inputCurrency=${token.address}&chain=arbitrum`;\n                switch (true) {\n                  case (isBuying && isCapReached) || (!isBuying && managedUsd?.lt(1)):\n                    return (\n                      <Tooltip\n                        handle=\"NA\"\n                        position=\"right-bottom\"\n                        renderContent={() => (\n                          <div>\n                            Max pool capacity reached for {tokenInfo.symbol}\n                            <br />\n                            <br />\n                            Please mint MLP using another token\n                            <br />\n                            <p>\n                              <a href={swapUrl} target=\"_blank\" rel=\"noreferrer\">\n                                Swap on {chainId === ARBITRUM ? \"Uniswap\" : \"Trader Joe\"}\n                              </a>\n                            </p>\n                          </div>\n                        )}\n                      />\n                    );\n                  case (isBuying && !isCapReached) || (!isBuying && managedUsd?.gt(0)):\n                    return `${formatAmount(tokenFeeBps, 2, 2, true, \"-\")}${\n                      tokenFeeBps !== undefined && tokenFeeBps.toString().length > 0 ? \"%\" : \"\"\n                    }`;\n                  default:\n                    return \"\";\n                }\n              }\n\n              return (\n                <tr key={token.symbol}>\n                  <td>\n                    <div className=\"App-card-title-info\">\n                      <div className=\"App-card-title-info-icon\">\n                        <img src={tokenImage && tokenImage.default} alt={token.symbol} width=\"40px\" />\n                      </div>\n                      <div className=\"App-card-title-info-text\">\n                        <div className=\"App-card-info-title\">{token.name}</div>\n                        <div className=\"App-card-info-subtitle\">{token.symbol}</div>\n                      </div>\n                      <div>\n                        <AssetDropdown assetSymbol={token.symbol} assetInfo={token} trackAction={trackAction} />\n                      </div>\n                    </div>\n                  </td>\n                  <td>${formatKeyAmount(tokenInfo, \"minPrice\", USD_DECIMALS, 2, true)}</td>\n                  <td>\n                    {isBuying && (\n                      <div>\n                        <Tooltip\n                          handle={\n                            amountLeftToDeposit && amountLeftToDeposit.lt(0)\n                              ? \"$0.00\"\n                              : `$${formatAmount(amountLeftToDeposit, USD_DECIMALS, 2, true)}`\n                          }\n                          position=\"right-bottom\"\n                          tooltipIconPosition=\"right\"\n                          renderContent={() => {\n                            return (\n                              <>\n                                Current Pool Amount: ${formatAmount(managedUsd, USD_DECIMALS, 2, true)} (\n                                {formatKeyAmount(tokenInfo, \"poolAmount\", token.decimals, 2, true)} {token.symbol})\n                                <br />\n                                <br />\n                                Max Pool Capacity: ${formatAmount(tokenInfo.maxUsdgAmount, 18, 0, true)}\n                              </>\n                            );\n                          }}\n                        />\n                      </div>\n                    )}\n                    {!isBuying && (\n                      <div>\n                        {formatKeyAmount(tokenInfo, \"availableAmount\", token.decimals, 2, true)} {token.symbol} ($\n                        {formatAmount(availableAmountUsd, USD_DECIMALS, 2, true)})\n                      </div>\n                    )}\n                  </td>\n                  <td>\n                    {formatKeyAmount(tokenInfo, \"balance\", tokenInfo.decimals, 2, true)} {tokenInfo.symbol} ($\n                    {formatAmount(balanceUsd, USD_DECIMALS, 2, true)})\n                  </td>\n                  <td>{renderFees()}</td>\n                  <td>\n                    <button\n                      className={cx(\"App-button-option action-btn\", isBuying ? \"buying\" : \"selling\")}\n                      onClick={() => {\n                        selectToken(token);\n                        trackAction &&\n                          trackAction(\"Button clicked\", {\n                            buttonName: isBuying ? \"Buy with \" + token.symbol : \"Sell for \" + token.symbol,\n                          });\n                      }}\n                    >\n                      {isBuying ? \"Buy with \" + token.symbol : \"Sell for \" + token.symbol}\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"token-grid\">\n          {tokenList.map((token) => {\n            let tokenFeeBps;\n            if (isBuying) {\n              const { feeBasisPoints: feeBps } = getBuyMlpFromAmount(\n                mlpAmount,\n                token.address,\n                infoTokens,\n                mlpPrice,\n                usdgSupply,\n                totalTokenWeights\n              );\n              tokenFeeBps = feeBps;\n            } else {\n              const { feeBasisPoints: feeBps } = getSellMlpToAmount(\n                mlpAmount,\n                token.address,\n                infoTokens,\n                mlpPrice,\n                usdgSupply,\n                totalTokenWeights\n              );\n              tokenFeeBps = feeBps;\n            }\n            const tokenInfo = getTokenInfo(infoTokens, token.address);\n            let managedUsd;\n            if (tokenInfo && tokenInfo.managedUsd) {\n              managedUsd = tokenInfo.managedUsd;\n            }\n            let availableAmountUsd;\n            if (tokenInfo && tokenInfo.minPrice && tokenInfo.availableAmount) {\n              availableAmountUsd = tokenInfo.availableAmount\n                .mul(tokenInfo.minPrice)\n                .div(expandDecimals(1, token.decimals));\n            }\n            let balanceUsd;\n            if (tokenInfo && tokenInfo.minPrice && tokenInfo.balance) {\n              balanceUsd = tokenInfo.balance.mul(tokenInfo.minPrice).div(expandDecimals(1, token.decimals));\n            }\n\n            let amountLeftToDeposit;\n            if (tokenInfo.maxUsdgAmount && tokenInfo.maxUsdgAmount.gt(0)) {\n              amountLeftToDeposit = adjustForDecimals(tokenInfo.maxUsdgAmount, USDG_DECIMALS, USD_DECIMALS).sub(\n                tokenInfo.managedUsd\n              );\n            }\n            let isCapReached = tokenInfo.managedAmount?.gt(tokenInfo.maxUsdgAmount);\n\n            function renderFees() {\n              switch (true) {\n                case (isBuying && isCapReached) || (!isBuying && managedUsd?.lt(1)):\n                  return (\n                    <Tooltip\n                      handle=\"NA\"\n                      position=\"right-bottom\"\n                      renderContent={() =>\n                        `Max pool capacity reached for ${tokenInfo.symbol}. Please mint MLP using another token`\n                      }\n                    />\n                  );\n                case (isBuying && !isCapReached) || (!isBuying && managedUsd?.gt(0)):\n                  return `${formatAmount(tokenFeeBps, 2, 2, true, \"-\")}${\n                    tokenFeeBps !== undefined && tokenFeeBps.toString().length > 0 ? \"%\" : \"\"\n                  }`;\n                default:\n                  return \"\";\n              }\n            }\n\n            return (\n              <div className=\"App-card\" key={token.symbol}>\n                <div className=\"App-card-title\">{token.name}</div>\n                <div className=\"App-card-divider\"></div>\n                <div className=\"App-card-content\">\n                  <div className=\"App-card-row\">\n                    <div className=\"label\">Price</div>\n                    <div>${formatKeyAmount(tokenInfo, \"minPrice\", USD_DECIMALS, 2, true)}</div>\n                  </div>\n                  {isBuying && (\n                    <div className=\"App-card-row\">\n                      <Tooltip\n                        className=\"label\"\n                        handle=\"Available\"\n                        position=\"left-bottom\"\n                        renderContent={() => \"Available amount to deposit into MLP.\"}\n                      />\n                      <div>\n                        <Tooltip\n                          handle={amountLeftToDeposit && `$${formatAmount(amountLeftToDeposit, USD_DECIMALS, 2, true)}`}\n                          position=\"right-bottom\"\n                          tooltipIconPosition=\"right\"\n                          renderContent={() => {\n                            return (\n                              <>\n                                Current Pool Amount: ${formatAmount(managedUsd, USD_DECIMALS, 2, true)} (\n                                {formatKeyAmount(tokenInfo, \"poolAmount\", token.decimals, 2, true)} {token.symbol})\n                                <br />\n                                <br />\n                                Max Pool Capacity: ${formatAmount(tokenInfo.maxUsdgAmount, 18, 0, true)}\n                              </>\n                            );\n                          }}\n                        />\n                      </div>\n                    </div>\n                  )}\n                  {!isBuying && (\n                    <div className=\"App-card-row\">\n                      <Tooltip\n                        handle=\"Available\"\n                        position=\"left-bottom\"\n                        renderContent={() => {\n                          return (\n                            <>\n                              <div>Available amount to withdraw from MLP.</div>\n                              <div>Funds not utilized by current open positions.</div>\n                            </>\n                          );\n                        }}\n                      />\n                      <div>\n                        {formatKeyAmount(tokenInfo, \"availableAmount\", token.decimals, 2, true)} {token.symbol} ($\n                        {formatAmount(availableAmountUsd, USD_DECIMALS, 2, true)})\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"App-card-row\">\n                    <div className=\"label\">Wallet</div>\n                    <div>\n                      {formatKeyAmount(tokenInfo, \"balance\", tokenInfo.decimals, 2, true)} {tokenInfo.symbol} ($\n                      {formatAmount(balanceUsd, USD_DECIMALS, 2, true)})\n                    </div>\n                  </div>\n                  <div className=\"App-card-row\">\n                    <div className=\"label\">\n                      {tokenFeeBps ? (\n                        \"Fees\"\n                      ) : (\n                        <Tooltip\n                          handle={`Fees`}\n                          renderContent={() => `Please enter an amount to see fee percentages`}\n                        />\n                      )}\n                    </div>\n                    <div>{renderFees()}</div>\n                  </div>\n                  <div className=\"App-card-divider\"></div>\n                  <div className=\"App-card-options\">\n                    {isBuying && (\n                      <button className=\"App-button-option App-card-option\" onClick={() => selectToken(token)}>\n                        Buy with {token.symbol}\n                      </button>\n                    )}\n                    {!isBuying && (\n                      <button className=\"App-button-option App-card-option\" onClick={() => selectToken(token)}>\n                        Sell for {token.symbol}\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        {/* </div> */}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}