{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport fetch from 'unfetch';\nimport { version } from '../../generated/version';\nimport { getVersionType } from '../../plugins/segmentio/normalize';\n\nfunction logError(err) {\n  console.error('Error sending segment performance metrics', err);\n}\n\nvar RemoteMetrics =\n/** @class */\nfunction () {\n  function RemoteMetrics(options) {\n    var _this = this;\n\n    var _a, _b, _c, _d;\n\n    this.host = (_a = options === null || options === void 0 ? void 0 : options.host) !== null && _a !== void 0 ? _a : 'api.segment.io/v1';\n    this.sampleRate = (_b = options === null || options === void 0 ? void 0 : options.sampleRate) !== null && _b !== void 0 ? _b : 1;\n    this.flushTimer = (_c = options === null || options === void 0 ? void 0 : options.flushTimer) !== null && _c !== void 0 ? _c : 30 * 1000;\n    /* 30s */\n\n    this.maxQueueSize = (_d = options === null || options === void 0 ? void 0 : options.maxQueueSize) !== null && _d !== void 0 ? _d : 20;\n    this.queue = [];\n\n    if (this.sampleRate > 0) {\n      var flushing_1 = false;\n\n      var run_1 = function () {\n        if (flushing_1) {\n          return;\n        }\n\n        flushing_1 = true;\n\n        _this.flush().catch(logError);\n\n        flushing_1 = false;\n        setTimeout(run_1, _this.flushTimer);\n      };\n\n      run_1();\n    }\n  }\n\n  RemoteMetrics.prototype.increment = function (metric, tags) {\n    // All metrics are part of an allow list in Tracking API\n    if (!metric.includes('analytics_js.')) {\n      return;\n    } // /m doesn't like empty tags\n\n\n    if (tags.length === 0) {\n      return;\n    }\n\n    if (Math.random() > this.sampleRate) {\n      return;\n    }\n\n    if (this.queue.length >= this.maxQueueSize) {\n      return;\n    }\n\n    var formatted = tags.reduce(function (acc, t) {\n      var _a = t.split(':'),\n          k = _a[0],\n          v = _a[1];\n\n      acc[k] = v;\n      return acc;\n    }, {});\n    formatted['library'] = 'analytics.js';\n    var type = getVersionType();\n\n    if (type === 'web') {\n      formatted['library_version'] = \"next-\".concat(version);\n    } else {\n      formatted['library_version'] = \"npm:next-\".concat(version);\n    }\n\n    this.queue.push({\n      type: 'Counter',\n      metric: metric,\n      value: 1,\n      tags: formatted\n    });\n\n    if (metric.includes('error')) {\n      this.flush().catch(logError);\n    }\n  };\n\n  RemoteMetrics.prototype.flush = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.queue.length <= 0) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , this.send().catch(function (error) {\n              logError(error);\n              _this.sampleRate = 0;\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  RemoteMetrics.prototype.send = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var payload, headers, url;\n      return __generator(this, function (_a) {\n        payload = {\n          series: this.queue\n        };\n        this.queue = [];\n        headers = {\n          'Content-Type': 'text/plain'\n        };\n        url = \"https://\".concat(this.host, \"/m\");\n        return [2\n        /*return*/\n        , fetch(url, {\n          headers: headers,\n          body: JSON.stringify(payload),\n          method: 'POST'\n        })];\n      });\n    });\n  };\n\n  return RemoteMetrics;\n}();\n\nexport { RemoteMetrics };","map":{"version":3,"sources":["../../../../src/core/stats/remote-metrics.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport fetch from 'unfetch';\nimport { version } from '../../generated/version';\nimport { getVersionType } from '../../plugins/segmentio/normalize';\nfunction logError(err) {\n    console.error('Error sending segment performance metrics', err);\n}\nvar RemoteMetrics = /** @class */ (function () {\n    function RemoteMetrics(options) {\n        var _this = this;\n        var _a, _b, _c, _d;\n        this.host = (_a = options === null || options === void 0 ? void 0 : options.host) !== null && _a !== void 0 ? _a : 'api.segment.io/v1';\n        this.sampleRate = (_b = options === null || options === void 0 ? void 0 : options.sampleRate) !== null && _b !== void 0 ? _b : 1;\n        this.flushTimer = (_c = options === null || options === void 0 ? void 0 : options.flushTimer) !== null && _c !== void 0 ? _c : 30 * 1000; /* 30s */\n        this.maxQueueSize = (_d = options === null || options === void 0 ? void 0 : options.maxQueueSize) !== null && _d !== void 0 ? _d : 20;\n        this.queue = [];\n        if (this.sampleRate > 0) {\n            var flushing_1 = false;\n            var run_1 = function () {\n                if (flushing_1) {\n                    return;\n                }\n                flushing_1 = true;\n                _this.flush().catch(logError);\n                flushing_1 = false;\n                setTimeout(run_1, _this.flushTimer);\n            };\n            run_1();\n        }\n    }\n    RemoteMetrics.prototype.increment = function (metric, tags) {\n        // All metrics are part of an allow list in Tracking API\n        if (!metric.includes('analytics_js.')) {\n            return;\n        }\n        // /m doesn't like empty tags\n        if (tags.length === 0) {\n            return;\n        }\n        if (Math.random() > this.sampleRate) {\n            return;\n        }\n        if (this.queue.length >= this.maxQueueSize) {\n            return;\n        }\n        var formatted = tags.reduce(function (acc, t) {\n            var _a = t.split(':'), k = _a[0], v = _a[1];\n            acc[k] = v;\n            return acc;\n        }, {});\n        formatted['library'] = 'analytics.js';\n        var type = getVersionType();\n        if (type === 'web') {\n            formatted['library_version'] = \"next-\".concat(version);\n        }\n        else {\n            formatted['library_version'] = \"npm:next-\".concat(version);\n        }\n        this.queue.push({\n            type: 'Counter',\n            metric: metric,\n            value: 1,\n            tags: formatted,\n        });\n        if (metric.includes('error')) {\n            this.flush().catch(logError);\n        }\n    };\n    RemoteMetrics.prototype.flush = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.queue.length <= 0) {\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.send().catch(function (error) {\n                                logError(error);\n                                _this.sampleRate = 0;\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RemoteMetrics.prototype.send = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var payload, headers, url;\n            return __generator(this, function (_a) {\n                payload = { series: this.queue };\n                this.queue = [];\n                headers = { 'Content-Type': 'text/plain' };\n                url = \"https://\".concat(this.host, \"/m\");\n                return [2 /*return*/, fetch(url, {\n                        headers: headers,\n                        body: JSON.stringify(payload),\n                        method: 'POST',\n                    })];\n            });\n        });\n    };\n    return RemoteMetrics;\n}());\nexport { RemoteMetrics };\n//# sourceMappingURL=remote-metrics.js.map"]},"metadata":{},"sourceType":"module"}