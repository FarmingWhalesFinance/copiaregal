{"ast":null,"code":"var identity = function (_) {\n  return _;\n};\n/**\n * Module exports, export\n */\n\n\nmodule.exports = multiple(find);\nmodule.exports.find = module.exports;\n/**\n * Export the replacement function, return the modified object\n */\n\nmodule.exports.replace = function (obj, key, val, options) {\n  multiple(replace).call(this, obj, key, val, options);\n  return obj;\n};\n/**\n * Export the delete function, return the modified object\n */\n\n\nmodule.exports.del = function (obj, key, options) {\n  multiple(del).call(this, obj, key, null, options);\n  return obj;\n};\n/**\n * Compose applying the function to a nested key\n */\n\n\nfunction multiple(fn) {\n  return function (obj, path, val, options) {\n    var normalize = options && isFunction(options.normalizer) ? options.normalizer : defaultNormalize;\n    path = normalize(path);\n    var key;\n    var finished = false;\n\n    while (!finished) loop();\n\n    function loop() {\n      for (key in obj) {\n        var normalizedKey = normalize(key);\n\n        if (0 === path.indexOf(normalizedKey)) {\n          var temp = path.substr(normalizedKey.length);\n\n          if (temp.charAt(0) === '.' || temp.length === 0) {\n            path = temp.substr(1);\n            var child = obj[key]; // we're at the end and there is nothing.\n\n            if (null == child) {\n              finished = true;\n              return;\n            } // we're at the end and there is something.\n\n\n            if (!path.length) {\n              finished = true;\n              return;\n            } // step into child\n\n\n            obj = child; // but we're done here\n\n            return;\n          }\n        }\n      }\n\n      key = undefined; // if we found no matching properties\n      // on the current object, there's no match.\n\n      finished = true;\n    }\n\n    if (!key) return;\n    if (null == obj) return obj; // the `obj` and `key` is one above the leaf object and key, so\n    // start object: { a: { 'b.c': 10 } }\n    // end object: { 'b.c': 10 }\n    // end key: 'b.c'\n    // this way, you can do `obj[key]` and get `10`.\n\n    return fn(obj, key, val);\n  };\n}\n/**\n * Find an object by its key\n *\n * find({ first_name : 'Calvin' }, 'firstName')\n */\n\n\nfunction find(obj, key) {\n  if (obj.hasOwnProperty(key)) return obj[key];\n}\n/**\n * Delete a value for a given key\n *\n * del({ a : 'b', x : 'y' }, 'X' }) -> { a : 'b' }\n */\n\n\nfunction del(obj, key) {\n  if (obj.hasOwnProperty(key)) delete obj[key];\n  return obj;\n}\n/**\n * Replace an objects existing value with a new one\n *\n * replace({ a : 'b' }, 'a', 'c') -> { a : 'c' }\n */\n\n\nfunction replace(obj, key, val) {\n  if (obj.hasOwnProperty(key)) obj[key] = val;\n  return obj;\n}\n/**\n * Normalize a `dot.separated.path`.\n *\n * A.HELL(!*&#(!)O_WOR   LD.bar => ahelloworldbar\n *\n * @param {String} path\n * @return {String}\n */\n\n\nfunction defaultNormalize(path) {\n  return path.replace(/[^a-zA-Z0-9\\.]+/g, '').toLowerCase();\n}\n/**\n * Check if a value is a function.\n *\n * @param {*} val\n * @return {boolean} Returns `true` if `val` is a function, otherwise `false`.\n */\n\n\nfunction isFunction(val) {\n  return typeof val === 'function';\n}","map":{"version":3,"names":["identity","_","module","exports","multiple","find","replace","obj","key","val","options","call","del","fn","path","normalize","isFunction","normalizer","defaultNormalize","finished","loop","normalizedKey","indexOf","temp","substr","length","charAt","child","undefined","hasOwnProperty","toLowerCase"],"sources":["C:/Users/rober/Documents/swaps-client/node_modules/obj-case/index.js"],"sourcesContent":["\nvar identity = function(_){ return _; };\n\n\n/**\n * Module exports, export\n */\n\nmodule.exports = multiple(find);\nmodule.exports.find = module.exports;\n\n\n/**\n * Export the replacement function, return the modified object\n */\n\nmodule.exports.replace = function (obj, key, val, options) {\n  multiple(replace).call(this, obj, key, val, options);\n  return obj;\n};\n\n\n/**\n * Export the delete function, return the modified object\n */\n\nmodule.exports.del = function (obj, key, options) {\n  multiple(del).call(this, obj, key, null, options);\n  return obj;\n};\n\n\n/**\n * Compose applying the function to a nested key\n */\n\nfunction multiple (fn) {\n  return function (obj, path, val, options) {\n    var normalize = options && isFunction(options.normalizer) ? options.normalizer : defaultNormalize;\n    path = normalize(path);\n\n    var key;\n    var finished = false;\n\n    while (!finished) loop();\n\n    function loop() {\n      for (key in obj) {\n        var normalizedKey = normalize(key);\n        if (0 === path.indexOf(normalizedKey)) {\n          var temp = path.substr(normalizedKey.length);\n          if (temp.charAt(0) === '.' || temp.length === 0) {\n            path = temp.substr(1);\n            var child = obj[key];\n\n            // we're at the end and there is nothing.\n            if (null == child) {\n              finished = true;\n              return;\n            }\n\n            // we're at the end and there is something.\n            if (!path.length) {\n              finished = true;\n              return;\n            }\n\n            // step into child\n            obj = child;\n\n            // but we're done here\n            return;\n          }\n        }\n      }\n\n      key = undefined;\n      // if we found no matching properties\n      // on the current object, there's no match.\n      finished = true;\n    }\n\n    if (!key) return;\n    if (null == obj) return obj;\n\n    // the `obj` and `key` is one above the leaf object and key, so\n    // start object: { a: { 'b.c': 10 } }\n    // end object: { 'b.c': 10 }\n    // end key: 'b.c'\n    // this way, you can do `obj[key]` and get `10`.\n    return fn(obj, key, val);\n  };\n}\n\n\n/**\n * Find an object by its key\n *\n * find({ first_name : 'Calvin' }, 'firstName')\n */\n\nfunction find (obj, key) {\n  if (obj.hasOwnProperty(key)) return obj[key];\n}\n\n\n/**\n * Delete a value for a given key\n *\n * del({ a : 'b', x : 'y' }, 'X' }) -> { a : 'b' }\n */\n\nfunction del (obj, key) {\n  if (obj.hasOwnProperty(key)) delete obj[key];\n  return obj;\n}\n\n\n/**\n * Replace an objects existing value with a new one\n *\n * replace({ a : 'b' }, 'a', 'c') -> { a : 'c' }\n */\n\nfunction replace (obj, key, val) {\n  if (obj.hasOwnProperty(key)) obj[key] = val;\n  return obj;\n}\n\n/**\n * Normalize a `dot.separated.path`.\n *\n * A.HELL(!*&#(!)O_WOR   LD.bar => ahelloworldbar\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction defaultNormalize(path) {\n  return path.replace(/[^a-zA-Z0-9\\.]+/g, '').toLowerCase();\n}\n\n/**\n * Check if a value is a function.\n *\n * @param {*} val\n * @return {boolean} Returns `true` if `val` is a function, otherwise `false`.\n */\n\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}