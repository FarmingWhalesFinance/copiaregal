{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGatewayUrl = void 0;\n\nconst getGatewayUrl = (uri, tokenId) => {\n  const match = new RegExp(/([a-z]+)(?::\\/\\/|\\/)(.*)/).exec(uri);\n\n  if (!match || match.length < 3) {\n    return uri;\n  }\n\n  const id = match[2];\n  let url = uri;\n\n  switch (match[1]) {\n    case 'ar':\n      {\n        url = `https://arweave.net/${id}`;\n        break;\n      }\n\n    case 'ipfs':\n      if (id.includes('ipfs') || id.includes('ipns')) {\n        url = `https://gateway.ipfs.io/${id}`;\n      } else {\n        url = `https://gateway.ipfs.io/ipfs/${id}`;\n      }\n\n      break;\n\n    case 'ipns':\n      if (id.includes('ipfs') || id.includes('ipns')) {\n        url = `https://gateway.ipfs.io/${id}`;\n      } else {\n        url = `https://gateway.ipfs.io/ipns/${id}`;\n      }\n\n      break;\n\n    case 'http':\n    case 'https':\n      break;\n  }\n\n  return tokenId ? url.replaceAll('{id}', tokenId) : url;\n};\n\nexports.getGatewayUrl = getGatewayUrl;","map":{"version":3,"sources":["../src/resolve.ts"],"names":[],"mappings":";;;;;;;AAAO,MAAM,aAAa,GAAG,CAAC,GAAD,EAAc,OAAd,KAA0C;EACrE,MAAM,KAAK,GAAG,IAAI,MAAJ,CAAW,0BAAX,EAAuC,IAAvC,CAA4C,GAA5C,CAAd;;EAEA,IAAI,CAAC,KAAD,IAAU,KAAK,CAAC,MAAN,GAAe,CAA7B,EAAgC;IAC9B,OAAO,GAAP;EACD;;EAED,MAAM,EAAE,GAAG,KAAK,CAAC,CAAD,CAAhB;EACA,IAAI,GAAG,GAAG,GAAV;;EAEA,QAAQ,KAAK,CAAC,CAAD,CAAb;IACE,KAAK,IAAL;MAAW;QACT,GAAG,GAAG,uBAAuB,EAAE,EAA/B;QACA;MACD;;IACD,KAAK,MAAL;MACE,IAAI,EAAE,CAAC,QAAH,CAAY,MAAZ,KAAuB,EAAE,CAAC,QAAH,CAAY,MAAZ,CAA3B,EAAgD;QAC9C,GAAG,GAAG,2BAA2B,EAAE,EAAnC;MACD,CAFD,MAEO;QACL,GAAG,GAAG,gCAAgC,EAAE,EAAxC;MACD;;MACD;;IACF,KAAK,MAAL;MACE,IAAI,EAAE,CAAC,QAAH,CAAY,MAAZ,KAAuB,EAAE,CAAC,QAAH,CAAY,MAAZ,CAA3B,EAAgD;QAC9C,GAAG,GAAG,2BAA2B,EAAE,EAAnC;MACD,CAFD,MAEO;QACL,GAAG,GAAG,gCAAgC,EAAE,EAAxC;MACD;;MACD;;IACF,KAAK,MAAL;IACA,KAAK,OAAL;MACE;EArBJ;;EAwBA,OAAO,OAAO,GAAG,GAAG,CAAC,UAAJ,CAAe,MAAf,EAAuB,OAAvB,CAAH,GAAqC,GAAnD;AACD,CAnCM;;AAAM,OAAA,CAAA,aAAA,GAAa,aAAb","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getGatewayUrl = void 0;\nconst getGatewayUrl = (uri, tokenId) => {\n    const match = new RegExp(/([a-z]+)(?::\\/\\/|\\/)(.*)/).exec(uri);\n    if (!match || match.length < 3) {\n        return uri;\n    }\n    const id = match[2];\n    let url = uri;\n    switch (match[1]) {\n        case 'ar': {\n            url = `https://arweave.net/${id}`;\n            break;\n        }\n        case 'ipfs':\n            if (id.includes('ipfs') || id.includes('ipns')) {\n                url = `https://gateway.ipfs.io/${id}`;\n            }\n            else {\n                url = `https://gateway.ipfs.io/ipfs/${id}`;\n            }\n            break;\n        case 'ipns':\n            if (id.includes('ipfs') || id.includes('ipns')) {\n                url = `https://gateway.ipfs.io/${id}`;\n            }\n            else {\n                url = `https://gateway.ipfs.io/ipns/${id}`;\n            }\n            break;\n        case 'http':\n        case 'https':\n            break;\n    }\n    return tokenId ? url.replaceAll('{id}', tokenId) : url;\n};\nexports.getGatewayUrl = getGatewayUrl;\n//# sourceMappingURL=resolve.js.map"]},"metadata":{},"sourceType":"script"}