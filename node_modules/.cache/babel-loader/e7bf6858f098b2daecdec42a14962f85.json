{"ast":null,"code":"import { embeddedWriteKey } from './embedded-write-key';\nvar analyticsScriptRegex = /(https:\\/\\/.*)\\/analytics\\.js\\/v1\\/(?:.*?)\\/(?:platform|analytics.*)?/;\n\nvar getCDNUrlFromScriptTag = function () {\n  var cdn;\n  var scripts = Array.prototype.slice.call(document.querySelectorAll('script'));\n  scripts.forEach(function (s) {\n    var _a;\n\n    var src = (_a = s.getAttribute('src')) !== null && _a !== void 0 ? _a : '';\n    var result = analyticsScriptRegex.exec(src);\n\n    if (result && result[1]) {\n      cdn = result[1];\n    }\n  });\n  return cdn;\n};\n\nvar _globalCDN; // set globalCDN as in-memory singleton\n\n\nvar getGlobalCDNUrl = function () {\n  var _a;\n\n  var result = _globalCDN !== null && _globalCDN !== void 0 ? _globalCDN : (_a = window.analytics) === null || _a === void 0 ? void 0 : _a._cdn;\n  return result;\n};\n\nexport var setGlobalCDNUrl = function (cdn) {\n  if (window.analytics) {\n    window.analytics._cdn = cdn;\n  }\n\n  _globalCDN = cdn;\n};\nexport var getCDN = function () {\n  var globalCdnUrl = getGlobalCDNUrl();\n  if (globalCdnUrl) return globalCdnUrl;\n  var cdnFromScriptTag = getCDNUrlFromScriptTag();\n\n  if (cdnFromScriptTag) {\n    return cdnFromScriptTag;\n  } else {\n    // it's possible that the CDN is not found in the page because:\n    // - the script is loaded through a proxy\n    // - the script is removed after execution\n    // in this case, we fall back to the default Segment CDN\n    return \"https://cdn.segment.com\";\n  }\n};\nexport var getNextIntegrationsURL = function () {\n  var cdn = getCDN();\n  return \"\".concat(cdn, \"/next-integrations\");\n};\n/**\n * Replaces the CDN URL in the script tag with the one from Analytics.js 1.0\n *\n * @returns the path to Analytics JS 1.0\n **/\n\nexport function getLegacyAJSPath() {\n  var _a, _b;\n\n  var writeKey = (_a = embeddedWriteKey()) !== null && _a !== void 0 ? _a : window.analytics._writeKey;\n  var scripts = Array.prototype.slice.call(document.querySelectorAll('script'));\n  var path = undefined;\n\n  for (var _i = 0, scripts_1 = scripts; _i < scripts_1.length; _i++) {\n    var s = scripts_1[_i];\n    var src = (_b = s.getAttribute('src')) !== null && _b !== void 0 ? _b : '';\n    var result = analyticsScriptRegex.exec(src);\n\n    if (result && result[1]) {\n      path = src;\n      break;\n    }\n  }\n\n  if (path) {\n    return path.replace('analytics.min.js', 'analytics.classic.js');\n  }\n\n  return \"https://cdn.segment.com/analytics.js/v1/\".concat(writeKey, \"/analytics.classic.js\");\n}","map":{"version":3,"sources":["../../../src/lib/parse-cdn.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { embeddedWriteKey } from './embedded-write-key';\nvar analyticsScriptRegex = /(https:\\/\\/.*)\\/analytics\\.js\\/v1\\/(?:.*?)\\/(?:platform|analytics.*)?/;\nvar getCDNUrlFromScriptTag = function () {\n    var cdn;\n    var scripts = Array.prototype.slice.call(document.querySelectorAll('script'));\n    scripts.forEach(function (s) {\n        var _a;\n        var src = (_a = s.getAttribute('src')) !== null && _a !== void 0 ? _a : '';\n        var result = analyticsScriptRegex.exec(src);\n        if (result && result[1]) {\n            cdn = result[1];\n        }\n    });\n    return cdn;\n};\nvar _globalCDN; // set globalCDN as in-memory singleton\nvar getGlobalCDNUrl = function () {\n    var _a;\n    var result = _globalCDN !== null && _globalCDN !== void 0 ? _globalCDN : (_a = window.analytics) === null || _a === void 0 ? void 0 : _a._cdn;\n    return result;\n};\nexport var setGlobalCDNUrl = function (cdn) {\n    if (window.analytics) {\n        window.analytics._cdn = cdn;\n    }\n    _globalCDN = cdn;\n};\nexport var getCDN = function () {\n    var globalCdnUrl = getGlobalCDNUrl();\n    if (globalCdnUrl)\n        return globalCdnUrl;\n    var cdnFromScriptTag = getCDNUrlFromScriptTag();\n    if (cdnFromScriptTag) {\n        return cdnFromScriptTag;\n    }\n    else {\n        // it's possible that the CDN is not found in the page because:\n        // - the script is loaded through a proxy\n        // - the script is removed after execution\n        // in this case, we fall back to the default Segment CDN\n        return \"https://cdn.segment.com\";\n    }\n};\nexport var getNextIntegrationsURL = function () {\n    var cdn = getCDN();\n    return \"\".concat(cdn, \"/next-integrations\");\n};\n/**\n * Replaces the CDN URL in the script tag with the one from Analytics.js 1.0\n *\n * @returns the path to Analytics JS 1.0\n **/\nexport function getLegacyAJSPath() {\n    var _a, _b;\n    var writeKey = (_a = embeddedWriteKey()) !== null && _a !== void 0 ? _a : window.analytics._writeKey;\n    var scripts = Array.prototype.slice.call(document.querySelectorAll('script'));\n    var path = undefined;\n    for (var _i = 0, scripts_1 = scripts; _i < scripts_1.length; _i++) {\n        var s = scripts_1[_i];\n        var src = (_b = s.getAttribute('src')) !== null && _b !== void 0 ? _b : '';\n        var result = analyticsScriptRegex.exec(src);\n        if (result && result[1]) {\n            path = src;\n            break;\n        }\n    }\n    if (path) {\n        return path.replace('analytics.min.js', 'analytics.classic.js');\n    }\n    return \"https://cdn.segment.com/analytics.js/v1/\".concat(writeKey, \"/analytics.classic.js\");\n}\n//# sourceMappingURL=parse-cdn.js.map"]},"metadata":{},"sourceType":"module"}