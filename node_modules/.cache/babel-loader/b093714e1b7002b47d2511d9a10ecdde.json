{"ast":null,"code":"import { __assign, __extends, __spreadArray } from \"tslib\";\nimport { PriorityQueue } from '.';\nimport { Context } from '../../core/context';\nimport { isBrowser } from '../../core/environment';\nvar loc = {\n  getItem: function () {},\n  setItem: function () {},\n  removeItem: function () {}\n};\n\ntry {\n  loc = isBrowser() && window.localStorage ? window.localStorage : loc;\n} catch (err) {\n  console.warn('Unable to access localStorage', err);\n}\n\nfunction persisted(key) {\n  var items = loc.getItem(key);\n  return (items ? JSON.parse(items) : []).map(function (p) {\n    return new Context(p.event, p.id);\n  });\n}\n\nfunction persistItems(key, items) {\n  var existing = persisted(key);\n\n  var all = __spreadArray(__spreadArray([], items, true), existing, true);\n\n  var merged = all.reduce(function (acc, item) {\n    var _a;\n\n    return __assign(__assign({}, acc), (_a = {}, _a[item.id] = item, _a));\n  }, {});\n  loc.setItem(key, JSON.stringify(Object.values(merged)));\n}\n\nfunction seen(key) {\n  var stored = loc.getItem(key);\n  return stored ? JSON.parse(stored) : {};\n}\n\nfunction persistSeen(key, memory) {\n  var stored = seen(key);\n  loc.setItem(key, JSON.stringify(__assign(__assign({}, stored), memory)));\n}\n\nfunction remove(key) {\n  loc.removeItem(key);\n}\n\nvar now = function () {\n  return new Date().getTime();\n};\n\nfunction mutex(key, onUnlock, attempt) {\n  if (attempt === void 0) {\n    attempt = 0;\n  }\n\n  var lockTimeout = 50;\n  var lockKey = \"persisted-queue:v1:\".concat(key, \":lock\");\n\n  var expired = function (lock) {\n    return new Date().getTime() > lock;\n  };\n\n  var rawLock = loc.getItem(lockKey);\n  var lock = rawLock ? JSON.parse(rawLock) : null;\n  var allowed = lock === null || expired(lock);\n\n  if (allowed) {\n    loc.setItem(lockKey, JSON.stringify(now() + lockTimeout));\n    onUnlock();\n    loc.removeItem(lockKey);\n    return;\n  }\n\n  if (!allowed && attempt < 3) {\n    setTimeout(function () {\n      mutex(key, onUnlock, attempt + 1);\n    }, lockTimeout);\n  } else {\n    console.error('Unable to retrieve lock');\n  }\n}\n\nvar PersistedPriorityQueue =\n/** @class */\nfunction (_super) {\n  __extends(PersistedPriorityQueue, _super);\n\n  function PersistedPriorityQueue(maxAttempts, key) {\n    var _this = _super.call(this, maxAttempts, []) || this;\n\n    var itemsKey = \"persisted-queue:v1:\".concat(key, \":items\");\n    var seenKey = \"persisted-queue:v1:\".concat(key, \":seen\");\n    var saved = [];\n    var lastSeen = {};\n    mutex(key, function () {\n      try {\n        saved = persisted(itemsKey);\n        lastSeen = seen(seenKey);\n        remove(itemsKey);\n        remove(seenKey);\n        _this.queue = __spreadArray(__spreadArray([], saved, true), _this.queue, true);\n        _this.seen = __assign(__assign({}, lastSeen), _this.seen);\n      } catch (err) {\n        console.error(err);\n      }\n    });\n    window.addEventListener('beforeunload', function () {\n      if (_this.todo > 0) {\n        var items_1 = __spreadArray(__spreadArray([], _this.queue, true), _this.future, true);\n\n        try {\n          mutex(key, function () {\n            persistItems(itemsKey, items_1);\n            persistSeen(seenKey, _this.seen);\n          });\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    });\n    return _this;\n  }\n\n  return PersistedPriorityQueue;\n}(PriorityQueue);\n\nexport { PersistedPriorityQueue };","map":{"version":3,"sources":["../../../../src/lib/priority-queue/persisted.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends, __spreadArray } from \"tslib\";\nimport { PriorityQueue } from '.';\nimport { Context } from '../../core/context';\nimport { isBrowser } from '../../core/environment';\nvar loc = {\n    getItem: function () { },\n    setItem: function () { },\n    removeItem: function () { },\n};\ntry {\n    loc = isBrowser() && window.localStorage ? window.localStorage : loc;\n}\ncatch (err) {\n    console.warn('Unable to access localStorage', err);\n}\nfunction persisted(key) {\n    var items = loc.getItem(key);\n    return (items ? JSON.parse(items) : []).map(function (p) { return new Context(p.event, p.id); });\n}\nfunction persistItems(key, items) {\n    var existing = persisted(key);\n    var all = __spreadArray(__spreadArray([], items, true), existing, true);\n    var merged = all.reduce(function (acc, item) {\n        var _a;\n        return __assign(__assign({}, acc), (_a = {}, _a[item.id] = item, _a));\n    }, {});\n    loc.setItem(key, JSON.stringify(Object.values(merged)));\n}\nfunction seen(key) {\n    var stored = loc.getItem(key);\n    return stored ? JSON.parse(stored) : {};\n}\nfunction persistSeen(key, memory) {\n    var stored = seen(key);\n    loc.setItem(key, JSON.stringify(__assign(__assign({}, stored), memory)));\n}\nfunction remove(key) {\n    loc.removeItem(key);\n}\nvar now = function () { return new Date().getTime(); };\nfunction mutex(key, onUnlock, attempt) {\n    if (attempt === void 0) { attempt = 0; }\n    var lockTimeout = 50;\n    var lockKey = \"persisted-queue:v1:\".concat(key, \":lock\");\n    var expired = function (lock) { return new Date().getTime() > lock; };\n    var rawLock = loc.getItem(lockKey);\n    var lock = rawLock ? JSON.parse(rawLock) : null;\n    var allowed = lock === null || expired(lock);\n    if (allowed) {\n        loc.setItem(lockKey, JSON.stringify(now() + lockTimeout));\n        onUnlock();\n        loc.removeItem(lockKey);\n        return;\n    }\n    if (!allowed && attempt < 3) {\n        setTimeout(function () {\n            mutex(key, onUnlock, attempt + 1);\n        }, lockTimeout);\n    }\n    else {\n        console.error('Unable to retrieve lock');\n    }\n}\nvar PersistedPriorityQueue = /** @class */ (function (_super) {\n    __extends(PersistedPriorityQueue, _super);\n    function PersistedPriorityQueue(maxAttempts, key) {\n        var _this = _super.call(this, maxAttempts, []) || this;\n        var itemsKey = \"persisted-queue:v1:\".concat(key, \":items\");\n        var seenKey = \"persisted-queue:v1:\".concat(key, \":seen\");\n        var saved = [];\n        var lastSeen = {};\n        mutex(key, function () {\n            try {\n                saved = persisted(itemsKey);\n                lastSeen = seen(seenKey);\n                remove(itemsKey);\n                remove(seenKey);\n                _this.queue = __spreadArray(__spreadArray([], saved, true), _this.queue, true);\n                _this.seen = __assign(__assign({}, lastSeen), _this.seen);\n            }\n            catch (err) {\n                console.error(err);\n            }\n        });\n        window.addEventListener('beforeunload', function () {\n            if (_this.todo > 0) {\n                var items_1 = __spreadArray(__spreadArray([], _this.queue, true), _this.future, true);\n                try {\n                    mutex(key, function () {\n                        persistItems(itemsKey, items_1);\n                        persistSeen(seenKey, _this.seen);\n                    });\n                }\n                catch (err) {\n                    console.error(err);\n                }\n            }\n        });\n        return _this;\n    }\n    return PersistedPriorityQueue;\n}(PriorityQueue));\nexport { PersistedPriorityQueue };\n//# sourceMappingURL=persisted.js.map"]},"metadata":{},"sourceType":"module"}