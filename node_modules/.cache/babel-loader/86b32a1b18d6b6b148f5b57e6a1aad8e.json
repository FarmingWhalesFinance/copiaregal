{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\copiaswaps-client\\\\swaps-client\\\\src\\\\views\\\\Exchange\\\\Exchange.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo, useCallback, forwardRef, useImperativeHandle } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useSWR from \"swr\";\nimport { ethers } from \"ethers\";\nimport { useLocalStorage } from \"react-use\";\nimport { FUNDING_RATE_PRECISION, BASIS_POINTS_DIVISOR, MARGIN_FEE_BASIS_POINTS, SWAP, LONG, SHORT, USD_DECIMALS, CHART_PERIODS, getExplorerUrl, helperToast, formatAmount, bigNumberify, getTokenInfo, fetcher, getPositionKey, getPositionContractKey, getLeverage, useLocalStorageByChainId, getDeltaStr, getDeltaAfterFees, useChainId, useAccountOrders, getPageTitle, useLocalStorageSerializeKey } from \"../../Helpers\";\nimport { getConstant } from \"../../Constants\";\nimport { approvePlugin } from \"../../Api\";\nimport { useChartPrices } from \"../../Api\";\nimport { getContract } from \"../../Addresses\";\nimport { getTokens, getToken, getWhitelistedTokens, getTokenBySymbol } from \"../../data/Tokens\";\nimport Reader from \"../../abis/ReaderV2.json\";\nimport VaultV2 from \"../../abis/VaultV2.json\";\nimport Router from \"../../abis/Router.json\";\nimport Token from \"../../abis/Token.json\";\nimport Checkbox from \"../../components/Checkbox/Checkbox\";\nimport SwapBox from \"../../components/Exchange/SwapBox\";\nimport ExchangeTVChart, { getChartToken } from \"../../components/Exchange/ExchangeTVChart\";\nimport ExchangeAdvancedTVChart from \"../../components/Exchange/ExchangeAdvancedTVChart\";\nimport PositionsList from \"../../components/Exchange/PositionsList\";\nimport OrdersList from \"../../components/Exchange/OrdersList\";\nimport TradeHistory from \"../../components/Exchange/TradeHistory\";\nimport ExchangeWalletTokens from \"../../components/Exchange/ExchangeWalletTokens\";\nimport Tab from \"../../components/Tab/Tab\";\nimport \"./Exchange.css\";\nimport SEO from \"../../components/Common/SEO\";\nimport { ExchangeHeader } from \"../../components/Exchange/ExchangeHeader\";\nimport TradingCompBanner from \"../../components/Exchange/TradingCompBanner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  AddressZero\n} = ethers.constants;\nconst PENDING_POSITION_VALID_DURATION = 600 * 1000;\nconst UPDATED_POSITION_VALID_DURATION = 60 * 1000;\nconst DEFAULT_PERIOD = \"4h\";\nconst notifications = {};\n\nfunction pushSuccessNotification(chainId, message, e) {\n  const {\n    transactionHash\n  } = e;\n  const id = ethers.utils.id(message + transactionHash);\n\n  if (notifications[id]) {\n    return;\n  }\n\n  notifications[id] = true;\n  const txUrl = getExplorerUrl(chainId) + \"tx/\" + transactionHash;\n  helperToast.success( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [message, \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: txUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this));\n}\n\nfunction pushErrorNotification(chainId, message, e) {\n  const {\n    transactionHash\n  } = e;\n  const id = ethers.utils.id(message + transactionHash);\n\n  if (notifications[id]) {\n    return;\n  }\n\n  notifications[id] = true;\n  const txUrl = getExplorerUrl(chainId) + \"tx/\" + transactionHash;\n  helperToast.error( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [message, \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: txUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this));\n}\n\nfunction getFundingFee(data) {\n  let {\n    entryFundingRate,\n    cumulativeFundingRate,\n    size\n  } = data;\n\n  if (entryFundingRate && cumulativeFundingRate) {\n    return size.mul(cumulativeFundingRate.sub(entryFundingRate)).div(FUNDING_RATE_PRECISION);\n  }\n\n  return;\n}\n\nconst getTokenAddress = (token, nativeTokenAddress) => {\n  if (token.address === AddressZero) {\n    return nativeTokenAddress;\n  }\n\n  return token.address;\n};\n\nfunction applyPendingChanges(position, pendingPositions) {\n  if (!pendingPositions) {\n    return;\n  }\n\n  const {\n    key\n  } = position;\n\n  if (pendingPositions[key] && pendingPositions[key].updatedAt && pendingPositions[key].pendingChanges && pendingPositions[key].updatedAt + PENDING_POSITION_VALID_DURATION > Date.now()) {\n    const {\n      pendingChanges\n    } = pendingPositions[key];\n\n    if (pendingChanges.size && position.size.eq(pendingChanges.size)) {\n      return;\n    }\n\n    if (pendingChanges.expectingCollateralChange && !position.collateral.eq(pendingChanges.collateralSnapshot)) {\n      return;\n    }\n\n    position.hasPendingChanges = true;\n    position.pendingChanges = pendingChanges;\n  }\n}\n\nexport function getPositions(chainId, positionQuery, positionData, infoTokens, includeDelta, showPnlAfterFees, account, pendingPositions, updatedPositions) {\n  const propsLength = getConstant(chainId, \"positionReaderPropsLength\");\n  const positions = [];\n  const positionsMap = {};\n\n  if (!positionData) {\n    return {\n      positions,\n      positionsMap\n    };\n  }\n\n  const {\n    collateralTokens,\n    indexTokens,\n    isLong\n  } = positionQuery;\n\n  for (let i = 0; i < collateralTokens.length; i++) {\n    const collateralToken = getTokenInfo(infoTokens, collateralTokens[i], true, getContract(chainId, \"NATIVE_TOKEN\"));\n    const indexToken = getTokenInfo(infoTokens, indexTokens[i], true, getContract(chainId, \"NATIVE_TOKEN\"));\n    const key = getPositionKey(account, collateralTokens[i], indexTokens[i], isLong[i]);\n    let contractKey;\n\n    if (account) {\n      contractKey = getPositionContractKey(account, collateralTokens[i], indexTokens[i], isLong[i]);\n    }\n\n    const position = {\n      key,\n      contractKey,\n      collateralToken,\n      indexToken,\n      isLong: isLong[i],\n      size: positionData[i * propsLength],\n      collateral: positionData[i * propsLength + 1],\n      averagePrice: positionData[i * propsLength + 2],\n      entryFundingRate: positionData[i * propsLength + 3],\n      cumulativeFundingRate: collateralToken.cumulativeFundingRate,\n      hasRealisedProfit: positionData[i * propsLength + 4].eq(1),\n      realisedPnl: positionData[i * propsLength + 5],\n      lastIncreasedTime: positionData[i * propsLength + 6].toNumber(),\n      hasProfit: positionData[i * propsLength + 7].eq(1),\n      delta: positionData[i * propsLength + 8],\n      markPrice: isLong[i] ? indexToken.minPrice : indexToken.maxPrice\n    };\n\n    if (updatedPositions && updatedPositions[key] && updatedPositions[key].updatedAt && updatedPositions[key].updatedAt + UPDATED_POSITION_VALID_DURATION > Date.now()) {\n      const updatedPosition = updatedPositions[key];\n      position.size = updatedPosition.size;\n      position.collateral = updatedPosition.collateral;\n      position.averagePrice = updatedPosition.averagePrice;\n      position.entryFundingRate = updatedPosition.entryFundingRate;\n    }\n\n    let fundingFee = getFundingFee(position);\n    position.fundingFee = fundingFee ? fundingFee : bigNumberify(0);\n    position.collateralAfterFee = position.collateral.sub(position.fundingFee);\n    position.closingFee = position.size.mul(MARGIN_FEE_BASIS_POINTS).div(BASIS_POINTS_DIVISOR);\n    position.positionFee = position.size.mul(MARGIN_FEE_BASIS_POINTS).mul(2).div(BASIS_POINTS_DIVISOR);\n    position.totalFees = position.positionFee.add(position.fundingFee);\n    position.pendingDelta = position.delta;\n\n    if (position.collateral.gt(0)) {\n      position.hasLowCollateral = position.collateralAfterFee.lt(0) || position.size.div(position.collateralAfterFee.abs()).gt(50);\n\n      if (position.averagePrice && position.markPrice) {\n        const priceDelta = position.averagePrice.gt(position.markPrice) ? position.averagePrice.sub(position.markPrice) : position.markPrice.sub(position.averagePrice);\n        position.pendingDelta = position.size.mul(priceDelta).div(position.averagePrice);\n        position.delta = position.pendingDelta;\n\n        if (position.isLong) {\n          position.hasProfit = position.markPrice.gte(position.averagePrice);\n        } else {\n          position.hasProfit = position.markPrice.lte(position.averagePrice);\n        }\n      }\n\n      position.deltaPercentage = position.pendingDelta.mul(BASIS_POINTS_DIVISOR).div(position.collateral);\n      const {\n        deltaStr,\n        deltaPercentageStr\n      } = getDeltaStr({\n        delta: position.pendingDelta,\n        deltaPercentage: position.deltaPercentage,\n        hasProfit: position.hasProfit\n      });\n      position.deltaStr = deltaStr;\n      position.deltaPercentageStr = deltaPercentageStr;\n      position.deltaBeforeFeesStr = deltaStr;\n      const {\n        pendingDeltaAfterFees,\n        deltaPercentageAfterFees,\n        hasProfitAfterFees\n      } = getDeltaAfterFees({\n        delta: position.pendingDelta,\n        totalFees: position.totalFees,\n        hasProfit: position.hasProfit,\n        collateral: position.collateral\n      });\n      position.hasProfitAfterFees = hasProfitAfterFees;\n      position.pendingDeltaAfterFees = pendingDeltaAfterFees;\n      position.deltaPercentageAfterFees = deltaPercentageAfterFees;\n      const {\n        deltaStr: deltaAfterFeesStr,\n        deltaPercentageStr: deltaAfterFeesPercentageStr\n      } = getDeltaStr({\n        delta: position.pendingDeltaAfterFees,\n        deltaPercentage: position.deltaPercentageAfterFees,\n        hasProfit: hasProfitAfterFees\n      });\n      position.deltaAfterFeesStr = deltaAfterFeesStr;\n      position.deltaAfterFeesPercentageStr = deltaAfterFeesPercentageStr;\n\n      if (showPnlAfterFees) {\n        position.deltaStr = position.deltaAfterFeesStr;\n        position.deltaPercentageStr = position.deltaAfterFeesPercentageStr;\n      }\n\n      let netValue = position.hasProfit ? position.collateral.add(position.pendingDelta) : position.collateral.sub(position.pendingDelta);\n      netValue = netValue.sub(position.fundingFee);\n\n      if (showPnlAfterFees) {\n        netValue = netValue.sub(position.closingFee);\n      }\n\n      position.netValue = netValue;\n    }\n\n    position.leverage = getLeverage({\n      size: position.size,\n      collateral: position.collateral,\n      entryFundingRate: position.entryFundingRate,\n      cumulativeFundingRate: position.cumulativeFundingRate,\n      hasProfit: position.hasProfit,\n      delta: position.delta,\n      includeDelta\n    });\n    positionsMap[key] = position;\n    applyPendingChanges(position, pendingPositions);\n\n    if (position.size.gt(0) || position.hasPendingChanges) {\n      positions.push(position);\n    }\n  }\n\n  return {\n    positions,\n    positionsMap\n  };\n}\nexport function getPositionQuery(tokens, nativeTokenAddress) {\n  const collateralTokens = [];\n  const indexTokens = [];\n  const isLong = [];\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n\n    if (token.isStable) {\n      continue;\n    }\n\n    if (token.isWrapped) {\n      continue;\n    }\n\n    collateralTokens.push(getTokenAddress(token, nativeTokenAddress));\n    indexTokens.push(getTokenAddress(token, nativeTokenAddress));\n    isLong.push(true);\n  }\n\n  for (let i = 0; i < tokens.length; i++) {\n    const stableToken = tokens[i];\n\n    if (!stableToken.isStable) {\n      continue;\n    }\n\n    for (let j = 0; j < tokens.length; j++) {\n      const token = tokens[j];\n\n      if (token.isStable) {\n        continue;\n      }\n\n      if (token.isWrapped) {\n        continue;\n      }\n\n      collateralTokens.push(stableToken.address);\n      indexTokens.push(getTokenAddress(token, nativeTokenAddress));\n      isLong.push(false);\n    }\n  }\n\n  return {\n    collateralTokens,\n    indexTokens,\n    isLong\n  };\n}\nexport const Exchange = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    savedIsPnlInLeverage,\n    setSavedIsPnlInLeverage,\n    savedShowPnlAfterFees,\n    savedSlippageAmount,\n    pendingTxns,\n    setPendingTxns,\n    savedShouldShowPositionLines,\n    setSavedShouldShowPositionLines,\n    connectWallet,\n    infoTokens,\n    trackPageWithTraits,\n    trackAction,\n    sidebarVisible,\n    analytics\n  } = props;\n  const [pendingPositions, setPendingPositions] = useState({});\n  const [updatedPositions, setUpdatedPositions] = useState({});\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const {\n    active,\n    account,\n    library\n  } = useWeb3React();\n  const {\n    chainId\n  } = useChainId();\n  const currentAccount = account;\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n  const vaultAddress = getContract(chainId, \"Vault\");\n  const positionRouterAddress = getContract(chainId, \"PositionRouter\");\n  const readerAddress = getContract(chainId, \"Reader\");\n  const usdgAddress = getContract(chainId, \"USDG\");\n  const whitelistedTokens = getWhitelistedTokens(chainId);\n  const positionQuery = getPositionQuery(whitelistedTokens, nativeTokenAddress);\n  const defaultCollateralSymbol = getConstant(chainId, \"defaultCollateralSymbol\");\n  const defaultTokenSelection = useMemo(() => ({\n    [SWAP]: {\n      from: AddressZero,\n      to: getTokenBySymbol(chainId, defaultCollateralSymbol).address\n    },\n    [LONG]: {\n      from: AddressZero,\n      to: AddressZero\n    },\n    [SHORT]: {\n      from: getTokenBySymbol(chainId, defaultCollateralSymbol).address,\n      to: AddressZero\n    }\n  }), [chainId, defaultCollateralSymbol]);\n  const [tokenSelection, setTokenSelection] = useLocalStorageByChainId(chainId, \"Exchange-token-selection-v2\", defaultTokenSelection);\n  const [swapOption, setSwapOption] = useLocalStorageByChainId(chainId, \"Swap-option-v2\", LONG);\n  const fromTokenAddress = tokenSelection[swapOption].from;\n  const toTokenAddress = tokenSelection[swapOption].to;\n  const setFromTokenAddress = useCallback((selectedSwapOption, address) => {\n    const newTokenSelection = JSON.parse(JSON.stringify(tokenSelection));\n    newTokenSelection[selectedSwapOption].from = address;\n    setTokenSelection(newTokenSelection);\n  }, [tokenSelection, setTokenSelection]);\n  const setToTokenAddress = useCallback((selectedSwapOption, address) => {\n    const newTokenSelection = JSON.parse(JSON.stringify(tokenSelection));\n    newTokenSelection[selectedSwapOption].to = address;\n\n    if (selectedSwapOption === LONG || selectedSwapOption === SHORT) {\n      newTokenSelection[LONG].to = address;\n      newTokenSelection[SHORT].to = address;\n    }\n\n    setTokenSelection(newTokenSelection);\n  }, [tokenSelection, setTokenSelection]);\n\n  const setMarket = (selectedSwapOption, toTokenAddress) => {\n    setSwapOption(selectedSwapOption);\n    const newTokenSelection = JSON.parse(JSON.stringify(tokenSelection));\n    newTokenSelection[selectedSwapOption].to = toTokenAddress;\n\n    if (selectedSwapOption === LONG || selectedSwapOption === SHORT) {\n      newTokenSelection[LONG].to = toTokenAddress;\n      newTokenSelection[SHORT].to = toTokenAddress;\n    }\n\n    setTokenSelection(newTokenSelection);\n  };\n\n  const [isConfirming, setIsConfirming] = useState(false);\n  const [isPendingConfirmation, setIsPendingConfirmation] = useState(false);\n  const tokens = getTokens(chainId);\n  const {\n    data: positionData,\n    error: positionDataError\n  } = useSWR(active && [active, chainId, readerAddress, \"getPositions\", vaultAddress, account], {\n    fetcher: fetcher(library, Reader, [positionQuery.collateralTokens, positionQuery.indexTokens, positionQuery.isLong])\n  });\n  const positionsDataIsLoading = active && !positionData && !positionDataError;\n  const {\n    data: totalTokenWeights\n  } = useSWR([`Exchange:totalTokenWeights:${active}`, chainId, vaultAddress, \"totalTokenWeights\"], {\n    fetcher: fetcher(library, VaultV2)\n  });\n  const {\n    data: usdgSupply\n  } = useSWR([`Exchange:usdgSupply:${active}`, chainId, usdgAddress, \"totalSupply\"], {\n    fetcher: fetcher(library, Token)\n  });\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const routerAddress = getContract(chainId, \"Router\");\n  const {\n    data: orderBookApproved\n  } = useSWR(active && [active, chainId, routerAddress, \"approvedPlugins\", account, orderBookAddress], {\n    fetcher: fetcher(library, Router)\n  });\n  const {\n    data: positionRouterApproved\n  } = useSWR(active && [active, chainId, routerAddress, \"approvedPlugins\", account, positionRouterAddress], {\n    fetcher: fetcher(library, Router)\n  });\n  useEffect(() => {\n    const fromToken = getTokenInfo(infoTokens, fromTokenAddress);\n    const toToken = getTokenInfo(infoTokens, toTokenAddress);\n    let selectedToken = getChartToken(swapOption, fromToken, toToken, chainId);\n    let currentTokenPriceStr = formatAmount(selectedToken.maxPrice, USD_DECIMALS, 2, true);\n    let title = getPageTitle(currentTokenPriceStr + ` | ${selectedToken.symbol}${selectedToken.isStable ? \"\" : \"USD\"}`);\n    document.title = title;\n  }, [tokenSelection, swapOption, infoTokens, chainId, fromTokenAddress, toTokenAddress]);\n  const {\n    positions,\n    positionsMap\n  } = getPositions(chainId, positionQuery, positionData, infoTokens, savedIsPnlInLeverage, savedShowPnlAfterFees, account, pendingPositions, updatedPositions);\n  useImperativeHandle(ref, () => ({\n    onUpdatePosition(key, size, collateral, averagePrice, entryFundingRate, reserveAmount, realisedPnl) {\n      for (let i = 0; i < positions.length; i++) {\n        const position = positions[i];\n\n        if (position.contractKey === key) {\n          updatedPositions[position.key] = {\n            size,\n            collateral,\n            averagePrice,\n            entryFundingRate,\n            reserveAmount,\n            realisedPnl,\n            updatedAt: Date.now()\n          };\n          setUpdatedPositions({ ...updatedPositions\n          });\n          break;\n        }\n      }\n    },\n\n    onClosePosition(key, size, collateral, averagePrice, entryFundingRate, reserveAmount, realisedPnl, e) {\n      for (let i = 0; i < positions.length; i++) {\n        const position = positions[i];\n\n        if (position.contractKey === key) {\n          updatedPositions[position.key] = {\n            size: bigNumberify(0),\n            collateral: bigNumberify(0),\n            averagePrice,\n            entryFundingRate,\n            reserveAmount,\n            realisedPnl,\n            updatedAt: Date.now()\n          };\n          setUpdatedPositions({ ...updatedPositions\n          });\n          break;\n        }\n      }\n    },\n\n    onIncreasePosition(key, account, collateralToken, indexToken, collateralDelta, sizeDelta, isLong, price, fee, e) {\n      if (account !== currentAccount) {\n        return;\n      }\n\n      const indexTokenItem = getToken(chainId, indexToken);\n      const tokenSymbol = indexTokenItem.isWrapped ? getConstant(chainId, \"nativeTokenSymbol\") : indexTokenItem.symbol;\n      let message;\n\n      if (sizeDelta.eq(0)) {\n        message = `Deposited ${formatAmount(collateralDelta, USD_DECIMALS, 2, true)} USD into ${tokenSymbol} ${isLong ? \"Long\" : \"Short.\"}`;\n      } else {\n        message = `Increased ${tokenSymbol} ${isLong ? \"Long\" : \"Short\"}, +${formatAmount(sizeDelta, USD_DECIMALS, 2, true)} USD.`;\n      }\n\n      pushSuccessNotification(chainId, message, e);\n    },\n\n    onDecreasePosition(key, account, collateralToken, indexToken, collateralDelta, sizeDelta, isLong, price, fee, e) {\n      if (account !== currentAccount) {\n        return;\n      }\n\n      const indexTokenItem = getToken(chainId, indexToken);\n      const tokenSymbol = indexTokenItem.isWrapped ? getConstant(chainId, \"nativeTokenSymbol\") : indexTokenItem.symbol;\n      let message;\n\n      if (sizeDelta.eq(0)) {\n        message = `Withdrew ${formatAmount(collateralDelta, USD_DECIMALS, 2, true)} USD from ${tokenSymbol} ${isLong ? \"Long\" : \"Short\"}.`;\n      } else {\n        message = `Decreased ${tokenSymbol} ${isLong ? \"Long\" : \"Short\"}, -${formatAmount(sizeDelta, USD_DECIMALS, 2, true)} USD.`;\n      }\n\n      pushSuccessNotification(chainId, message, e);\n    },\n\n    onCancelIncreasePosition(account, path, indexToken, amountIn, minOut, sizeDelta, isLong, acceptablePrice, executionFee, blockGap, timeGap, e) {\n      if (account !== currentAccount) {\n        return;\n      }\n\n      const indexTokenItem = getToken(chainId, indexToken);\n      const tokenSymbol = indexTokenItem.isWrapped ? getConstant(chainId, \"nativeTokenSymbol\") : indexTokenItem.symbol;\n      const message = `Could not increase ${tokenSymbol} ${isLong ? \"Long\" : \"Short\"} within the allowed slippage, you can adjust the allowed slippage in the settings on the top right of the page.`;\n      pushErrorNotification(chainId, message, e);\n      const key = getPositionKey(account, path[path.length - 1], indexToken, isLong);\n      pendingPositions[key] = {};\n      setPendingPositions({ ...pendingPositions\n      });\n    },\n\n    onCancelDecreasePosition(account, path, indexToken, collateralDelta, sizeDelta, isLong, receiver, acceptablePrice, minOut, executionFee, blockGap, timeGap, e) {\n      if (account !== currentAccount) {\n        return;\n      }\n\n      const indexTokenItem = getToken(chainId, indexToken);\n      const tokenSymbol = indexTokenItem.isWrapped ? getConstant(chainId, \"nativeTokenSymbol\") : indexTokenItem.symbol;\n      const message = `Could not decrease ${tokenSymbol} ${isLong ? \"Long\" : \"Short\"} within the allowed slippage, you can adjust the allowed slippage in the settings on the top right of the page.`;\n      pushErrorNotification(chainId, message, e);\n      const key = getPositionKey(account, path[path.length - 1], indexToken, isLong);\n      pendingPositions[key] = {};\n      setPendingPositions({ ...pendingPositions\n      });\n    }\n\n  }));\n  const flagOrdersEnabled = true;\n  const [orders] = useAccountOrders(flagOrdersEnabled);\n  const [isWaitingForPluginApproval, setIsWaitingForPluginApproval] = useState(false);\n  const [isWaitingForPositionRouterApproval, setIsWaitingForPositionRouterApproval] = useState(false);\n  const [isPluginApproving, setIsPluginApproving] = useState(false);\n  const [isPositionRouterApproving, setIsPositionRouterApproving] = useState(false);\n\n  const approveOrderBook = () => {\n    setIsPluginApproving(true);\n    return approvePlugin(chainId, orderBookAddress, {\n      library,\n      pendingTxns,\n      setPendingTxns,\n      sentMsg: \"Enable orders sent.\",\n      failMsg: \"Enable orders failed.\"\n    }).then(() => {\n      setIsWaitingForPluginApproval(true);\n    }).finally(() => {\n      setIsPluginApproving(false);\n    });\n  };\n\n  const approvePositionRouter = _ref => {\n    let {\n      sentMsg,\n      failMsg\n    } = _ref;\n    setIsPositionRouterApproving(true);\n    return approvePlugin(chainId, positionRouterAddress, {\n      library,\n      pendingTxns,\n      setPendingTxns,\n      sentMsg,\n      failMsg\n    }).then(() => {\n      setIsWaitingForPositionRouterApproval(true);\n    }).finally(() => {\n      setIsPositionRouterApproving(false);\n    });\n  };\n\n  const [pageTracked, setPageTracked] = useState(false);\n  const [chartPeriod] = useLocalStorage(JSON.stringify([chainId, \"Chart-period\"]));\n  const [tableViewSelection] = useLocalStorage(\"List-section-v2\");\n  const [leverageOption] = useLocalStorage(JSON.stringify([chainId, \"Exchange-swap-leverage-option\"]));\n  const tableView = !!tableViewSelection && Object.keys(tableViewSelection).length > 0 ? tableViewSelection[chainId] : \"Positions\"; // localStorage item \"List-section-v2\" will return undefined if no selection has been made previously\n\n  const dataElements = [chartPeriod, tokenSelection, pageTracked, trackPageWithTraits, chainId, swapOption, tableView, leverageOption];\n  const elementsLoaded = dataElements.every(element => element !== undefined); // Segment Analytics Page tracking\n\n  useEffect(() => {\n    if (elementsLoaded && analytics && !pageTracked) {\n      // Get Chart token selection\n      const chartToken = getChartToken(swapOption, tokenSelection[swapOption].from, tokenSelection[swapOption].to, chainId);\n      const market = getToken(chainId, chartToken);\n      const marketFormatted = `${market.symbol}/USD`; // Get token to pay\n\n      const tokenToPay = getToken(chainId, tokenSelection[swapOption].from).symbol;\n      const tokenToReceive = getToken(chainId, tokenSelection[swapOption].to).symbol;\n      const leverage = {\n        leverage: parseInt(leverageOption)\n      };\n      const traits = {\n        graphTime: chartPeriod,\n        tableView: tableView,\n        market: marketFormatted,\n        marketPosition: swapOption,\n        tokenToPay: tokenToPay,\n        tokenToReceive: tokenToReceive,\n        ...leverage\n      };\n      trackPageWithTraits(traits);\n      setPageTracked(true); // Prevent Page function being called twice\n    }\n  }, [elementsLoaded, chartPeriod, tokenSelection, pageTracked, trackPageWithTraits, chainId, swapOption, tableView, leverageOption, analytics]);\n  const LIST_SECTIONS = [\"Positions\", flagOrdersEnabled ? \"Orders\" : undefined, \"Trades\"].filter(Boolean);\n  let [listSection, setListSection] = useLocalStorageByChainId(chainId, \"List-section-v2\", LIST_SECTIONS[0]);\n  const LIST_SECTIONS_LABELS = {\n    Orders: orders.length ? `Orders (${orders.length})` : undefined\n  };\n\n  if (!LIST_SECTIONS.includes(listSection)) {\n    listSection = LIST_SECTIONS[0];\n  }\n\n  const getListSection = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Exchange-list-tab-container\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          options: LIST_SECTIONS,\n          optionLabels: LIST_SECTIONS_LABELS,\n          option: listSection,\n          onChange: section => {\n            setListSection(section);\n            trackAction && trackAction(\"Button clicked\", {\n              buttonName: `Table view ${section}`\n            });\n          },\n          type: \"inline\",\n          className: \"Exchange-list-tabs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-right Exchange-should-show-position-lines\",\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            isChecked: savedShouldShowPositionLines,\n            setIsChecked: setSavedShouldShowPositionLines,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"muted\",\n              children: \"Chart positions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 9\n      }, this), listSection === \"Positions\" && /*#__PURE__*/_jsxDEV(PositionsList, {\n        positionsDataIsLoading: positionsDataIsLoading,\n        pendingPositions: pendingPositions,\n        setPendingPositions: setPendingPositions,\n        setListSection: setListSection,\n        setIsWaitingForPluginApproval: setIsWaitingForPluginApproval,\n        setIsWaitingForPositionRouterApproval: setIsWaitingForPositionRouterApproval,\n        approveOrderBook: approveOrderBook,\n        approvePositionRouter: approvePositionRouter,\n        isPluginApproving: isPluginApproving,\n        isPositionRouterApproving: isPositionRouterApproving,\n        isWaitingForPluginApproval: isWaitingForPluginApproval,\n        isWaitingForPositionRouterApproval: isWaitingForPositionRouterApproval,\n        orderBookApproved: orderBookApproved,\n        positionRouterApproved: positionRouterApproved,\n        positions: positions,\n        positionsMap: positionsMap,\n        infoTokens: infoTokens,\n        active: active,\n        account: account,\n        library: library,\n        pendingTxns: pendingTxns,\n        setPendingTxns: setPendingTxns,\n        flagOrdersEnabled: flagOrdersEnabled,\n        savedIsPnlInLeverage: savedIsPnlInLeverage,\n        chainId: chainId,\n        nativeTokenAddress: nativeTokenAddress,\n        setMarket: setMarket,\n        orders: orders,\n        showPnlAfterFees: savedShowPnlAfterFees,\n        trackAction: trackAction,\n        usdgSupply: usdgSupply,\n        totalTokenWeights: totalTokenWeights\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 11\n      }, this), listSection === \"Orders\" && /*#__PURE__*/_jsxDEV(OrdersList, {\n        account: account,\n        active: active,\n        library: library,\n        pendingTxns: pendingTxns,\n        setPendingTxns: setPendingTxns,\n        infoTokens: infoTokens,\n        positionsMap: positionsMap,\n        chainId: chainId,\n        orders: orders,\n        totalTokenWeights: totalTokenWeights,\n        usdgSupply: usdgSupply,\n        trackAction: trackAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 11\n      }, this), listSection === \"Trades\" && /*#__PURE__*/_jsxDEV(TradeHistory, {\n        account: account,\n        infoTokens: infoTokens,\n        getTokenInfo: getTokenInfo,\n        chainId: chainId,\n        nativeTokenAddress: nativeTokenAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 7\n    }, this);\n  };\n\n  const DEFAULT_CHART = \"lightweight\";\n  let [selectedChart, setSelectedChart] = useLocalStorageSerializeKey([chainId, \"Selected-chart\"], DEFAULT_CHART);\n  const [chartToken, setChartToken] = useState({\n    maxPrice: null,\n    minPrice: null\n  });\n  let [period, setPeriod] = useLocalStorageSerializeKey([chainId, \"Chart-period\"], DEFAULT_PERIOD);\n\n  if (!(period in CHART_PERIODS)) {\n    period = DEFAULT_PERIOD;\n  }\n\n  const currentAveragePrice = chartToken.maxPrice && chartToken.minPrice ? chartToken.maxPrice.add(chartToken.minPrice).div(2) : null;\n  const [priceData, updatePriceData] = useChartPrices(chainId, chartToken.symbol, chartToken.isStable, period, currentAveragePrice);\n  const fromToken = getTokenInfo(infoTokens, fromTokenAddress);\n  const toToken = getTokenInfo(infoTokens, toTokenAddress);\n  useEffect(() => {\n    const tmp = getChartToken(swapOption, fromToken, toToken, chainId);\n    setChartToken(tmp);\n  }, [swapOption, fromToken, toToken, chainId]);\n\n  if (!getToken(chainId, toTokenAddress)) {\n    return null;\n  }\n\n  const onSelectWalletToken = token => {\n    setFromTokenAddress(swapOption, token.address);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SEO, {\n      description: \"Trade with liquidity, leverage, low fees. Trade with Mycelium. Trade Perpetual Swaps and Perpetual Pools on Ethereum scaling solution, Arbitrum with liquid markets for BTC, ETH, LINK, UNI, CRV, FXS, & BAL.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TradingCompBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Exchange default-container ReferralsBannerActive\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Exchange-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ExchangeChart tv\",\n            children: [/*#__PURE__*/_jsxDEV(ExchangeHeader, {\n              priceData: priceData,\n              currentAveragePrice: currentAveragePrice,\n              setChartToken: setChartToken,\n              setToTokenAddress: setToTokenAddress,\n              swapOption: swapOption,\n              chainId: chainId,\n              chartToken: chartToken,\n              trackAction: trackAction,\n              period: period,\n              setPeriod: setPeriod,\n              infoTokens: infoTokens,\n              selectedChart: selectedChart,\n              setSelectedChart: setSelectedChart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ExchangeChart-border\",\n              children: selectedChart === \"lightweight\" ? /*#__PURE__*/_jsxDEV(ExchangeTVChart, {\n                fromTokenAddress: fromTokenAddress,\n                toTokenAddress: toTokenAddress,\n                infoTokens: infoTokens,\n                swapOption: swapOption,\n                chainId: chainId,\n                positions: positions,\n                savedShouldShowPositionLines: savedShouldShowPositionLines,\n                orders: orders,\n                setToTokenAddress: setToTokenAddress,\n                sidebarVisible: sidebarVisible,\n                trackAction: trackAction,\n                chartToken: chartToken,\n                setChartToken: setChartToken,\n                currentAveragePrice: currentAveragePrice,\n                period: period,\n                setPeriod: setPeriod,\n                priceData: priceData,\n                updatePriceData: updatePriceData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 938,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(ExchangeAdvancedTVChart, {\n                infoTokens: infoTokens,\n                chartToken: chartToken,\n                setChartToken: setChartToken,\n                priceData: priceData,\n                period: period,\n                setPeriod: setPeriod,\n                setToTokenAddress: setToTokenAddress,\n                swapOption: swapOption,\n                chainId: chainId,\n                currentAveragePrice: currentAveragePrice,\n                trackAction: trackAction\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-lists large\",\n            children: getListSection()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-right\",\n          children: [/*#__PURE__*/_jsxDEV(SwapBox, {\n            pendingPositions: pendingPositions,\n            setPendingPositions: setPendingPositions,\n            setIsWaitingForPluginApproval: setIsWaitingForPluginApproval,\n            setIsWaitingForPositionRouterApproval: setIsWaitingForPositionRouterApproval,\n            approveOrderBook: approveOrderBook,\n            approvePositionRouter: approvePositionRouter,\n            isPluginApproving: isPluginApproving,\n            isPositionRouterApproving: isPositionRouterApproving,\n            isWaitingForPluginApproval: isWaitingForPluginApproval,\n            isWaitingForPositionRouterApproval: isWaitingForPositionRouterApproval,\n            orderBookApproved: orderBookApproved,\n            positionRouterApproved: positionRouterApproved,\n            orders: orders,\n            flagOrdersEnabled: flagOrdersEnabled,\n            chainId: chainId,\n            infoTokens: infoTokens,\n            active: active,\n            connectWallet: connectWallet,\n            library: library,\n            account: account,\n            positionsMap: positionsMap,\n            fromTokenAddress: fromTokenAddress,\n            setFromTokenAddress: setFromTokenAddress,\n            toTokenAddress: toTokenAddress,\n            setToTokenAddress: setToTokenAddress,\n            swapOption: swapOption,\n            setSwapOption: setSwapOption,\n            pendingTxns: pendingTxns,\n            setPendingTxns: setPendingTxns,\n            tokenSelection: tokenSelection,\n            setTokenSelection: setTokenSelection,\n            isConfirming: isConfirming,\n            setIsConfirming: setIsConfirming,\n            isPendingConfirmation: isPendingConfirmation,\n            setIsPendingConfirmation: setIsPendingConfirmation,\n            savedIsPnlInLeverage: savedIsPnlInLeverage,\n            setSavedIsPnlInLeverage: setSavedIsPnlInLeverage,\n            nativeTokenAddress: nativeTokenAddress,\n            savedSlippageAmount: savedSlippageAmount,\n            totalTokenWeights: totalTokenWeights,\n            usdgSupply: usdgSupply,\n            trackAction: trackAction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Exchange-wallet-tokens\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Exchange-wallet-tokens-content\",\n              children: /*#__PURE__*/_jsxDEV(ExchangeWalletTokens, {\n                tokens: tokens,\n                infoTokens: infoTokens,\n                onSelectToken: onSelectWalletToken\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1024,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1023,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exchange-lists small\",\n          children: getListSection()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"m7cLbAwYswID1ysqpvruNr5Qwyg=\", false, function () {\n  return [useWeb3React, useChainId, useLocalStorageByChainId, useLocalStorageByChainId, useSWR, useSWR, useSWR, useSWR, useSWR, useImperativeHandle, useAccountOrders, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorageByChainId, useLocalStorageSerializeKey, useLocalStorageSerializeKey, useChartPrices];\n}));\n_c2 = Exchange;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Exchange$forwardRef\");\n$RefreshReg$(_c2, \"Exchange\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useCallback","forwardRef","useImperativeHandle","useWeb3React","useSWR","ethers","useLocalStorage","FUNDING_RATE_PRECISION","BASIS_POINTS_DIVISOR","MARGIN_FEE_BASIS_POINTS","SWAP","LONG","SHORT","USD_DECIMALS","CHART_PERIODS","getExplorerUrl","helperToast","formatAmount","bigNumberify","getTokenInfo","fetcher","getPositionKey","getPositionContractKey","getLeverage","useLocalStorageByChainId","getDeltaStr","getDeltaAfterFees","useChainId","useAccountOrders","getPageTitle","useLocalStorageSerializeKey","getConstant","approvePlugin","useChartPrices","getContract","getTokens","getToken","getWhitelistedTokens","getTokenBySymbol","Reader","VaultV2","Router","Token","Checkbox","SwapBox","ExchangeTVChart","getChartToken","ExchangeAdvancedTVChart","PositionsList","OrdersList","TradeHistory","ExchangeWalletTokens","Tab","SEO","ExchangeHeader","TradingCompBanner","AddressZero","constants","PENDING_POSITION_VALID_DURATION","UPDATED_POSITION_VALID_DURATION","DEFAULT_PERIOD","notifications","pushSuccessNotification","chainId","message","e","transactionHash","id","utils","txUrl","success","pushErrorNotification","error","getFundingFee","data","entryFundingRate","cumulativeFundingRate","size","mul","sub","div","getTokenAddress","token","nativeTokenAddress","address","applyPendingChanges","position","pendingPositions","key","updatedAt","pendingChanges","Date","now","eq","expectingCollateralChange","collateral","collateralSnapshot","hasPendingChanges","getPositions","positionQuery","positionData","infoTokens","includeDelta","showPnlAfterFees","account","updatedPositions","propsLength","positions","positionsMap","collateralTokens","indexTokens","isLong","i","length","collateralToken","indexToken","contractKey","averagePrice","hasRealisedProfit","realisedPnl","lastIncreasedTime","toNumber","hasProfit","delta","markPrice","minPrice","maxPrice","updatedPosition","fundingFee","collateralAfterFee","closingFee","positionFee","totalFees","add","pendingDelta","gt","hasLowCollateral","lt","abs","priceDelta","gte","lte","deltaPercentage","deltaStr","deltaPercentageStr","deltaBeforeFeesStr","pendingDeltaAfterFees","deltaPercentageAfterFees","hasProfitAfterFees","deltaAfterFeesStr","deltaAfterFeesPercentageStr","netValue","leverage","push","getPositionQuery","tokens","isStable","isWrapped","stableToken","j","Exchange","props","ref","savedIsPnlInLeverage","setSavedIsPnlInLeverage","savedShowPnlAfterFees","savedSlippageAmount","pendingTxns","setPendingTxns","savedShouldShowPositionLines","setSavedShouldShowPositionLines","connectWallet","trackPageWithTraits","trackAction","sidebarVisible","analytics","setPendingPositions","setUpdatedPositions","window","scrollTo","active","library","currentAccount","vaultAddress","positionRouterAddress","readerAddress","usdgAddress","whitelistedTokens","defaultCollateralSymbol","defaultTokenSelection","from","to","tokenSelection","setTokenSelection","swapOption","setSwapOption","fromTokenAddress","toTokenAddress","setFromTokenAddress","selectedSwapOption","newTokenSelection","JSON","parse","stringify","setToTokenAddress","setMarket","isConfirming","setIsConfirming","isPendingConfirmation","setIsPendingConfirmation","positionDataError","positionsDataIsLoading","totalTokenWeights","usdgSupply","orderBookAddress","routerAddress","orderBookApproved","positionRouterApproved","fromToken","toToken","selectedToken","currentTokenPriceStr","title","symbol","document","onUpdatePosition","reserveAmount","onClosePosition","onIncreasePosition","collateralDelta","sizeDelta","price","fee","indexTokenItem","tokenSymbol","onDecreasePosition","onCancelIncreasePosition","path","amountIn","minOut","acceptablePrice","executionFee","blockGap","timeGap","onCancelDecreasePosition","receiver","flagOrdersEnabled","orders","isWaitingForPluginApproval","setIsWaitingForPluginApproval","isWaitingForPositionRouterApproval","setIsWaitingForPositionRouterApproval","isPluginApproving","setIsPluginApproving","isPositionRouterApproving","setIsPositionRouterApproving","approveOrderBook","sentMsg","failMsg","then","finally","approvePositionRouter","pageTracked","setPageTracked","chartPeriod","tableViewSelection","leverageOption","tableView","Object","keys","dataElements","elementsLoaded","every","element","undefined","chartToken","market","marketFormatted","tokenToPay","tokenToReceive","parseInt","traits","graphTime","marketPosition","LIST_SECTIONS","filter","Boolean","listSection","setListSection","LIST_SECTIONS_LABELS","Orders","includes","getListSection","section","buttonName","DEFAULT_CHART","selectedChart","setSelectedChart","setChartToken","period","setPeriod","currentAveragePrice","priceData","updatePriceData","tmp","onSelectWalletToken"],"sources":["C:/Users/rober/Documents/copiaswaps-client/swaps-client/src/views/Exchange/Exchange.js"],"sourcesContent":["import React, { useEffect, useState, useMemo, useCallback, forwardRef, useImperativeHandle } from \"react\";\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport useSWR from \"swr\";\nimport { ethers } from \"ethers\";\nimport { useLocalStorage } from \"react-use\";\n\nimport {\n  FUNDING_RATE_PRECISION,\n  BASIS_POINTS_DIVISOR,\n  MARGIN_FEE_BASIS_POINTS,\n  SWAP,\n  LONG,\n  SHORT,\n  USD_DECIMALS,\n  CHART_PERIODS,\n  getExplorerUrl,\n  helperToast,\n  formatAmount,\n  bigNumberify,\n  getTokenInfo,\n  fetcher,\n  getPositionKey,\n  getPositionContractKey,\n  getLeverage,\n  useLocalStorageByChainId,\n  getDeltaStr,\n  getDeltaAfterFees,\n  useChainId,\n  useAccountOrders,\n  getPageTitle,\n  useLocalStorageSerializeKey,\n} from \"../../Helpers\";\nimport { getConstant } from \"../../Constants\";\nimport { approvePlugin } from \"../../Api\";\nimport { useChartPrices } from \"../../Api\";\n\nimport { getContract } from \"../../Addresses\";\nimport { getTokens, getToken, getWhitelistedTokens, getTokenBySymbol } from \"../../data/Tokens\";\n\nimport Reader from \"../../abis/ReaderV2.json\";\nimport VaultV2 from \"../../abis/VaultV2.json\";\nimport Router from \"../../abis/Router.json\";\nimport Token from \"../../abis/Token.json\";\n\nimport Checkbox from \"../../components/Checkbox/Checkbox\";\nimport SwapBox from \"../../components/Exchange/SwapBox\";\nimport ExchangeTVChart, { getChartToken } from \"../../components/Exchange/ExchangeTVChart\";\nimport ExchangeAdvancedTVChart from \"../../components/Exchange/ExchangeAdvancedTVChart\";\nimport PositionsList from \"../../components/Exchange/PositionsList\";\nimport OrdersList from \"../../components/Exchange/OrdersList\";\nimport TradeHistory from \"../../components/Exchange/TradeHistory\";\nimport ExchangeWalletTokens from \"../../components/Exchange/ExchangeWalletTokens\";\nimport Tab from \"../../components/Tab/Tab\";\n\nimport \"./Exchange.css\";\nimport SEO from \"../../components/Common/SEO\";\nimport { ExchangeHeader } from \"../../components/Exchange/ExchangeHeader\";\nimport TradingCompBanner from \"../../components/Exchange/TradingCompBanner\";\nconst { AddressZero } = ethers.constants;\n\nconst PENDING_POSITION_VALID_DURATION = 600 * 1000;\nconst UPDATED_POSITION_VALID_DURATION = 60 * 1000;\n\nconst DEFAULT_PERIOD = \"4h\";\n\nconst notifications = {};\n\nfunction pushSuccessNotification(chainId, message, e) {\n  const { transactionHash } = e;\n  const id = ethers.utils.id(message + transactionHash);\n  if (notifications[id]) {\n    return;\n  }\n\n  notifications[id] = true;\n\n  const txUrl = getExplorerUrl(chainId) + \"tx/\" + transactionHash;\n  helperToast.success(\n    <div>\n      {message}{\" \"}\n      <a href={txUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        View\n      </a>\n    </div>\n  );\n}\n\nfunction pushErrorNotification(chainId, message, e) {\n  const { transactionHash } = e;\n  const id = ethers.utils.id(message + transactionHash);\n  if (notifications[id]) {\n    return;\n  }\n\n  notifications[id] = true;\n\n  const txUrl = getExplorerUrl(chainId) + \"tx/\" + transactionHash;\n  helperToast.error(\n    <div>\n      {message}{\" \"}\n      <a href={txUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        View\n      </a>\n    </div>\n  );\n}\n\nfunction getFundingFee(data) {\n  let { entryFundingRate, cumulativeFundingRate, size } = data;\n  if (entryFundingRate && cumulativeFundingRate) {\n    return size.mul(cumulativeFundingRate.sub(entryFundingRate)).div(FUNDING_RATE_PRECISION);\n  }\n  return;\n}\n\nconst getTokenAddress = (token, nativeTokenAddress) => {\n  if (token.address === AddressZero) {\n    return nativeTokenAddress;\n  }\n  return token.address;\n};\n\nfunction applyPendingChanges(position, pendingPositions) {\n  if (!pendingPositions) {\n    return;\n  }\n  const { key } = position;\n\n  if (\n    pendingPositions[key] &&\n    pendingPositions[key].updatedAt &&\n    pendingPositions[key].pendingChanges &&\n    pendingPositions[key].updatedAt + PENDING_POSITION_VALID_DURATION > Date.now()\n  ) {\n    const { pendingChanges } = pendingPositions[key];\n    if (pendingChanges.size && position.size.eq(pendingChanges.size)) {\n      return;\n    }\n\n    if (pendingChanges.expectingCollateralChange && !position.collateral.eq(pendingChanges.collateralSnapshot)) {\n      return;\n    }\n\n    position.hasPendingChanges = true;\n    position.pendingChanges = pendingChanges;\n  }\n}\n\nexport function getPositions(\n  chainId,\n  positionQuery,\n  positionData,\n  infoTokens,\n  includeDelta,\n  showPnlAfterFees,\n  account,\n  pendingPositions,\n  updatedPositions\n) {\n  const propsLength = getConstant(chainId, \"positionReaderPropsLength\");\n  const positions = [];\n  const positionsMap = {};\n  if (!positionData) {\n    return { positions, positionsMap };\n  }\n  const { collateralTokens, indexTokens, isLong } = positionQuery;\n  for (let i = 0; i < collateralTokens.length; i++) {\n    const collateralToken = getTokenInfo(infoTokens, collateralTokens[i], true, getContract(chainId, \"NATIVE_TOKEN\"));\n    const indexToken = getTokenInfo(infoTokens, indexTokens[i], true, getContract(chainId, \"NATIVE_TOKEN\"));\n    const key = getPositionKey(account, collateralTokens[i], indexTokens[i], isLong[i]);\n    let contractKey;\n    if (account) {\n      contractKey = getPositionContractKey(account, collateralTokens[i], indexTokens[i], isLong[i]);\n    }\n\n    const position = {\n      key,\n      contractKey,\n      collateralToken,\n      indexToken,\n      isLong: isLong[i],\n      size: positionData[i * propsLength],\n      collateral: positionData[i * propsLength + 1],\n      averagePrice: positionData[i * propsLength + 2],\n      entryFundingRate: positionData[i * propsLength + 3],\n      cumulativeFundingRate: collateralToken.cumulativeFundingRate,\n      hasRealisedProfit: positionData[i * propsLength + 4].eq(1),\n      realisedPnl: positionData[i * propsLength + 5],\n      lastIncreasedTime: positionData[i * propsLength + 6].toNumber(),\n      hasProfit: positionData[i * propsLength + 7].eq(1),\n      delta: positionData[i * propsLength + 8],\n      markPrice: isLong[i] ? indexToken.minPrice : indexToken.maxPrice,\n    };\n\n    if (\n      updatedPositions &&\n      updatedPositions[key] &&\n      updatedPositions[key].updatedAt &&\n      updatedPositions[key].updatedAt + UPDATED_POSITION_VALID_DURATION > Date.now()\n    ) {\n      const updatedPosition = updatedPositions[key];\n      position.size = updatedPosition.size;\n      position.collateral = updatedPosition.collateral;\n      position.averagePrice = updatedPosition.averagePrice;\n      position.entryFundingRate = updatedPosition.entryFundingRate;\n    }\n\n    let fundingFee = getFundingFee(position);\n    position.fundingFee = fundingFee ? fundingFee : bigNumberify(0);\n    position.collateralAfterFee = position.collateral.sub(position.fundingFee);\n\n    position.closingFee = position.size.mul(MARGIN_FEE_BASIS_POINTS).div(BASIS_POINTS_DIVISOR);\n    position.positionFee = position.size.mul(MARGIN_FEE_BASIS_POINTS).mul(2).div(BASIS_POINTS_DIVISOR);\n    position.totalFees = position.positionFee.add(position.fundingFee);\n\n    position.pendingDelta = position.delta;\n\n    if (position.collateral.gt(0)) {\n      position.hasLowCollateral =\n        position.collateralAfterFee.lt(0) || position.size.div(position.collateralAfterFee.abs()).gt(50);\n\n      if (position.averagePrice && position.markPrice) {\n        const priceDelta = position.averagePrice.gt(position.markPrice)\n          ? position.averagePrice.sub(position.markPrice)\n          : position.markPrice.sub(position.averagePrice);\n        position.pendingDelta = position.size.mul(priceDelta).div(position.averagePrice);\n\n        position.delta = position.pendingDelta;\n\n        if (position.isLong) {\n          position.hasProfit = position.markPrice.gte(position.averagePrice);\n        } else {\n          position.hasProfit = position.markPrice.lte(position.averagePrice);\n        }\n      }\n\n      position.deltaPercentage = position.pendingDelta.mul(BASIS_POINTS_DIVISOR).div(position.collateral);\n\n      const { deltaStr, deltaPercentageStr } = getDeltaStr({\n        delta: position.pendingDelta,\n        deltaPercentage: position.deltaPercentage,\n        hasProfit: position.hasProfit,\n      });\n\n      position.deltaStr = deltaStr;\n      position.deltaPercentageStr = deltaPercentageStr;\n      position.deltaBeforeFeesStr = deltaStr;\n\n      const { pendingDeltaAfterFees, deltaPercentageAfterFees, hasProfitAfterFees } = getDeltaAfterFees({\n        delta: position.pendingDelta,\n        totalFees: position.totalFees,\n        hasProfit: position.hasProfit,\n        collateral: position.collateral\n      })\n\n      position.hasProfitAfterFees = hasProfitAfterFees;\n      position.pendingDeltaAfterFees = pendingDeltaAfterFees;\n      position.deltaPercentageAfterFees = deltaPercentageAfterFees;\n\n      const { deltaStr: deltaAfterFeesStr, deltaPercentageStr: deltaAfterFeesPercentageStr } = getDeltaStr({\n        delta: position.pendingDeltaAfterFees,\n        deltaPercentage: position.deltaPercentageAfterFees,\n        hasProfit: hasProfitAfterFees,\n      });\n\n      position.deltaAfterFeesStr = deltaAfterFeesStr;\n      position.deltaAfterFeesPercentageStr = deltaAfterFeesPercentageStr;\n\n      if (showPnlAfterFees) {\n        position.deltaStr = position.deltaAfterFeesStr;\n        position.deltaPercentageStr = position.deltaAfterFeesPercentageStr;\n      }\n\n      let netValue = position.hasProfit\n        ? position.collateral.add(position.pendingDelta)\n        : position.collateral.sub(position.pendingDelta);\n\n      netValue = netValue.sub(position.fundingFee);\n\n      if (showPnlAfterFees) {\n        netValue = netValue.sub(position.closingFee);\n      }\n\n      position.netValue = netValue;\n    }\n\n    position.leverage = getLeverage({\n      size: position.size,\n      collateral: position.collateral,\n      entryFundingRate: position.entryFundingRate,\n      cumulativeFundingRate: position.cumulativeFundingRate,\n      hasProfit: position.hasProfit,\n      delta: position.delta,\n      includeDelta,\n    });\n\n    positionsMap[key] = position;\n\n    applyPendingChanges(position, pendingPositions);\n\n    if (position.size.gt(0) || position.hasPendingChanges) {\n      positions.push(position);\n    }\n  }\n\n  return { positions, positionsMap };\n}\n\nexport function getPositionQuery(tokens, nativeTokenAddress) {\n  const collateralTokens = [];\n  const indexTokens = [];\n  const isLong = [];\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isStable) {\n      continue;\n    }\n    if (token.isWrapped) {\n      continue;\n    }\n    collateralTokens.push(getTokenAddress(token, nativeTokenAddress));\n    indexTokens.push(getTokenAddress(token, nativeTokenAddress));\n    isLong.push(true);\n  }\n\n  for (let i = 0; i < tokens.length; i++) {\n    const stableToken = tokens[i];\n    if (!stableToken.isStable) {\n      continue;\n    }\n\n    for (let j = 0; j < tokens.length; j++) {\n      const token = tokens[j];\n      if (token.isStable) {\n        continue;\n      }\n      if (token.isWrapped) {\n        continue;\n      }\n      collateralTokens.push(stableToken.address);\n      indexTokens.push(getTokenAddress(token, nativeTokenAddress));\n      isLong.push(false);\n    }\n  }\n\n  return { collateralTokens, indexTokens, isLong };\n}\n\nexport const Exchange = forwardRef((props, ref) => {\n  const {\n    savedIsPnlInLeverage,\n    setSavedIsPnlInLeverage,\n    savedShowPnlAfterFees,\n    savedSlippageAmount,\n    pendingTxns,\n    setPendingTxns,\n    savedShouldShowPositionLines,\n    setSavedShouldShowPositionLines,\n    connectWallet,\n    infoTokens,\n    trackPageWithTraits,\n    trackAction,\n    sidebarVisible,\n    analytics,\n  } = props;\n\n  const [pendingPositions, setPendingPositions] = useState({});\n  const [updatedPositions, setUpdatedPositions] = useState({});\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const { active, account, library } = useWeb3React();\n  const { chainId } = useChainId();\n  const currentAccount = account;\n\n  const nativeTokenAddress = getContract(chainId, \"NATIVE_TOKEN\");\n\n  const vaultAddress = getContract(chainId, \"Vault\");\n  const positionRouterAddress = getContract(chainId, \"PositionRouter\");\n  const readerAddress = getContract(chainId, \"Reader\");\n  const usdgAddress = getContract(chainId, \"USDG\");\n\n  const whitelistedTokens = getWhitelistedTokens(chainId);\n\n  const positionQuery = getPositionQuery(whitelistedTokens, nativeTokenAddress);\n\n  const defaultCollateralSymbol = getConstant(chainId, \"defaultCollateralSymbol\");\n  const defaultTokenSelection = useMemo(\n    () => ({\n      [SWAP]: {\n        from: AddressZero,\n        to: getTokenBySymbol(chainId, defaultCollateralSymbol).address,\n      },\n      [LONG]: {\n        from: AddressZero,\n        to: AddressZero,\n      },\n      [SHORT]: {\n        from: getTokenBySymbol(chainId, defaultCollateralSymbol).address,\n        to: AddressZero,\n      },\n    }),\n    [chainId, defaultCollateralSymbol]\n  );\n\n  const [tokenSelection, setTokenSelection] = useLocalStorageByChainId(\n    chainId,\n    \"Exchange-token-selection-v2\",\n    defaultTokenSelection\n  );\n  const [swapOption, setSwapOption] = useLocalStorageByChainId(chainId, \"Swap-option-v2\", LONG);\n\n  const fromTokenAddress = tokenSelection[swapOption].from;\n  const toTokenAddress = tokenSelection[swapOption].to;\n\n  const setFromTokenAddress = useCallback(\n    (selectedSwapOption, address) => {\n      const newTokenSelection = JSON.parse(JSON.stringify(tokenSelection));\n      newTokenSelection[selectedSwapOption].from = address;\n      setTokenSelection(newTokenSelection);\n    },\n    [tokenSelection, setTokenSelection]\n  );\n\n  const setToTokenAddress = useCallback(\n    (selectedSwapOption, address) => {\n      const newTokenSelection = JSON.parse(JSON.stringify(tokenSelection));\n      newTokenSelection[selectedSwapOption].to = address;\n      if (selectedSwapOption === LONG || selectedSwapOption === SHORT) {\n        newTokenSelection[LONG].to = address;\n        newTokenSelection[SHORT].to = address;\n      }\n      setTokenSelection(newTokenSelection);\n    },\n    [tokenSelection, setTokenSelection]\n  );\n\n  const setMarket = (selectedSwapOption, toTokenAddress) => {\n    setSwapOption(selectedSwapOption);\n    const newTokenSelection = JSON.parse(JSON.stringify(tokenSelection));\n    newTokenSelection[selectedSwapOption].to = toTokenAddress;\n    if (selectedSwapOption === LONG || selectedSwapOption === SHORT) {\n      newTokenSelection[LONG].to = toTokenAddress;\n      newTokenSelection[SHORT].to = toTokenAddress;\n    }\n    setTokenSelection(newTokenSelection);\n  };\n\n  const [isConfirming, setIsConfirming] = useState(false);\n  const [isPendingConfirmation, setIsPendingConfirmation] = useState(false);\n\n  const tokens = getTokens(chainId);\n\n  const { data: positionData, error: positionDataError } = useSWR(\n    active && [active, chainId, readerAddress, \"getPositions\", vaultAddress, account],\n    {\n      fetcher: fetcher(library, Reader, [\n        positionQuery.collateralTokens,\n        positionQuery.indexTokens,\n        positionQuery.isLong,\n      ]),\n    }\n  );\n\n  const positionsDataIsLoading = active && !positionData && !positionDataError;\n\n  const { data: totalTokenWeights } = useSWR(\n    [`Exchange:totalTokenWeights:${active}`, chainId, vaultAddress, \"totalTokenWeights\"],\n    {\n      fetcher: fetcher(library, VaultV2),\n    }\n  );\n\n  const { data: usdgSupply } = useSWR([`Exchange:usdgSupply:${active}`, chainId, usdgAddress, \"totalSupply\"], {\n    fetcher: fetcher(library, Token),\n  });\n\n  const orderBookAddress = getContract(chainId, \"OrderBook\");\n  const routerAddress = getContract(chainId, \"Router\");\n  const { data: orderBookApproved } = useSWR(\n    active && [active, chainId, routerAddress, \"approvedPlugins\", account, orderBookAddress],\n    {\n      fetcher: fetcher(library, Router),\n    }\n  );\n\n  const { data: positionRouterApproved } = useSWR(\n    active && [active, chainId, routerAddress, \"approvedPlugins\", account, positionRouterAddress],\n    {\n      fetcher: fetcher(library, Router),\n    }\n  );\n\n  useEffect(() => {\n    const fromToken = getTokenInfo(infoTokens, fromTokenAddress);\n    const toToken = getTokenInfo(infoTokens, toTokenAddress);\n    let selectedToken = getChartToken(swapOption, fromToken, toToken, chainId);\n    let currentTokenPriceStr = formatAmount(selectedToken.maxPrice, USD_DECIMALS, 2, true);\n    let title = getPageTitle(currentTokenPriceStr + ` | ${selectedToken.symbol}${selectedToken.isStable ? \"\" : \"USD\"}`);\n    document.title = title;\n  }, [tokenSelection, swapOption, infoTokens, chainId, fromTokenAddress, toTokenAddress]);\n\n  const { positions, positionsMap } = getPositions(\n    chainId,\n    positionQuery,\n    positionData,\n    infoTokens,\n    savedIsPnlInLeverage,\n    savedShowPnlAfterFees,\n    account,\n    pendingPositions,\n    updatedPositions\n  );\n\n  useImperativeHandle(ref, () => ({\n    onUpdatePosition(key, size, collateral, averagePrice, entryFundingRate, reserveAmount, realisedPnl) {\n      for (let i = 0; i < positions.length; i++) {\n        const position = positions[i];\n        if (position.contractKey === key) {\n          updatedPositions[position.key] = {\n            size,\n            collateral,\n            averagePrice,\n            entryFundingRate,\n            reserveAmount,\n            realisedPnl,\n            updatedAt: Date.now(),\n          };\n          setUpdatedPositions({ ...updatedPositions });\n          break;\n        }\n      }\n    },\n    onClosePosition(key, size, collateral, averagePrice, entryFundingRate, reserveAmount, realisedPnl, e) {\n      for (let i = 0; i < positions.length; i++) {\n        const position = positions[i];\n        if (position.contractKey === key) {\n          updatedPositions[position.key] = {\n            size: bigNumberify(0),\n            collateral: bigNumberify(0),\n            averagePrice,\n            entryFundingRate,\n            reserveAmount,\n            realisedPnl,\n            updatedAt: Date.now(),\n          };\n          setUpdatedPositions({ ...updatedPositions });\n          break;\n        }\n      }\n    },\n\n    onIncreasePosition(key, account, collateralToken, indexToken, collateralDelta, sizeDelta, isLong, price, fee, e) {\n      if (account !== currentAccount) {\n        return;\n      }\n\n      const indexTokenItem = getToken(chainId, indexToken);\n      const tokenSymbol = indexTokenItem.isWrapped ? getConstant(chainId, \"nativeTokenSymbol\") : indexTokenItem.symbol;\n\n      let message;\n      if (sizeDelta.eq(0)) {\n        message = `Deposited ${formatAmount(collateralDelta, USD_DECIMALS, 2, true)} USD into ${tokenSymbol} ${\n          isLong ? \"Long\" : \"Short.\"\n        }`;\n      } else {\n        message = `Increased ${tokenSymbol} ${isLong ? \"Long\" : \"Short\"}, +${formatAmount(\n          sizeDelta,\n          USD_DECIMALS,\n          2,\n          true\n        )} USD.`;\n      }\n\n      pushSuccessNotification(chainId, message, e);\n    },\n\n    onDecreasePosition(key, account, collateralToken, indexToken, collateralDelta, sizeDelta, isLong, price, fee, e) {\n      if (account !== currentAccount) {\n        return;\n      }\n\n      const indexTokenItem = getToken(chainId, indexToken);\n      const tokenSymbol = indexTokenItem.isWrapped ? getConstant(chainId, \"nativeTokenSymbol\") : indexTokenItem.symbol;\n\n      let message;\n      if (sizeDelta.eq(0)) {\n        message = `Withdrew ${formatAmount(collateralDelta, USD_DECIMALS, 2, true)} USD from ${tokenSymbol} ${\n          isLong ? \"Long\" : \"Short\"\n        }.`;\n      } else {\n        message = `Decreased ${tokenSymbol} ${isLong ? \"Long\" : \"Short\"}, -${formatAmount(\n          sizeDelta,\n          USD_DECIMALS,\n          2,\n          true\n        )} USD.`;\n      }\n\n      pushSuccessNotification(chainId, message, e);\n    },\n\n    onCancelIncreasePosition(\n      account,\n      path,\n      indexToken,\n      amountIn,\n      minOut,\n      sizeDelta,\n      isLong,\n      acceptablePrice,\n      executionFee,\n      blockGap,\n      timeGap,\n      e\n    ) {\n      if (account !== currentAccount) {\n        return;\n      }\n      const indexTokenItem = getToken(chainId, indexToken);\n      const tokenSymbol = indexTokenItem.isWrapped ? getConstant(chainId, \"nativeTokenSymbol\") : indexTokenItem.symbol;\n\n      const message = `Could not increase ${tokenSymbol} ${\n        isLong ? \"Long\" : \"Short\"\n      } within the allowed slippage, you can adjust the allowed slippage in the settings on the top right of the page.`;\n\n      pushErrorNotification(chainId, message, e);\n\n      const key = getPositionKey(account, path[path.length - 1], indexToken, isLong);\n      pendingPositions[key] = {};\n      setPendingPositions({ ...pendingPositions });\n    },\n\n    onCancelDecreasePosition(\n      account,\n      path,\n      indexToken,\n      collateralDelta,\n      sizeDelta,\n      isLong,\n      receiver,\n      acceptablePrice,\n      minOut,\n      executionFee,\n      blockGap,\n      timeGap,\n      e\n    ) {\n      if (account !== currentAccount) {\n        return;\n      }\n      const indexTokenItem = getToken(chainId, indexToken);\n      const tokenSymbol = indexTokenItem.isWrapped ? getConstant(chainId, \"nativeTokenSymbol\") : indexTokenItem.symbol;\n\n      const message = `Could not decrease ${tokenSymbol} ${\n        isLong ? \"Long\" : \"Short\"\n      } within the allowed slippage, you can adjust the allowed slippage in the settings on the top right of the page.`;\n\n      pushErrorNotification(chainId, message, e);\n\n      const key = getPositionKey(account, path[path.length - 1], indexToken, isLong);\n      pendingPositions[key] = {};\n      setPendingPositions({ ...pendingPositions });\n    },\n  }));\n\n  const flagOrdersEnabled = true;\n  const [orders] = useAccountOrders(flagOrdersEnabled);\n\n  const [isWaitingForPluginApproval, setIsWaitingForPluginApproval] = useState(false);\n  const [isWaitingForPositionRouterApproval, setIsWaitingForPositionRouterApproval] = useState(false);\n  const [isPluginApproving, setIsPluginApproving] = useState(false);\n  const [isPositionRouterApproving, setIsPositionRouterApproving] = useState(false);\n\n  const approveOrderBook = () => {\n    setIsPluginApproving(true);\n    return approvePlugin(chainId, orderBookAddress, {\n      library,\n      pendingTxns,\n      setPendingTxns,\n      sentMsg: \"Enable orders sent.\",\n      failMsg: \"Enable orders failed.\",\n    })\n      .then(() => {\n        setIsWaitingForPluginApproval(true);\n      })\n      .finally(() => {\n        setIsPluginApproving(false);\n      });\n  };\n\n  const approvePositionRouter = ({ sentMsg, failMsg }) => {\n    setIsPositionRouterApproving(true);\n    return approvePlugin(chainId, positionRouterAddress, {\n      library,\n      pendingTxns,\n      setPendingTxns,\n      sentMsg,\n      failMsg,\n    })\n      .then(() => {\n        setIsWaitingForPositionRouterApproval(true);\n      })\n      .finally(() => {\n        setIsPositionRouterApproving(false);\n      });\n  };\n\n  const [pageTracked, setPageTracked] = useState(false);\n\n  const [chartPeriod] = useLocalStorage(JSON.stringify([chainId, \"Chart-period\"]));\n  const [tableViewSelection] = useLocalStorage(\"List-section-v2\");\n  const [leverageOption] = useLocalStorage(JSON.stringify([chainId, \"Exchange-swap-leverage-option\"]));\n  const tableView =\n    !!tableViewSelection && Object.keys(tableViewSelection).length > 0 ? tableViewSelection[chainId] : \"Positions\"; // localStorage item \"List-section-v2\" will return undefined if no selection has been made previously\n  const dataElements = [\n    chartPeriod,\n    tokenSelection,\n    pageTracked,\n    trackPageWithTraits,\n    chainId,\n    swapOption,\n    tableView,\n    leverageOption,\n  ];\n\n  const elementsLoaded = dataElements.every((element) => element !== undefined);\n\n  // Segment Analytics Page tracking\n  useEffect(() => {\n    if (elementsLoaded && analytics && !pageTracked) {\n      // Get Chart token selection\n      const chartToken = getChartToken(\n        swapOption,\n        tokenSelection[swapOption].from,\n        tokenSelection[swapOption].to,\n        chainId\n      );\n      const market = getToken(chainId, chartToken);\n      const marketFormatted = `${market.symbol}/USD`;\n      // Get token to pay\n      const tokenToPay = getToken(chainId, tokenSelection[swapOption].from).symbol;\n      const tokenToReceive = getToken(chainId, tokenSelection[swapOption].to).symbol;\n      const leverage = { leverage: parseInt(leverageOption) };\n\n      const traits = {\n        graphTime: chartPeriod,\n        tableView: tableView,\n        market: marketFormatted,\n        marketPosition: swapOption,\n        tokenToPay: tokenToPay,\n        tokenToReceive: tokenToReceive,\n        ...leverage,\n      };\n      trackPageWithTraits(traits);\n      setPageTracked(true); // Prevent Page function being called twice\n    }\n  }, [\n    elementsLoaded,\n    chartPeriod,\n    tokenSelection,\n    pageTracked,\n    trackPageWithTraits,\n    chainId,\n    swapOption,\n    tableView,\n    leverageOption,\n    analytics,\n  ]);\n\n  const LIST_SECTIONS = [\"Positions\", flagOrdersEnabled ? \"Orders\" : undefined, \"Trades\"].filter(Boolean);\n  let [listSection, setListSection] = useLocalStorageByChainId(chainId, \"List-section-v2\", LIST_SECTIONS[0]);\n  const LIST_SECTIONS_LABELS = {\n    Orders: orders.length ? `Orders (${orders.length})` : undefined,\n  };\n  if (!LIST_SECTIONS.includes(listSection)) {\n    listSection = LIST_SECTIONS[0];\n  }\n\n  const getListSection = () => {\n    return (\n      <div>\n        <div className=\"Exchange-list-tab-container\">\n          <Tab\n            options={LIST_SECTIONS}\n            optionLabels={LIST_SECTIONS_LABELS}\n            option={listSection}\n            onChange={(section) => {\n              setListSection(section);\n              trackAction &&\n                trackAction(\"Button clicked\", {\n                  buttonName: `Table view ${section}`,\n                });\n            }}\n            type=\"inline\"\n            className=\"Exchange-list-tabs\"\n          />\n          <div className=\"align-right Exchange-should-show-position-lines\">\n            <Checkbox isChecked={savedShouldShowPositionLines} setIsChecked={setSavedShouldShowPositionLines}>\n              <span className=\"muted\">Chart positions</span>\n            </Checkbox>\n          </div>\n        </div>\n        {listSection === \"Positions\" && (\n          <PositionsList\n            positionsDataIsLoading={positionsDataIsLoading}\n            pendingPositions={pendingPositions}\n            setPendingPositions={setPendingPositions}\n            setListSection={setListSection}\n            setIsWaitingForPluginApproval={setIsWaitingForPluginApproval}\n            setIsWaitingForPositionRouterApproval={setIsWaitingForPositionRouterApproval}\n            approveOrderBook={approveOrderBook}\n            approvePositionRouter={approvePositionRouter}\n            isPluginApproving={isPluginApproving}\n            isPositionRouterApproving={isPositionRouterApproving}\n            isWaitingForPluginApproval={isWaitingForPluginApproval}\n            isWaitingForPositionRouterApproval={isWaitingForPositionRouterApproval}\n            orderBookApproved={orderBookApproved}\n            positionRouterApproved={positionRouterApproved}\n            positions={positions}\n            positionsMap={positionsMap}\n            infoTokens={infoTokens}\n            active={active}\n            account={account}\n            library={library}\n            pendingTxns={pendingTxns}\n            setPendingTxns={setPendingTxns}\n            flagOrdersEnabled={flagOrdersEnabled}\n            savedIsPnlInLeverage={savedIsPnlInLeverage}\n            chainId={chainId}\n            nativeTokenAddress={nativeTokenAddress}\n            setMarket={setMarket}\n            orders={orders}\n            showPnlAfterFees={savedShowPnlAfterFees}\n            trackAction={trackAction}\n            usdgSupply={usdgSupply}\n            totalTokenWeights={totalTokenWeights}\n          />\n        )}\n        {listSection === \"Orders\" && (\n          <OrdersList\n            account={account}\n            active={active}\n            library={library}\n            pendingTxns={pendingTxns}\n            setPendingTxns={setPendingTxns}\n            infoTokens={infoTokens}\n            positionsMap={positionsMap}\n            chainId={chainId}\n            orders={orders}\n            totalTokenWeights={totalTokenWeights}\n            usdgSupply={usdgSupply}\n            trackAction={trackAction}\n          />\n        )}\n        {listSection === \"Trades\" && (\n          <TradeHistory\n            account={account}\n            infoTokens={infoTokens}\n            getTokenInfo={getTokenInfo}\n            chainId={chainId}\n            nativeTokenAddress={nativeTokenAddress}\n          />\n        )}\n      </div>\n    );\n  };\n\n  const DEFAULT_CHART = \"lightweight\";\n  let [selectedChart, setSelectedChart] = useLocalStorageSerializeKey([chainId, \"Selected-chart\"], DEFAULT_CHART);\n\n  const [chartToken, setChartToken] = useState({\n    maxPrice: null,\n    minPrice: null,\n  });\n\n  let [period, setPeriod] = useLocalStorageSerializeKey([chainId, \"Chart-period\"], DEFAULT_PERIOD);\n  if (!(period in CHART_PERIODS)) {\n    period = DEFAULT_PERIOD;\n  }\n\n  const currentAveragePrice =\n    chartToken.maxPrice && chartToken.minPrice ? chartToken.maxPrice.add(chartToken.minPrice).div(2) : null;\n\n  const [priceData, updatePriceData] = useChartPrices(\n    chainId,\n    chartToken.symbol,\n    chartToken.isStable,\n    period,\n    currentAveragePrice\n  );\n\n  const fromToken = getTokenInfo(infoTokens, fromTokenAddress);\n  const toToken = getTokenInfo(infoTokens, toTokenAddress);\n\n  useEffect(() => {\n    const tmp = getChartToken(swapOption, fromToken, toToken, chainId);\n    setChartToken(tmp);\n  }, [swapOption, fromToken, toToken, chainId]);\n\n  if (!getToken(chainId, toTokenAddress)) {\n    return null;\n  }\n\n  const onSelectWalletToken = (token) => {\n    setFromTokenAddress(swapOption, token.address);\n  };\n\n  return (\n    <>\n      <SEO description=\"Trade with liquidity, leverage, low fees. Trade with Mycelium. Trade Perpetual Swaps and Perpetual Pools on Ethereum scaling solution, Arbitrum with liquid markets for BTC, ETH, LINK, UNI, CRV, FXS, & BAL.\" />\n      <TradingCompBanner />\n      <div className=\"Exchange default-container ReferralsBannerActive\">\n        <div className=\"Exchange-content\">\n          <div className=\"Exchange-left\">\n            <div className=\"ExchangeChart tv\">\n              <ExchangeHeader\n                priceData={priceData}\n                currentAveragePrice={currentAveragePrice}\n                setChartToken={setChartToken}\n                setToTokenAddress={setToTokenAddress}\n                swapOption={swapOption}\n                chainId={chainId}\n                chartToken={chartToken}\n                trackAction={trackAction}\n                period={period}\n                setPeriod={setPeriod}\n                infoTokens={infoTokens}\n                selectedChart={selectedChart}\n                setSelectedChart={setSelectedChart}\n              />\n              <div className=\"ExchangeChart-border\">\n                {selectedChart === \"lightweight\" ? (\n                  <ExchangeTVChart\n                    fromTokenAddress={fromTokenAddress}\n                    toTokenAddress={toTokenAddress}\n                    infoTokens={infoTokens}\n                    swapOption={swapOption}\n                    chainId={chainId}\n                    positions={positions}\n                    savedShouldShowPositionLines={savedShouldShowPositionLines}\n                    orders={orders}\n                    setToTokenAddress={setToTokenAddress}\n                    sidebarVisible={sidebarVisible}\n                    trackAction={trackAction}\n                    chartToken={chartToken}\n                    setChartToken={setChartToken}\n                    currentAveragePrice={currentAveragePrice}\n                    period={period}\n                    setPeriod={setPeriod}\n                    priceData={priceData}\n                    updatePriceData={updatePriceData}\n                  />\n                ) : (\n                  <ExchangeAdvancedTVChart\n                    infoTokens={infoTokens}\n                    chartToken={chartToken}\n                    setChartToken={setChartToken}\n                    priceData={priceData}\n                    period={period}\n                    setPeriod={setPeriod}\n                    setToTokenAddress={setToTokenAddress}\n                    swapOption={swapOption}\n                    chainId={chainId}\n                    currentAveragePrice={currentAveragePrice}\n                    trackAction={trackAction}\n                  />\n                )}\n              </div>\n            </div>\n            <div className=\"Exchange-lists large\">{getListSection()}</div>\n          </div>\n          <div className=\"Exchange-right\">\n            <SwapBox\n              pendingPositions={pendingPositions}\n              setPendingPositions={setPendingPositions}\n              setIsWaitingForPluginApproval={setIsWaitingForPluginApproval}\n              setIsWaitingForPositionRouterApproval={setIsWaitingForPositionRouterApproval}\n              approveOrderBook={approveOrderBook}\n              approvePositionRouter={approvePositionRouter}\n              isPluginApproving={isPluginApproving}\n              isPositionRouterApproving={isPositionRouterApproving}\n              isWaitingForPluginApproval={isWaitingForPluginApproval}\n              isWaitingForPositionRouterApproval={isWaitingForPositionRouterApproval}\n              orderBookApproved={orderBookApproved}\n              positionRouterApproved={positionRouterApproved}\n              orders={orders}\n              flagOrdersEnabled={flagOrdersEnabled}\n              chainId={chainId}\n              infoTokens={infoTokens}\n              active={active}\n              connectWallet={connectWallet}\n              library={library}\n              account={account}\n              positionsMap={positionsMap}\n              fromTokenAddress={fromTokenAddress}\n              setFromTokenAddress={setFromTokenAddress}\n              toTokenAddress={toTokenAddress}\n              setToTokenAddress={setToTokenAddress}\n              swapOption={swapOption}\n              setSwapOption={setSwapOption}\n              pendingTxns={pendingTxns}\n              setPendingTxns={setPendingTxns}\n              tokenSelection={tokenSelection}\n              setTokenSelection={setTokenSelection}\n              isConfirming={isConfirming}\n              setIsConfirming={setIsConfirming}\n              isPendingConfirmation={isPendingConfirmation}\n              setIsPendingConfirmation={setIsPendingConfirmation}\n              savedIsPnlInLeverage={savedIsPnlInLeverage}\n              setSavedIsPnlInLeverage={setSavedIsPnlInLeverage}\n              nativeTokenAddress={nativeTokenAddress}\n              savedSlippageAmount={savedSlippageAmount}\n              totalTokenWeights={totalTokenWeights}\n              usdgSupply={usdgSupply}\n              trackAction={trackAction}\n            />\n            <div className=\"Exchange-wallet-tokens\">\n              <div className=\"Exchange-wallet-tokens-content\">\n                <ExchangeWalletTokens tokens={tokens} infoTokens={infoTokens} onSelectToken={onSelectWalletToken} />\n              </div>\n            </div>\n          </div>\n          <div className=\"Exchange-lists small\">{getListSection()}</div>\n        </div>\n      </div>\n    </>\n  );\n});\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,EAA8CC,WAA9C,EAA2DC,UAA3D,EAAuEC,mBAAvE,QAAkG,OAAlG;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,eAAT,QAAgC,WAAhC;AAEA,SACEC,sBADF,EAEEC,oBAFF,EAGEC,uBAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,YAPF,EAQEC,aARF,EASEC,cATF,EAUEC,WAVF,EAWEC,YAXF,EAYEC,YAZF,EAaEC,YAbF,EAcEC,OAdF,EAeEC,cAfF,EAgBEC,sBAhBF,EAiBEC,WAjBF,EAkBEC,wBAlBF,EAmBEC,WAnBF,EAoBEC,iBApBF,EAqBEC,UArBF,EAsBEC,gBAtBF,EAuBEC,YAvBF,EAwBEC,2BAxBF,QAyBO,eAzBP;AA0BA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,cAAT,QAA+B,WAA/B;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,oBAA9B,EAAoDC,gBAApD,QAA4E,mBAA5E;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,eAAP,IAA0BC,aAA1B,QAA+C,2CAA/C;AACA,OAAOC,uBAAP,MAAoC,mDAApC;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,oBAAP,MAAiC,gDAAjC;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,OAAO,gBAAP;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,SAASC,cAAT,QAA+B,0CAA/B;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;;;AACA,MAAM;EAAEC;AAAF,IAAkBnD,MAAM,CAACoD,SAA/B;AAEA,MAAMC,+BAA+B,GAAG,MAAM,IAA9C;AACA,MAAMC,+BAA+B,GAAG,KAAK,IAA7C;AAEA,MAAMC,cAAc,GAAG,IAAvB;AAEA,MAAMC,aAAa,GAAG,EAAtB;;AAEA,SAASC,uBAAT,CAAiCC,OAAjC,EAA0CC,OAA1C,EAAmDC,CAAnD,EAAsD;EACpD,MAAM;IAAEC;EAAF,IAAsBD,CAA5B;EACA,MAAME,EAAE,GAAG9D,MAAM,CAAC+D,KAAP,CAAaD,EAAb,CAAgBH,OAAO,GAAGE,eAA1B,CAAX;;EACA,IAAIL,aAAa,CAACM,EAAD,CAAjB,EAAuB;IACrB;EACD;;EAEDN,aAAa,CAACM,EAAD,CAAb,GAAoB,IAApB;EAEA,MAAME,KAAK,GAAGtD,cAAc,CAACgD,OAAD,CAAd,GAA0B,KAA1B,GAAkCG,eAAhD;EACAlD,WAAW,CAACsD,OAAZ,eACE;IAAA,WACGN,OADH,EACY,GADZ,eAEE;MAAG,IAAI,EAAEK,KAAT;MAAgB,MAAM,EAAC,QAAvB;MAAgC,GAAG,EAAC,qBAApC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;AAED,SAASE,qBAAT,CAA+BR,OAA/B,EAAwCC,OAAxC,EAAiDC,CAAjD,EAAoD;EAClD,MAAM;IAAEC;EAAF,IAAsBD,CAA5B;EACA,MAAME,EAAE,GAAG9D,MAAM,CAAC+D,KAAP,CAAaD,EAAb,CAAgBH,OAAO,GAAGE,eAA1B,CAAX;;EACA,IAAIL,aAAa,CAACM,EAAD,CAAjB,EAAuB;IACrB;EACD;;EAEDN,aAAa,CAACM,EAAD,CAAb,GAAoB,IAApB;EAEA,MAAME,KAAK,GAAGtD,cAAc,CAACgD,OAAD,CAAd,GAA0B,KAA1B,GAAkCG,eAAhD;EACAlD,WAAW,CAACwD,KAAZ,eACE;IAAA,WACGR,OADH,EACY,GADZ,eAEE;MAAG,IAAI,EAAEK,KAAT;MAAgB,MAAM,EAAC,QAAvB;MAAgC,GAAG,EAAC,qBAApC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;AAED,SAASI,aAAT,CAAuBC,IAAvB,EAA6B;EAC3B,IAAI;IAAEC,gBAAF;IAAoBC,qBAApB;IAA2CC;EAA3C,IAAoDH,IAAxD;;EACA,IAAIC,gBAAgB,IAAIC,qBAAxB,EAA+C;IAC7C,OAAOC,IAAI,CAACC,GAAL,CAASF,qBAAqB,CAACG,GAAtB,CAA0BJ,gBAA1B,CAAT,EAAsDK,GAAtD,CAA0DzE,sBAA1D,CAAP;EACD;;EACD;AACD;;AAED,MAAM0E,eAAe,GAAG,CAACC,KAAD,EAAQC,kBAAR,KAA+B;EACrD,IAAID,KAAK,CAACE,OAAN,KAAkB5B,WAAtB,EAAmC;IACjC,OAAO2B,kBAAP;EACD;;EACD,OAAOD,KAAK,CAACE,OAAb;AACD,CALD;;AAOA,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,gBAAvC,EAAyD;EACvD,IAAI,CAACA,gBAAL,EAAuB;IACrB;EACD;;EACD,MAAM;IAAEC;EAAF,IAAUF,QAAhB;;EAEA,IACEC,gBAAgB,CAACC,GAAD,CAAhB,IACAD,gBAAgB,CAACC,GAAD,CAAhB,CAAsBC,SADtB,IAEAF,gBAAgB,CAACC,GAAD,CAAhB,CAAsBE,cAFtB,IAGAH,gBAAgB,CAACC,GAAD,CAAhB,CAAsBC,SAAtB,GAAkC/B,+BAAlC,GAAoEiC,IAAI,CAACC,GAAL,EAJtE,EAKE;IACA,MAAM;MAAEF;IAAF,IAAqBH,gBAAgB,CAACC,GAAD,CAA3C;;IACA,IAAIE,cAAc,CAACb,IAAf,IAAuBS,QAAQ,CAACT,IAAT,CAAcgB,EAAd,CAAiBH,cAAc,CAACb,IAAhC,CAA3B,EAAkE;MAChE;IACD;;IAED,IAAIa,cAAc,CAACI,yBAAf,IAA4C,CAACR,QAAQ,CAACS,UAAT,CAAoBF,EAApB,CAAuBH,cAAc,CAACM,kBAAtC,CAAjD,EAA4G;MAC1G;IACD;;IAEDV,QAAQ,CAACW,iBAAT,GAA6B,IAA7B;IACAX,QAAQ,CAACI,cAAT,GAA0BA,cAA1B;EACD;AACF;;AAED,OAAO,SAASQ,YAAT,CACLnC,OADK,EAELoC,aAFK,EAGLC,YAHK,EAILC,UAJK,EAKLC,YALK,EAMLC,gBANK,EAOLC,OAPK,EAQLjB,gBARK,EASLkB,gBATK,EAUL;EACA,MAAMC,WAAW,GAAG3E,WAAW,CAACgC,OAAD,EAAU,2BAAV,CAA/B;EACA,MAAM4C,SAAS,GAAG,EAAlB;EACA,MAAMC,YAAY,GAAG,EAArB;;EACA,IAAI,CAACR,YAAL,EAAmB;IACjB,OAAO;MAAEO,SAAF;MAAaC;IAAb,CAAP;EACD;;EACD,MAAM;IAAEC,gBAAF;IAAoBC,WAApB;IAAiCC;EAAjC,IAA4CZ,aAAlD;;EACA,KAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,gBAAgB,CAACI,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;IAChD,MAAME,eAAe,GAAG/F,YAAY,CAACkF,UAAD,EAAaQ,gBAAgB,CAACG,CAAD,CAA7B,EAAkC,IAAlC,EAAwC9E,WAAW,CAAC6B,OAAD,EAAU,cAAV,CAAnD,CAApC;IACA,MAAMoD,UAAU,GAAGhG,YAAY,CAACkF,UAAD,EAAaS,WAAW,CAACE,CAAD,CAAxB,EAA6B,IAA7B,EAAmC9E,WAAW,CAAC6B,OAAD,EAAU,cAAV,CAA9C,CAA/B;IACA,MAAMyB,GAAG,GAAGnE,cAAc,CAACmF,OAAD,EAAUK,gBAAgB,CAACG,CAAD,CAA1B,EAA+BF,WAAW,CAACE,CAAD,CAA1C,EAA+CD,MAAM,CAACC,CAAD,CAArD,CAA1B;IACA,IAAII,WAAJ;;IACA,IAAIZ,OAAJ,EAAa;MACXY,WAAW,GAAG9F,sBAAsB,CAACkF,OAAD,EAAUK,gBAAgB,CAACG,CAAD,CAA1B,EAA+BF,WAAW,CAACE,CAAD,CAA1C,EAA+CD,MAAM,CAACC,CAAD,CAArD,CAApC;IACD;;IAED,MAAM1B,QAAQ,GAAG;MACfE,GADe;MAEf4B,WAFe;MAGfF,eAHe;MAIfC,UAJe;MAKfJ,MAAM,EAAEA,MAAM,CAACC,CAAD,CALC;MAMfnC,IAAI,EAAEuB,YAAY,CAACY,CAAC,GAAGN,WAAL,CANH;MAOfX,UAAU,EAAEK,YAAY,CAACY,CAAC,GAAGN,WAAJ,GAAkB,CAAnB,CAPT;MAQfW,YAAY,EAAEjB,YAAY,CAACY,CAAC,GAAGN,WAAJ,GAAkB,CAAnB,CARX;MASf/B,gBAAgB,EAAEyB,YAAY,CAACY,CAAC,GAAGN,WAAJ,GAAkB,CAAnB,CATf;MAUf9B,qBAAqB,EAAEsC,eAAe,CAACtC,qBAVxB;MAWf0C,iBAAiB,EAAElB,YAAY,CAACY,CAAC,GAAGN,WAAJ,GAAkB,CAAnB,CAAZ,CAAkCb,EAAlC,CAAqC,CAArC,CAXJ;MAYf0B,WAAW,EAAEnB,YAAY,CAACY,CAAC,GAAGN,WAAJ,GAAkB,CAAnB,CAZV;MAafc,iBAAiB,EAAEpB,YAAY,CAACY,CAAC,GAAGN,WAAJ,GAAkB,CAAnB,CAAZ,CAAkCe,QAAlC,EAbJ;MAcfC,SAAS,EAAEtB,YAAY,CAACY,CAAC,GAAGN,WAAJ,GAAkB,CAAnB,CAAZ,CAAkCb,EAAlC,CAAqC,CAArC,CAdI;MAef8B,KAAK,EAAEvB,YAAY,CAACY,CAAC,GAAGN,WAAJ,GAAkB,CAAnB,CAfJ;MAgBfkB,SAAS,EAAEb,MAAM,CAACC,CAAD,CAAN,GAAYG,UAAU,CAACU,QAAvB,GAAkCV,UAAU,CAACW;IAhBzC,CAAjB;;IAmBA,IACErB,gBAAgB,IAChBA,gBAAgB,CAACjB,GAAD,CADhB,IAEAiB,gBAAgB,CAACjB,GAAD,CAAhB,CAAsBC,SAFtB,IAGAgB,gBAAgB,CAACjB,GAAD,CAAhB,CAAsBC,SAAtB,GAAkC9B,+BAAlC,GAAoEgC,IAAI,CAACC,GAAL,EAJtE,EAKE;MACA,MAAMmC,eAAe,GAAGtB,gBAAgB,CAACjB,GAAD,CAAxC;MACAF,QAAQ,CAACT,IAAT,GAAgBkD,eAAe,CAAClD,IAAhC;MACAS,QAAQ,CAACS,UAAT,GAAsBgC,eAAe,CAAChC,UAAtC;MACAT,QAAQ,CAAC+B,YAAT,GAAwBU,eAAe,CAACV,YAAxC;MACA/B,QAAQ,CAACX,gBAAT,GAA4BoD,eAAe,CAACpD,gBAA5C;IACD;;IAED,IAAIqD,UAAU,GAAGvD,aAAa,CAACa,QAAD,CAA9B;IACAA,QAAQ,CAAC0C,UAAT,GAAsBA,UAAU,GAAGA,UAAH,GAAgB9G,YAAY,CAAC,CAAD,CAA5D;IACAoE,QAAQ,CAAC2C,kBAAT,GAA8B3C,QAAQ,CAACS,UAAT,CAAoBhB,GAApB,CAAwBO,QAAQ,CAAC0C,UAAjC,CAA9B;IAEA1C,QAAQ,CAAC4C,UAAT,GAAsB5C,QAAQ,CAACT,IAAT,CAAcC,GAAd,CAAkBrE,uBAAlB,EAA2CuE,GAA3C,CAA+CxE,oBAA/C,CAAtB;IACA8E,QAAQ,CAAC6C,WAAT,GAAuB7C,QAAQ,CAACT,IAAT,CAAcC,GAAd,CAAkBrE,uBAAlB,EAA2CqE,GAA3C,CAA+C,CAA/C,EAAkDE,GAAlD,CAAsDxE,oBAAtD,CAAvB;IACA8E,QAAQ,CAAC8C,SAAT,GAAqB9C,QAAQ,CAAC6C,WAAT,CAAqBE,GAArB,CAAyB/C,QAAQ,CAAC0C,UAAlC,CAArB;IAEA1C,QAAQ,CAACgD,YAAT,GAAwBhD,QAAQ,CAACqC,KAAjC;;IAEA,IAAIrC,QAAQ,CAACS,UAAT,CAAoBwC,EAApB,CAAuB,CAAvB,CAAJ,EAA+B;MAC7BjD,QAAQ,CAACkD,gBAAT,GACElD,QAAQ,CAAC2C,kBAAT,CAA4BQ,EAA5B,CAA+B,CAA/B,KAAqCnD,QAAQ,CAACT,IAAT,CAAcG,GAAd,CAAkBM,QAAQ,CAAC2C,kBAAT,CAA4BS,GAA5B,EAAlB,EAAqDH,EAArD,CAAwD,EAAxD,CADvC;;MAGA,IAAIjD,QAAQ,CAAC+B,YAAT,IAAyB/B,QAAQ,CAACsC,SAAtC,EAAiD;QAC/C,MAAMe,UAAU,GAAGrD,QAAQ,CAAC+B,YAAT,CAAsBkB,EAAtB,CAAyBjD,QAAQ,CAACsC,SAAlC,IACftC,QAAQ,CAAC+B,YAAT,CAAsBtC,GAAtB,CAA0BO,QAAQ,CAACsC,SAAnC,CADe,GAEftC,QAAQ,CAACsC,SAAT,CAAmB7C,GAAnB,CAAuBO,QAAQ,CAAC+B,YAAhC,CAFJ;QAGA/B,QAAQ,CAACgD,YAAT,GAAwBhD,QAAQ,CAACT,IAAT,CAAcC,GAAd,CAAkB6D,UAAlB,EAA8B3D,GAA9B,CAAkCM,QAAQ,CAAC+B,YAA3C,CAAxB;QAEA/B,QAAQ,CAACqC,KAAT,GAAiBrC,QAAQ,CAACgD,YAA1B;;QAEA,IAAIhD,QAAQ,CAACyB,MAAb,EAAqB;UACnBzB,QAAQ,CAACoC,SAAT,GAAqBpC,QAAQ,CAACsC,SAAT,CAAmBgB,GAAnB,CAAuBtD,QAAQ,CAAC+B,YAAhC,CAArB;QACD,CAFD,MAEO;UACL/B,QAAQ,CAACoC,SAAT,GAAqBpC,QAAQ,CAACsC,SAAT,CAAmBiB,GAAnB,CAAuBvD,QAAQ,CAAC+B,YAAhC,CAArB;QACD;MACF;;MAED/B,QAAQ,CAACwD,eAAT,GAA2BxD,QAAQ,CAACgD,YAAT,CAAsBxD,GAAtB,CAA0BtE,oBAA1B,EAAgDwE,GAAhD,CAAoDM,QAAQ,CAACS,UAA7D,CAA3B;MAEA,MAAM;QAAEgD,QAAF;QAAYC;MAAZ,IAAmCvH,WAAW,CAAC;QACnDkG,KAAK,EAAErC,QAAQ,CAACgD,YADmC;QAEnDQ,eAAe,EAAExD,QAAQ,CAACwD,eAFyB;QAGnDpB,SAAS,EAAEpC,QAAQ,CAACoC;MAH+B,CAAD,CAApD;MAMApC,QAAQ,CAACyD,QAAT,GAAoBA,QAApB;MACAzD,QAAQ,CAAC0D,kBAAT,GAA8BA,kBAA9B;MACA1D,QAAQ,CAAC2D,kBAAT,GAA8BF,QAA9B;MAEA,MAAM;QAAEG,qBAAF;QAAyBC,wBAAzB;QAAmDC;MAAnD,IAA0E1H,iBAAiB,CAAC;QAChGiG,KAAK,EAAErC,QAAQ,CAACgD,YADgF;QAEhGF,SAAS,EAAE9C,QAAQ,CAAC8C,SAF4E;QAGhGV,SAAS,EAAEpC,QAAQ,CAACoC,SAH4E;QAIhG3B,UAAU,EAAET,QAAQ,CAACS;MAJ2E,CAAD,CAAjG;MAOAT,QAAQ,CAAC8D,kBAAT,GAA8BA,kBAA9B;MACA9D,QAAQ,CAAC4D,qBAAT,GAAiCA,qBAAjC;MACA5D,QAAQ,CAAC6D,wBAAT,GAAoCA,wBAApC;MAEA,MAAM;QAAEJ,QAAQ,EAAEM,iBAAZ;QAA+BL,kBAAkB,EAAEM;MAAnD,IAAmF7H,WAAW,CAAC;QACnGkG,KAAK,EAAErC,QAAQ,CAAC4D,qBADmF;QAEnGJ,eAAe,EAAExD,QAAQ,CAAC6D,wBAFyE;QAGnGzB,SAAS,EAAE0B;MAHwF,CAAD,CAApG;MAMA9D,QAAQ,CAAC+D,iBAAT,GAA6BA,iBAA7B;MACA/D,QAAQ,CAACgE,2BAAT,GAAuCA,2BAAvC;;MAEA,IAAI/C,gBAAJ,EAAsB;QACpBjB,QAAQ,CAACyD,QAAT,GAAoBzD,QAAQ,CAAC+D,iBAA7B;QACA/D,QAAQ,CAAC0D,kBAAT,GAA8B1D,QAAQ,CAACgE,2BAAvC;MACD;;MAED,IAAIC,QAAQ,GAAGjE,QAAQ,CAACoC,SAAT,GACXpC,QAAQ,CAACS,UAAT,CAAoBsC,GAApB,CAAwB/C,QAAQ,CAACgD,YAAjC,CADW,GAEXhD,QAAQ,CAACS,UAAT,CAAoBhB,GAApB,CAAwBO,QAAQ,CAACgD,YAAjC,CAFJ;MAIAiB,QAAQ,GAAGA,QAAQ,CAACxE,GAAT,CAAaO,QAAQ,CAAC0C,UAAtB,CAAX;;MAEA,IAAIzB,gBAAJ,EAAsB;QACpBgD,QAAQ,GAAGA,QAAQ,CAACxE,GAAT,CAAaO,QAAQ,CAAC4C,UAAtB,CAAX;MACD;;MAED5C,QAAQ,CAACiE,QAAT,GAAoBA,QAApB;IACD;;IAEDjE,QAAQ,CAACkE,QAAT,GAAoBjI,WAAW,CAAC;MAC9BsD,IAAI,EAAES,QAAQ,CAACT,IADe;MAE9BkB,UAAU,EAAET,QAAQ,CAACS,UAFS;MAG9BpB,gBAAgB,EAAEW,QAAQ,CAACX,gBAHG;MAI9BC,qBAAqB,EAAEU,QAAQ,CAACV,qBAJF;MAK9B8C,SAAS,EAAEpC,QAAQ,CAACoC,SALU;MAM9BC,KAAK,EAAErC,QAAQ,CAACqC,KANc;MAO9BrB;IAP8B,CAAD,CAA/B;IAUAM,YAAY,CAACpB,GAAD,CAAZ,GAAoBF,QAApB;IAEAD,mBAAmB,CAACC,QAAD,EAAWC,gBAAX,CAAnB;;IAEA,IAAID,QAAQ,CAACT,IAAT,CAAc0D,EAAd,CAAiB,CAAjB,KAAuBjD,QAAQ,CAACW,iBAApC,EAAuD;MACrDU,SAAS,CAAC8C,IAAV,CAAenE,QAAf;IACD;EACF;;EAED,OAAO;IAAEqB,SAAF;IAAaC;EAAb,CAAP;AACD;AAED,OAAO,SAAS8C,gBAAT,CAA0BC,MAA1B,EAAkCxE,kBAAlC,EAAsD;EAC3D,MAAM0B,gBAAgB,GAAG,EAAzB;EACA,MAAMC,WAAW,GAAG,EAApB;EACA,MAAMC,MAAM,GAAG,EAAf;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2C,MAAM,CAAC1C,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;IACtC,MAAM9B,KAAK,GAAGyE,MAAM,CAAC3C,CAAD,CAApB;;IACA,IAAI9B,KAAK,CAAC0E,QAAV,EAAoB;MAClB;IACD;;IACD,IAAI1E,KAAK,CAAC2E,SAAV,EAAqB;MACnB;IACD;;IACDhD,gBAAgB,CAAC4C,IAAjB,CAAsBxE,eAAe,CAACC,KAAD,EAAQC,kBAAR,CAArC;IACA2B,WAAW,CAAC2C,IAAZ,CAAiBxE,eAAe,CAACC,KAAD,EAAQC,kBAAR,CAAhC;IACA4B,MAAM,CAAC0C,IAAP,CAAY,IAAZ;EACD;;EAED,KAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2C,MAAM,CAAC1C,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;IACtC,MAAM8C,WAAW,GAAGH,MAAM,CAAC3C,CAAD,CAA1B;;IACA,IAAI,CAAC8C,WAAW,CAACF,QAAjB,EAA2B;MACzB;IACD;;IAED,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAAC1C,MAA3B,EAAmC8C,CAAC,EAApC,EAAwC;MACtC,MAAM7E,KAAK,GAAGyE,MAAM,CAACI,CAAD,CAApB;;MACA,IAAI7E,KAAK,CAAC0E,QAAV,EAAoB;QAClB;MACD;;MACD,IAAI1E,KAAK,CAAC2E,SAAV,EAAqB;QACnB;MACD;;MACDhD,gBAAgB,CAAC4C,IAAjB,CAAsBK,WAAW,CAAC1E,OAAlC;MACA0B,WAAW,CAAC2C,IAAZ,CAAiBxE,eAAe,CAACC,KAAD,EAAQC,kBAAR,CAAhC;MACA4B,MAAM,CAAC0C,IAAP,CAAY,KAAZ;IACD;EACF;;EAED,OAAO;IAAE5C,gBAAF;IAAoBC,WAApB;IAAiCC;EAAjC,CAAP;AACD;AAED,OAAO,MAAMiD,QAAQ,gBAAG/J,UAAU,SAAC,CAACgK,KAAD,EAAQC,GAAR,KAAgB;EAAA;;EACjD,MAAM;IACJC,oBADI;IAEJC,uBAFI;IAGJC,qBAHI;IAIJC,mBAJI;IAKJC,WALI;IAMJC,cANI;IAOJC,4BAPI;IAQJC,+BARI;IASJC,aATI;IAUJtE,UAVI;IAWJuE,mBAXI;IAYJC,WAZI;IAaJC,cAbI;IAcJC;EAdI,IAeFd,KAfJ;EAiBA,MAAM,CAAC1E,gBAAD,EAAmByF,mBAAnB,IAA0ClL,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAAC2G,gBAAD,EAAmBwE,mBAAnB,IAA0CnL,QAAQ,CAAC,EAAD,CAAxD;EAEAD,SAAS,CAAC,MAAM;IACdqL,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,MAAM;IAAEC,MAAF;IAAU5E,OAAV;IAAmB6E;EAAnB,IAA+BlL,YAAY,EAAjD;EACA,MAAM;IAAE4D;EAAF,IAAcpC,UAAU,EAA9B;EACA,MAAM2J,cAAc,GAAG9E,OAAvB;EAEA,MAAMrB,kBAAkB,GAAGjD,WAAW,CAAC6B,OAAD,EAAU,cAAV,CAAtC;EAEA,MAAMwH,YAAY,GAAGrJ,WAAW,CAAC6B,OAAD,EAAU,OAAV,CAAhC;EACA,MAAMyH,qBAAqB,GAAGtJ,WAAW,CAAC6B,OAAD,EAAU,gBAAV,CAAzC;EACA,MAAM0H,aAAa,GAAGvJ,WAAW,CAAC6B,OAAD,EAAU,QAAV,CAAjC;EACA,MAAM2H,WAAW,GAAGxJ,WAAW,CAAC6B,OAAD,EAAU,MAAV,CAA/B;EAEA,MAAM4H,iBAAiB,GAAGtJ,oBAAoB,CAAC0B,OAAD,CAA9C;EAEA,MAAMoC,aAAa,GAAGuD,gBAAgB,CAACiC,iBAAD,EAAoBxG,kBAApB,CAAtC;EAEA,MAAMyG,uBAAuB,GAAG7J,WAAW,CAACgC,OAAD,EAAU,yBAAV,CAA3C;EACA,MAAM8H,qBAAqB,GAAG9L,OAAO,CACnC,OAAO;IACL,CAACW,IAAD,GAAQ;MACNoL,IAAI,EAAEtI,WADA;MAENuI,EAAE,EAAEzJ,gBAAgB,CAACyB,OAAD,EAAU6H,uBAAV,CAAhB,CAAmDxG;IAFjD,CADH;IAKL,CAACzE,IAAD,GAAQ;MACNmL,IAAI,EAAEtI,WADA;MAENuI,EAAE,EAAEvI;IAFE,CALH;IASL,CAAC5C,KAAD,GAAS;MACPkL,IAAI,EAAExJ,gBAAgB,CAACyB,OAAD,EAAU6H,uBAAV,CAAhB,CAAmDxG,OADlD;MAEP2G,EAAE,EAAEvI;IAFG;EATJ,CAAP,CADmC,EAenC,CAACO,OAAD,EAAU6H,uBAAV,CAfmC,CAArC;EAkBA,MAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCzK,wBAAwB,CAClEuC,OADkE,EAElE,6BAFkE,EAGlE8H,qBAHkE,CAApE;EAKA,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8B3K,wBAAwB,CAACuC,OAAD,EAAU,gBAAV,EAA4BpD,IAA5B,CAA5D;EAEA,MAAMyL,gBAAgB,GAAGJ,cAAc,CAACE,UAAD,CAAd,CAA2BJ,IAApD;EACA,MAAMO,cAAc,GAAGL,cAAc,CAACE,UAAD,CAAd,CAA2BH,EAAlD;EAEA,MAAMO,mBAAmB,GAAGtM,WAAW,CACrC,CAACuM,kBAAD,EAAqBnH,OAArB,KAAiC;IAC/B,MAAMoH,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeX,cAAf,CAAX,CAA1B;IACAQ,iBAAiB,CAACD,kBAAD,CAAjB,CAAsCT,IAAtC,GAA6C1G,OAA7C;IACA6G,iBAAiB,CAACO,iBAAD,CAAjB;EACD,CALoC,EAMrC,CAACR,cAAD,EAAiBC,iBAAjB,CANqC,CAAvC;EASA,MAAMW,iBAAiB,GAAG5M,WAAW,CACnC,CAACuM,kBAAD,EAAqBnH,OAArB,KAAiC;IAC/B,MAAMoH,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeX,cAAf,CAAX,CAA1B;IACAQ,iBAAiB,CAACD,kBAAD,CAAjB,CAAsCR,EAAtC,GAA2C3G,OAA3C;;IACA,IAAImH,kBAAkB,KAAK5L,IAAvB,IAA+B4L,kBAAkB,KAAK3L,KAA1D,EAAiE;MAC/D4L,iBAAiB,CAAC7L,IAAD,CAAjB,CAAwBoL,EAAxB,GAA6B3G,OAA7B;MACAoH,iBAAiB,CAAC5L,KAAD,CAAjB,CAAyBmL,EAAzB,GAA8B3G,OAA9B;IACD;;IACD6G,iBAAiB,CAACO,iBAAD,CAAjB;EACD,CATkC,EAUnC,CAACR,cAAD,EAAiBC,iBAAjB,CAVmC,CAArC;;EAaA,MAAMY,SAAS,GAAG,CAACN,kBAAD,EAAqBF,cAArB,KAAwC;IACxDF,aAAa,CAACI,kBAAD,CAAb;IACA,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeX,cAAf,CAAX,CAA1B;IACAQ,iBAAiB,CAACD,kBAAD,CAAjB,CAAsCR,EAAtC,GAA2CM,cAA3C;;IACA,IAAIE,kBAAkB,KAAK5L,IAAvB,IAA+B4L,kBAAkB,KAAK3L,KAA1D,EAAiE;MAC/D4L,iBAAiB,CAAC7L,IAAD,CAAjB,CAAwBoL,EAAxB,GAA6BM,cAA7B;MACAG,iBAAiB,CAAC5L,KAAD,CAAjB,CAAyBmL,EAAzB,GAA8BM,cAA9B;IACD;;IACDJ,iBAAiB,CAACO,iBAAD,CAAjB;EACD,CATD;;EAWA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCjN,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAM,CAACkN,qBAAD,EAAwBC,wBAAxB,IAAoDnN,QAAQ,CAAC,KAAD,CAAlE;EAEA,MAAM6J,MAAM,GAAGxH,SAAS,CAAC4B,OAAD,CAAxB;EAEA,MAAM;IAAEW,IAAI,EAAE0B,YAAR;IAAsB5B,KAAK,EAAE0I;EAA7B,IAAmD9M,MAAM,CAC7DgL,MAAM,IAAI,CAACA,MAAD,EAASrH,OAAT,EAAkB0H,aAAlB,EAAiC,cAAjC,EAAiDF,YAAjD,EAA+D/E,OAA/D,CADmD,EAE7D;IACEpF,OAAO,EAAEA,OAAO,CAACiK,OAAD,EAAU9I,MAAV,EAAkB,CAChC4D,aAAa,CAACU,gBADkB,EAEhCV,aAAa,CAACW,WAFkB,EAGhCX,aAAa,CAACY,MAHkB,CAAlB;EADlB,CAF6D,CAA/D;EAWA,MAAMoG,sBAAsB,GAAG/B,MAAM,IAAI,CAAChF,YAAX,IAA2B,CAAC8G,iBAA3D;EAEA,MAAM;IAAExI,IAAI,EAAE0I;EAAR,IAA8BhN,MAAM,CACxC,CAAE,8BAA6BgL,MAAO,EAAtC,EAAyCrH,OAAzC,EAAkDwH,YAAlD,EAAgE,mBAAhE,CADwC,EAExC;IACEnK,OAAO,EAAEA,OAAO,CAACiK,OAAD,EAAU7I,OAAV;EADlB,CAFwC,CAA1C;EAOA,MAAM;IAAEkC,IAAI,EAAE2I;EAAR,IAAuBjN,MAAM,CAAC,CAAE,uBAAsBgL,MAAO,EAA/B,EAAkCrH,OAAlC,EAA2C2H,WAA3C,EAAwD,aAAxD,CAAD,EAAyE;IAC1GtK,OAAO,EAAEA,OAAO,CAACiK,OAAD,EAAU3I,KAAV;EAD0F,CAAzE,CAAnC;EAIA,MAAM4K,gBAAgB,GAAGpL,WAAW,CAAC6B,OAAD,EAAU,WAAV,CAApC;EACA,MAAMwJ,aAAa,GAAGrL,WAAW,CAAC6B,OAAD,EAAU,QAAV,CAAjC;EACA,MAAM;IAAEW,IAAI,EAAE8I;EAAR,IAA8BpN,MAAM,CACxCgL,MAAM,IAAI,CAACA,MAAD,EAASrH,OAAT,EAAkBwJ,aAAlB,EAAiC,iBAAjC,EAAoD/G,OAApD,EAA6D8G,gBAA7D,CAD8B,EAExC;IACElM,OAAO,EAAEA,OAAO,CAACiK,OAAD,EAAU5I,MAAV;EADlB,CAFwC,CAA1C;EAOA,MAAM;IAAEiC,IAAI,EAAE+I;EAAR,IAAmCrN,MAAM,CAC7CgL,MAAM,IAAI,CAACA,MAAD,EAASrH,OAAT,EAAkBwJ,aAAlB,EAAiC,iBAAjC,EAAoD/G,OAApD,EAA6DgF,qBAA7D,CADmC,EAE7C;IACEpK,OAAO,EAAEA,OAAO,CAACiK,OAAD,EAAU5I,MAAV;EADlB,CAF6C,CAA/C;EAOA5C,SAAS,CAAC,MAAM;IACd,MAAM6N,SAAS,GAAGvM,YAAY,CAACkF,UAAD,EAAa+F,gBAAb,CAA9B;IACA,MAAMuB,OAAO,GAAGxM,YAAY,CAACkF,UAAD,EAAagG,cAAb,CAA5B;IACA,IAAIuB,aAAa,GAAG9K,aAAa,CAACoJ,UAAD,EAAawB,SAAb,EAAwBC,OAAxB,EAAiC5J,OAAjC,CAAjC;IACA,IAAI8J,oBAAoB,GAAG5M,YAAY,CAAC2M,aAAa,CAAC9F,QAAf,EAAyBjH,YAAzB,EAAuC,CAAvC,EAA0C,IAA1C,CAAvC;IACA,IAAIiN,KAAK,GAAGjM,YAAY,CAACgM,oBAAoB,GAAI,MAAKD,aAAa,CAACG,MAAO,GAAEH,aAAa,CAAChE,QAAd,GAAyB,EAAzB,GAA8B,KAAM,EAAzF,CAAxB;IACAoE,QAAQ,CAACF,KAAT,GAAiBA,KAAjB;EACD,CAPQ,EAON,CAAC9B,cAAD,EAAiBE,UAAjB,EAA6B7F,UAA7B,EAAyCtC,OAAzC,EAAkDqI,gBAAlD,EAAoEC,cAApE,CAPM,CAAT;EASA,MAAM;IAAE1F,SAAF;IAAaC;EAAb,IAA8BV,YAAY,CAC9CnC,OAD8C,EAE9CoC,aAF8C,EAG9CC,YAH8C,EAI9CC,UAJ8C,EAK9C8D,oBAL8C,EAM9CE,qBAN8C,EAO9C7D,OAP8C,EAQ9CjB,gBAR8C,EAS9CkB,gBAT8C,CAAhD;EAYAvG,mBAAmB,CAACgK,GAAD,EAAM,OAAO;IAC9B+D,gBAAgB,CAACzI,GAAD,EAAMX,IAAN,EAAYkB,UAAZ,EAAwBsB,YAAxB,EAAsC1C,gBAAtC,EAAwDuJ,aAAxD,EAAuE3G,WAAvE,EAAoF;MAClG,KAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACM,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;QACzC,MAAM1B,QAAQ,GAAGqB,SAAS,CAACK,CAAD,CAA1B;;QACA,IAAI1B,QAAQ,CAAC8B,WAAT,KAAyB5B,GAA7B,EAAkC;UAChCiB,gBAAgB,CAACnB,QAAQ,CAACE,GAAV,CAAhB,GAAiC;YAC/BX,IAD+B;YAE/BkB,UAF+B;YAG/BsB,YAH+B;YAI/B1C,gBAJ+B;YAK/BuJ,aAL+B;YAM/B3G,WAN+B;YAO/B9B,SAAS,EAAEE,IAAI,CAACC,GAAL;UAPoB,CAAjC;UASAqF,mBAAmB,CAAC,EAAE,GAAGxE;UAAL,CAAD,CAAnB;UACA;QACD;MACF;IACF,CAlB6B;;IAmB9B0H,eAAe,CAAC3I,GAAD,EAAMX,IAAN,EAAYkB,UAAZ,EAAwBsB,YAAxB,EAAsC1C,gBAAtC,EAAwDuJ,aAAxD,EAAuE3G,WAAvE,EAAoFtD,CAApF,EAAuF;MACpG,KAAK,IAAI+C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACM,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;QACzC,MAAM1B,QAAQ,GAAGqB,SAAS,CAACK,CAAD,CAA1B;;QACA,IAAI1B,QAAQ,CAAC8B,WAAT,KAAyB5B,GAA7B,EAAkC;UAChCiB,gBAAgB,CAACnB,QAAQ,CAACE,GAAV,CAAhB,GAAiC;YAC/BX,IAAI,EAAE3D,YAAY,CAAC,CAAD,CADa;YAE/B6E,UAAU,EAAE7E,YAAY,CAAC,CAAD,CAFO;YAG/BmG,YAH+B;YAI/B1C,gBAJ+B;YAK/BuJ,aAL+B;YAM/B3G,WAN+B;YAO/B9B,SAAS,EAAEE,IAAI,CAACC,GAAL;UAPoB,CAAjC;UASAqF,mBAAmB,CAAC,EAAE,GAAGxE;UAAL,CAAD,CAAnB;UACA;QACD;MACF;IACF,CApC6B;;IAsC9B2H,kBAAkB,CAAC5I,GAAD,EAAMgB,OAAN,EAAeU,eAAf,EAAgCC,UAAhC,EAA4CkH,eAA5C,EAA6DC,SAA7D,EAAwEvH,MAAxE,EAAgFwH,KAAhF,EAAuFC,GAAvF,EAA4FvK,CAA5F,EAA+F;MAC/G,IAAIuC,OAAO,KAAK8E,cAAhB,EAAgC;QAC9B;MACD;;MAED,MAAMmD,cAAc,GAAGrM,QAAQ,CAAC2B,OAAD,EAAUoD,UAAV,CAA/B;MACA,MAAMuH,WAAW,GAAGD,cAAc,CAAC5E,SAAf,GAA2B9H,WAAW,CAACgC,OAAD,EAAU,mBAAV,CAAtC,GAAuE0K,cAAc,CAACV,MAA1G;MAEA,IAAI/J,OAAJ;;MACA,IAAIsK,SAAS,CAACzI,EAAV,CAAa,CAAb,CAAJ,EAAqB;QACnB7B,OAAO,GAAI,aAAY/C,YAAY,CAACoN,eAAD,EAAkBxN,YAAlB,EAAgC,CAAhC,EAAmC,IAAnC,CAAyC,aAAY6N,WAAY,IAClG3H,MAAM,GAAG,MAAH,GAAY,QACnB,EAFD;MAGD,CAJD,MAIO;QACL/C,OAAO,GAAI,aAAY0K,WAAY,IAAG3H,MAAM,GAAG,MAAH,GAAY,OAAQ,MAAK9F,YAAY,CAC/EqN,SAD+E,EAE/EzN,YAF+E,EAG/E,CAH+E,EAI/E,IAJ+E,CAK/E,OALF;MAMD;;MAEDiD,uBAAuB,CAACC,OAAD,EAAUC,OAAV,EAAmBC,CAAnB,CAAvB;IACD,CA7D6B;;IA+D9B0K,kBAAkB,CAACnJ,GAAD,EAAMgB,OAAN,EAAeU,eAAf,EAAgCC,UAAhC,EAA4CkH,eAA5C,EAA6DC,SAA7D,EAAwEvH,MAAxE,EAAgFwH,KAAhF,EAAuFC,GAAvF,EAA4FvK,CAA5F,EAA+F;MAC/G,IAAIuC,OAAO,KAAK8E,cAAhB,EAAgC;QAC9B;MACD;;MAED,MAAMmD,cAAc,GAAGrM,QAAQ,CAAC2B,OAAD,EAAUoD,UAAV,CAA/B;MACA,MAAMuH,WAAW,GAAGD,cAAc,CAAC5E,SAAf,GAA2B9H,WAAW,CAACgC,OAAD,EAAU,mBAAV,CAAtC,GAAuE0K,cAAc,CAACV,MAA1G;MAEA,IAAI/J,OAAJ;;MACA,IAAIsK,SAAS,CAACzI,EAAV,CAAa,CAAb,CAAJ,EAAqB;QACnB7B,OAAO,GAAI,YAAW/C,YAAY,CAACoN,eAAD,EAAkBxN,YAAlB,EAAgC,CAAhC,EAAmC,IAAnC,CAAyC,aAAY6N,WAAY,IACjG3H,MAAM,GAAG,MAAH,GAAY,OACnB,GAFD;MAGD,CAJD,MAIO;QACL/C,OAAO,GAAI,aAAY0K,WAAY,IAAG3H,MAAM,GAAG,MAAH,GAAY,OAAQ,MAAK9F,YAAY,CAC/EqN,SAD+E,EAE/EzN,YAF+E,EAG/E,CAH+E,EAI/E,IAJ+E,CAK/E,OALF;MAMD;;MAEDiD,uBAAuB,CAACC,OAAD,EAAUC,OAAV,EAAmBC,CAAnB,CAAvB;IACD,CAtF6B;;IAwF9B2K,wBAAwB,CACtBpI,OADsB,EAEtBqI,IAFsB,EAGtB1H,UAHsB,EAItB2H,QAJsB,EAKtBC,MALsB,EAMtBT,SANsB,EAOtBvH,MAPsB,EAQtBiI,eARsB,EAStBC,YATsB,EAUtBC,QAVsB,EAWtBC,OAXsB,EAYtBlL,CAZsB,EAatB;MACA,IAAIuC,OAAO,KAAK8E,cAAhB,EAAgC;QAC9B;MACD;;MACD,MAAMmD,cAAc,GAAGrM,QAAQ,CAAC2B,OAAD,EAAUoD,UAAV,CAA/B;MACA,MAAMuH,WAAW,GAAGD,cAAc,CAAC5E,SAAf,GAA2B9H,WAAW,CAACgC,OAAD,EAAU,mBAAV,CAAtC,GAAuE0K,cAAc,CAACV,MAA1G;MAEA,MAAM/J,OAAO,GAAI,sBAAqB0K,WAAY,IAChD3H,MAAM,GAAG,MAAH,GAAY,OACnB,iHAFD;MAIAxC,qBAAqB,CAACR,OAAD,EAAUC,OAAV,EAAmBC,CAAnB,CAArB;MAEA,MAAMuB,GAAG,GAAGnE,cAAc,CAACmF,OAAD,EAAUqI,IAAI,CAACA,IAAI,CAAC5H,MAAL,GAAc,CAAf,CAAd,EAAiCE,UAAjC,EAA6CJ,MAA7C,CAA1B;MACAxB,gBAAgB,CAACC,GAAD,CAAhB,GAAwB,EAAxB;MACAwF,mBAAmB,CAAC,EAAE,GAAGzF;MAAL,CAAD,CAAnB;IACD,CArH6B;;IAuH9B6J,wBAAwB,CACtB5I,OADsB,EAEtBqI,IAFsB,EAGtB1H,UAHsB,EAItBkH,eAJsB,EAKtBC,SALsB,EAMtBvH,MANsB,EAOtBsI,QAPsB,EAQtBL,eARsB,EAStBD,MATsB,EAUtBE,YAVsB,EAWtBC,QAXsB,EAYtBC,OAZsB,EAatBlL,CAbsB,EActB;MACA,IAAIuC,OAAO,KAAK8E,cAAhB,EAAgC;QAC9B;MACD;;MACD,MAAMmD,cAAc,GAAGrM,QAAQ,CAAC2B,OAAD,EAAUoD,UAAV,CAA/B;MACA,MAAMuH,WAAW,GAAGD,cAAc,CAAC5E,SAAf,GAA2B9H,WAAW,CAACgC,OAAD,EAAU,mBAAV,CAAtC,GAAuE0K,cAAc,CAACV,MAA1G;MAEA,MAAM/J,OAAO,GAAI,sBAAqB0K,WAAY,IAChD3H,MAAM,GAAG,MAAH,GAAY,OACnB,iHAFD;MAIAxC,qBAAqB,CAACR,OAAD,EAAUC,OAAV,EAAmBC,CAAnB,CAArB;MAEA,MAAMuB,GAAG,GAAGnE,cAAc,CAACmF,OAAD,EAAUqI,IAAI,CAACA,IAAI,CAAC5H,MAAL,GAAc,CAAf,CAAd,EAAiCE,UAAjC,EAA6CJ,MAA7C,CAA1B;MACAxB,gBAAgB,CAACC,GAAD,CAAhB,GAAwB,EAAxB;MACAwF,mBAAmB,CAAC,EAAE,GAAGzF;MAAL,CAAD,CAAnB;IACD;;EArJ6B,CAAP,CAAN,CAAnB;EAwJA,MAAM+J,iBAAiB,GAAG,IAA1B;EACA,MAAM,CAACC,MAAD,IAAW3N,gBAAgB,CAAC0N,iBAAD,CAAjC;EAEA,MAAM,CAACE,0BAAD,EAA6BC,6BAA7B,IAA8D3P,QAAQ,CAAC,KAAD,CAA5E;EACA,MAAM,CAAC4P,kCAAD,EAAqCC,qCAArC,IAA8E7P,QAAQ,CAAC,KAAD,CAA5F;EACA,MAAM,CAAC8P,iBAAD,EAAoBC,oBAApB,IAA4C/P,QAAQ,CAAC,KAAD,CAA1D;EACA,MAAM,CAACgQ,yBAAD,EAA4BC,4BAA5B,IAA4DjQ,QAAQ,CAAC,KAAD,CAA1E;;EAEA,MAAMkQ,gBAAgB,GAAG,MAAM;IAC7BH,oBAAoB,CAAC,IAAD,CAApB;IACA,OAAO7N,aAAa,CAAC+B,OAAD,EAAUuJ,gBAAV,EAA4B;MAC9CjC,OAD8C;MAE9Cd,WAF8C;MAG9CC,cAH8C;MAI9CyF,OAAO,EAAE,qBAJqC;MAK9CC,OAAO,EAAE;IALqC,CAA5B,CAAb,CAOJC,IAPI,CAOC,MAAM;MACVV,6BAA6B,CAAC,IAAD,CAA7B;IACD,CATI,EAUJW,OAVI,CAUI,MAAM;MACbP,oBAAoB,CAAC,KAAD,CAApB;IACD,CAZI,CAAP;EAaD,CAfD;;EAiBA,MAAMQ,qBAAqB,GAAG,QAA0B;IAAA,IAAzB;MAAEJ,OAAF;MAAWC;IAAX,CAAyB;IACtDH,4BAA4B,CAAC,IAAD,CAA5B;IACA,OAAO/N,aAAa,CAAC+B,OAAD,EAAUyH,qBAAV,EAAiC;MACnDH,OADmD;MAEnDd,WAFmD;MAGnDC,cAHmD;MAInDyF,OAJmD;MAKnDC;IALmD,CAAjC,CAAb,CAOJC,IAPI,CAOC,MAAM;MACVR,qCAAqC,CAAC,IAAD,CAArC;IACD,CATI,EAUJS,OAVI,CAUI,MAAM;MACbL,4BAA4B,CAAC,KAAD,CAA5B;IACD,CAZI,CAAP;EAaD,CAfD;;EAiBA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCzQ,QAAQ,CAAC,KAAD,CAA9C;EAEA,MAAM,CAAC0Q,WAAD,IAAgBlQ,eAAe,CAACmM,IAAI,CAACE,SAAL,CAAe,CAAC5I,OAAD,EAAU,cAAV,CAAf,CAAD,CAArC;EACA,MAAM,CAAC0M,kBAAD,IAAuBnQ,eAAe,CAAC,iBAAD,CAA5C;EACA,MAAM,CAACoQ,cAAD,IAAmBpQ,eAAe,CAACmM,IAAI,CAACE,SAAL,CAAe,CAAC5I,OAAD,EAAU,+BAAV,CAAf,CAAD,CAAxC;EACA,MAAM4M,SAAS,GACb,CAAC,CAACF,kBAAF,IAAwBG,MAAM,CAACC,IAAP,CAAYJ,kBAAZ,EAAgCxJ,MAAhC,GAAyC,CAAjE,GAAqEwJ,kBAAkB,CAAC1M,OAAD,CAAvF,GAAmG,WADrG,CA/WiD,CAgXiE;;EAClH,MAAM+M,YAAY,GAAG,CACnBN,WADmB,EAEnBxE,cAFmB,EAGnBsE,WAHmB,EAInB1F,mBAJmB,EAKnB7G,OALmB,EAMnBmI,UANmB,EAOnByE,SAPmB,EAQnBD,cARmB,CAArB;EAWA,MAAMK,cAAc,GAAGD,YAAY,CAACE,KAAb,CAAoBC,OAAD,IAAaA,OAAO,KAAKC,SAA5C,CAAvB,CA5XiD,CA8XjD;;EACArR,SAAS,CAAC,MAAM;IACd,IAAIkR,cAAc,IAAIhG,SAAlB,IAA+B,CAACuF,WAApC,EAAiD;MAC/C;MACA,MAAMa,UAAU,GAAGrO,aAAa,CAC9BoJ,UAD8B,EAE9BF,cAAc,CAACE,UAAD,CAAd,CAA2BJ,IAFG,EAG9BE,cAAc,CAACE,UAAD,CAAd,CAA2BH,EAHG,EAI9BhI,OAJ8B,CAAhC;MAMA,MAAMqN,MAAM,GAAGhP,QAAQ,CAAC2B,OAAD,EAAUoN,UAAV,CAAvB;MACA,MAAME,eAAe,GAAI,GAAED,MAAM,CAACrD,MAAO,MAAzC,CAT+C,CAU/C;;MACA,MAAMuD,UAAU,GAAGlP,QAAQ,CAAC2B,OAAD,EAAUiI,cAAc,CAACE,UAAD,CAAd,CAA2BJ,IAArC,CAAR,CAAmDiC,MAAtE;MACA,MAAMwD,cAAc,GAAGnP,QAAQ,CAAC2B,OAAD,EAAUiI,cAAc,CAACE,UAAD,CAAd,CAA2BH,EAArC,CAAR,CAAiDgC,MAAxE;MACA,MAAMvE,QAAQ,GAAG;QAAEA,QAAQ,EAAEgI,QAAQ,CAACd,cAAD;MAApB,CAAjB;MAEA,MAAMe,MAAM,GAAG;QACbC,SAAS,EAAElB,WADE;QAEbG,SAAS,EAAEA,SAFE;QAGbS,MAAM,EAAEC,eAHK;QAIbM,cAAc,EAAEzF,UAJH;QAKboF,UAAU,EAAEA,UALC;QAMbC,cAAc,EAAEA,cANH;QAOb,GAAG/H;MAPU,CAAf;MASAoB,mBAAmB,CAAC6G,MAAD,CAAnB;MACAlB,cAAc,CAAC,IAAD,CAAd,CAzB+C,CAyBzB;IACvB;EACF,CA5BQ,EA4BN,CACDQ,cADC,EAEDP,WAFC,EAGDxE,cAHC,EAIDsE,WAJC,EAKD1F,mBALC,EAMD7G,OANC,EAODmI,UAPC,EAQDyE,SARC,EASDD,cATC,EAUD3F,SAVC,CA5BM,CAAT;EAyCA,MAAM6G,aAAa,GAAG,CAAC,WAAD,EAActC,iBAAiB,GAAG,QAAH,GAAc4B,SAA7C,EAAwD,QAAxD,EAAkEW,MAAlE,CAAyEC,OAAzE,CAAtB;EACA,IAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCxQ,wBAAwB,CAACuC,OAAD,EAAU,iBAAV,EAA6B6N,aAAa,CAAC,CAAD,CAA1C,CAA5D;EACA,MAAMK,oBAAoB,GAAG;IAC3BC,MAAM,EAAE3C,MAAM,CAACtI,MAAP,GAAiB,WAAUsI,MAAM,CAACtI,MAAO,GAAzC,GAA8CiK;EAD3B,CAA7B;;EAGA,IAAI,CAACU,aAAa,CAACO,QAAd,CAAuBJ,WAAvB,CAAL,EAA0C;IACxCA,WAAW,GAAGH,aAAa,CAAC,CAAD,CAA3B;EACD;;EAED,MAAMQ,cAAc,GAAG,MAAM;IAC3B,oBACE;MAAA,wBACE;QAAK,SAAS,EAAC,6BAAf;QAAA,wBACE,QAAC,GAAD;UACE,OAAO,EAAER,aADX;UAEE,YAAY,EAAEK,oBAFhB;UAGE,MAAM,EAAEF,WAHV;UAIE,QAAQ,EAAGM,OAAD,IAAa;YACrBL,cAAc,CAACK,OAAD,CAAd;YACAxH,WAAW,IACTA,WAAW,CAAC,gBAAD,EAAmB;cAC5ByH,UAAU,EAAG,cAAaD,OAAQ;YADN,CAAnB,CADb;UAID,CAVH;UAWE,IAAI,EAAC,QAXP;UAYE,SAAS,EAAC;QAZZ;UAAA;UAAA;UAAA;QAAA,QADF,eAeE;UAAK,SAAS,EAAC,iDAAf;UAAA,uBACE,QAAC,QAAD;YAAU,SAAS,EAAE5H,4BAArB;YAAmD,YAAY,EAAEC,+BAAjE;YAAA,uBACE;cAAM,SAAS,EAAC,OAAhB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAfF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAsBGqH,WAAW,KAAK,WAAhB,iBACC,QAAC,aAAD;QACE,sBAAsB,EAAE5E,sBAD1B;QAEE,gBAAgB,EAAE5H,gBAFpB;QAGE,mBAAmB,EAAEyF,mBAHvB;QAIE,cAAc,EAAEgH,cAJlB;QAKE,6BAA6B,EAAEvC,6BALjC;QAME,qCAAqC,EAAEE,qCANzC;QAOE,gBAAgB,EAAEK,gBAPpB;QAQE,qBAAqB,EAAEK,qBARzB;QASE,iBAAiB,EAAET,iBATrB;QAUE,yBAAyB,EAAEE,yBAV7B;QAWE,0BAA0B,EAAEN,0BAX9B;QAYE,kCAAkC,EAAEE,kCAZtC;QAaE,iBAAiB,EAAElC,iBAbrB;QAcE,sBAAsB,EAAEC,sBAd1B;QAeE,SAAS,EAAE9G,SAfb;QAgBE,YAAY,EAAEC,YAhBhB;QAiBE,UAAU,EAAEP,UAjBd;QAkBE,MAAM,EAAE+E,MAlBV;QAmBE,OAAO,EAAE5E,OAnBX;QAoBE,OAAO,EAAE6E,OApBX;QAqBE,WAAW,EAAEd,WArBf;QAsBE,cAAc,EAAEC,cAtBlB;QAuBE,iBAAiB,EAAE8E,iBAvBrB;QAwBE,oBAAoB,EAAEnF,oBAxBxB;QAyBE,OAAO,EAAEpG,OAzBX;QA0BE,kBAAkB,EAAEoB,kBA1BtB;QA2BE,SAAS,EAAE0H,SA3Bb;QA4BE,MAAM,EAAE0C,MA5BV;QA6BE,gBAAgB,EAAElF,qBA7BpB;QA8BE,WAAW,EAAEQ,WA9Bf;QA+BE,UAAU,EAAEwC,UA/Bd;QAgCE,iBAAiB,EAAED;MAhCrB;QAAA;QAAA;QAAA;MAAA,QAvBJ,EA0DG2E,WAAW,KAAK,QAAhB,iBACC,QAAC,UAAD;QACE,OAAO,EAAEvL,OADX;QAEE,MAAM,EAAE4E,MAFV;QAGE,OAAO,EAAEC,OAHX;QAIE,WAAW,EAAEd,WAJf;QAKE,cAAc,EAAEC,cALlB;QAME,UAAU,EAAEnE,UANd;QAOE,YAAY,EAAEO,YAPhB;QAQE,OAAO,EAAE7C,OARX;QASE,MAAM,EAAEwL,MATV;QAUE,iBAAiB,EAAEnC,iBAVrB;QAWE,UAAU,EAAEC,UAXd;QAYE,WAAW,EAAExC;MAZf;QAAA;QAAA;QAAA;MAAA,QA3DJ,EA0EGkH,WAAW,KAAK,QAAhB,iBACC,QAAC,YAAD;QACE,OAAO,EAAEvL,OADX;QAEE,UAAU,EAAEH,UAFd;QAGE,YAAY,EAAElF,YAHhB;QAIE,OAAO,EAAE4C,OAJX;QAKE,kBAAkB,EAAEoB;MALtB;QAAA;QAAA;QAAA;MAAA,QA3EJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAsFD,CAvFD;;EAyFA,MAAMoN,aAAa,GAAG,aAAtB;EACA,IAAI,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC3Q,2BAA2B,CAAC,CAACiC,OAAD,EAAU,gBAAV,CAAD,EAA8BwO,aAA9B,CAAnE;EAEA,MAAM,CAACpB,UAAD,EAAauB,aAAb,IAA8B5S,QAAQ,CAAC;IAC3CgI,QAAQ,EAAE,IADiC;IAE3CD,QAAQ,EAAE;EAFiC,CAAD,CAA5C;EAKA,IAAI,CAAC8K,MAAD,EAASC,SAAT,IAAsB9Q,2BAA2B,CAAC,CAACiC,OAAD,EAAU,cAAV,CAAD,EAA4BH,cAA5B,CAArD;;EACA,IAAI,EAAE+O,MAAM,IAAI7R,aAAZ,CAAJ,EAAgC;IAC9B6R,MAAM,GAAG/O,cAAT;EACD;;EAED,MAAMiP,mBAAmB,GACvB1B,UAAU,CAACrJ,QAAX,IAAuBqJ,UAAU,CAACtJ,QAAlC,GAA6CsJ,UAAU,CAACrJ,QAAX,CAAoBO,GAApB,CAAwB8I,UAAU,CAACtJ,QAAnC,EAA6C7C,GAA7C,CAAiD,CAAjD,CAA7C,GAAmG,IADrG;EAGA,MAAM,CAAC8N,SAAD,EAAYC,eAAZ,IAA+B9Q,cAAc,CACjD8B,OADiD,EAEjDoN,UAAU,CAACpD,MAFsC,EAGjDoD,UAAU,CAACvH,QAHsC,EAIjD+I,MAJiD,EAKjDE,mBALiD,CAAnD;EAQA,MAAMnF,SAAS,GAAGvM,YAAY,CAACkF,UAAD,EAAa+F,gBAAb,CAA9B;EACA,MAAMuB,OAAO,GAAGxM,YAAY,CAACkF,UAAD,EAAagG,cAAb,CAA5B;EAEAxM,SAAS,CAAC,MAAM;IACd,MAAMmT,GAAG,GAAGlQ,aAAa,CAACoJ,UAAD,EAAawB,SAAb,EAAwBC,OAAxB,EAAiC5J,OAAjC,CAAzB;IACA2O,aAAa,CAACM,GAAD,CAAb;EACD,CAHQ,EAGN,CAAC9G,UAAD,EAAawB,SAAb,EAAwBC,OAAxB,EAAiC5J,OAAjC,CAHM,CAAT;;EAKA,IAAI,CAAC3B,QAAQ,CAAC2B,OAAD,EAAUsI,cAAV,CAAb,EAAwC;IACtC,OAAO,IAAP;EACD;;EAED,MAAM4G,mBAAmB,GAAI/N,KAAD,IAAW;IACrCoH,mBAAmB,CAACJ,UAAD,EAAahH,KAAK,CAACE,OAAnB,CAAnB;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,GAAD;MAAK,WAAW,EAAC;IAAjB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,iBAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,SAAS,EAAC,kDAAf;MAAA,uBACE;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,eAAf;UAAA,wBACE;YAAK,SAAS,EAAC,kBAAf;YAAA,wBACE,QAAC,cAAD;cACE,SAAS,EAAE0N,SADb;cAEE,mBAAmB,EAAED,mBAFvB;cAGE,aAAa,EAAEH,aAHjB;cAIE,iBAAiB,EAAE9F,iBAJrB;cAKE,UAAU,EAAEV,UALd;cAME,OAAO,EAAEnI,OANX;cAOE,UAAU,EAAEoN,UAPd;cAQE,WAAW,EAAEtG,WARf;cASE,MAAM,EAAE8H,MATV;cAUE,SAAS,EAAEC,SAVb;cAWE,UAAU,EAAEvM,UAXd;cAYE,aAAa,EAAEmM,aAZjB;cAaE,gBAAgB,EAAEC;YAbpB;cAAA;cAAA;cAAA;YAAA,QADF,eAgBE;cAAK,SAAS,EAAC,sBAAf;cAAA,UACGD,aAAa,KAAK,aAAlB,gBACC,QAAC,eAAD;gBACE,gBAAgB,EAAEpG,gBADpB;gBAEE,cAAc,EAAEC,cAFlB;gBAGE,UAAU,EAAEhG,UAHd;gBAIE,UAAU,EAAE6F,UAJd;gBAKE,OAAO,EAAEnI,OALX;gBAME,SAAS,EAAE4C,SANb;gBAOE,4BAA4B,EAAE8D,4BAPhC;gBAQE,MAAM,EAAE8E,MARV;gBASE,iBAAiB,EAAE3C,iBATrB;gBAUE,cAAc,EAAE9B,cAVlB;gBAWE,WAAW,EAAED,WAXf;gBAYE,UAAU,EAAEsG,UAZd;gBAaE,aAAa,EAAEuB,aAbjB;gBAcE,mBAAmB,EAAEG,mBAdvB;gBAeE,MAAM,EAAEF,MAfV;gBAgBE,SAAS,EAAEC,SAhBb;gBAiBE,SAAS,EAAEE,SAjBb;gBAkBE,eAAe,EAAEC;cAlBnB;gBAAA;gBAAA;gBAAA;cAAA,QADD,gBAsBC,QAAC,uBAAD;gBACE,UAAU,EAAE1M,UADd;gBAEE,UAAU,EAAE8K,UAFd;gBAGE,aAAa,EAAEuB,aAHjB;gBAIE,SAAS,EAAEI,SAJb;gBAKE,MAAM,EAAEH,MALV;gBAME,SAAS,EAAEC,SANb;gBAOE,iBAAiB,EAAEhG,iBAPrB;gBAQE,UAAU,EAAEV,UARd;gBASE,OAAO,EAAEnI,OATX;gBAUE,mBAAmB,EAAE8O,mBAVvB;gBAWE,WAAW,EAAEhI;cAXf;gBAAA;gBAAA;gBAAA;cAAA;YAvBJ;cAAA;cAAA;cAAA;YAAA,QAhBF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAwDE;YAAK,SAAS,EAAC,sBAAf;YAAA,UAAuCuH,cAAc;UAArD;YAAA;YAAA;YAAA;UAAA,QAxDF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eA2DE;UAAK,SAAS,EAAC,gBAAf;UAAA,wBACE,QAAC,OAAD;YACE,gBAAgB,EAAE7M,gBADpB;YAEE,mBAAmB,EAAEyF,mBAFvB;YAGE,6BAA6B,EAAEyE,6BAHjC;YAIE,qCAAqC,EAAEE,qCAJzC;YAKE,gBAAgB,EAAEK,gBALpB;YAME,qBAAqB,EAAEK,qBANzB;YAOE,iBAAiB,EAAET,iBAPrB;YAQE,yBAAyB,EAAEE,yBAR7B;YASE,0BAA0B,EAAEN,0BAT9B;YAUE,kCAAkC,EAAEE,kCAVtC;YAWE,iBAAiB,EAAElC,iBAXrB;YAYE,sBAAsB,EAAEC,sBAZ1B;YAaE,MAAM,EAAE8B,MAbV;YAcE,iBAAiB,EAAED,iBAdrB;YAeE,OAAO,EAAEvL,OAfX;YAgBE,UAAU,EAAEsC,UAhBd;YAiBE,MAAM,EAAE+E,MAjBV;YAkBE,aAAa,EAAET,aAlBjB;YAmBE,OAAO,EAAEU,OAnBX;YAoBE,OAAO,EAAE7E,OApBX;YAqBE,YAAY,EAAEI,YArBhB;YAsBE,gBAAgB,EAAEwF,gBAtBpB;YAuBE,mBAAmB,EAAEE,mBAvBvB;YAwBE,cAAc,EAAED,cAxBlB;YAyBE,iBAAiB,EAAEO,iBAzBrB;YA0BE,UAAU,EAAEV,UA1Bd;YA2BE,aAAa,EAAEC,aA3BjB;YA4BE,WAAW,EAAE5B,WA5Bf;YA6BE,cAAc,EAAEC,cA7BlB;YA8BE,cAAc,EAAEwB,cA9BlB;YA+BE,iBAAiB,EAAEC,iBA/BrB;YAgCE,YAAY,EAAEa,YAhChB;YAiCE,eAAe,EAAEC,eAjCnB;YAkCE,qBAAqB,EAAEC,qBAlCzB;YAmCE,wBAAwB,EAAEC,wBAnC5B;YAoCE,oBAAoB,EAAE9C,oBApCxB;YAqCE,uBAAuB,EAAEC,uBArC3B;YAsCE,kBAAkB,EAAEjF,kBAtCtB;YAuCE,mBAAmB,EAAEmF,mBAvCvB;YAwCE,iBAAiB,EAAE8C,iBAxCrB;YAyCE,UAAU,EAAEC,UAzCd;YA0CE,WAAW,EAAExC;UA1Cf;YAAA;YAAA;YAAA;UAAA,QADF,eA6CE;YAAK,SAAS,EAAC,wBAAf;YAAA,uBACE;cAAK,SAAS,EAAC,gCAAf;cAAA,uBACE,QAAC,oBAAD;gBAAsB,MAAM,EAAElB,MAA9B;gBAAsC,UAAU,EAAEtD,UAAlD;gBAA8D,aAAa,EAAE4M;cAA7E;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QA7CF;QAAA;UAAA;UAAA;UAAA;QAAA,QA3DF,eA8GE;UAAK,SAAS,EAAC,sBAAf;UAAA,UAAuCb,cAAc;QAArD;UAAA;UAAA;UAAA;QAAA,QA9GF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAwHD,CA1qBiC;EAAA,QAyBKjS,YAzBL,EA0BZwB,UA1BY,EA2DYH,wBA3DZ,EAgEIA,wBAhEJ,EA2GyBpB,MA3GzB,EAwHIA,MAxHJ,EA+HHA,MA/HG,EAqIIA,MArIJ,EA4ISA,MA5IT,EAwKhCF,mBAxKgC,EAiUf0B,gBAjUe,EA4WVtB,eA5WU,EA6WHA,eA7WG,EA8WPA,eA9WO,EAyaIkB,wBAzaJ,EA2gBQM,2BA3gBR,EAkhBNA,2BAlhBM,EA0hBKG,cA1hBL;AAAA,GAA3B;MAAM+H,Q"},"metadata":{},"sourceType":"module"}